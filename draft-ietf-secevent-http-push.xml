<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.2 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-secevent-http-push-00" category="std">

  <front>
    <title abbrev="draft-ietf-secevent-http-push">Push-Based SET Token Delivery Using HTTP</title>

    <author initials="A." surname="Backman" fullname="Annabelle Backman" role="editor">
      <organization>Amazon</organization>
      <address>
        <email>richanna@amazon.com</email>
      </address>
    </author>
    <author initials="M." surname="Jones" fullname="Michael B. Jones">
      <organization>Microsoft</organization>
      <address>
        <email>mbj@microsoft.com</email>
        <uri>http://self-issued.info/</uri>
      </address>
    </author>
    <author initials="P." surname="Hunt" fullname="Phil Hunt">
      <organization>Oracle</organization>
      <address>
        <email>phil.hunt@yahoo.com</email>
      </address>
    </author>
    <author initials="M." surname="Scurtescu" fullname="Marius Scurtescu">
      <organization>Google</organization>
      <address>
        <email>mscurtescu@google.com</email>
      </address>
    </author>
    <author initials="M." surname="Ansari" fullname="Morteza Ansari">
      <organization>Cisco</organization>
      <address>
        <email>morteza.ansari@cisco.com</email>
      </address>
    </author>
    <author initials="A." surname="Nadalin" fullname="Anthony Nadalin">
      <organization>Microsoft</organization>
      <address>
        <email>tonynad@microsoft.com</email>
      </address>
    </author>

    <date year="2018" month="August" day="27"/>

    <area>Security</area>
    <workgroup>Security Events Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This specification defines how a series of security event tokens 
(SETs) may be delivered to a previously registered receiver 
using HTTP POST over TLS initiated as a push to the receiver.</t>



    </abstract>


  </front>

  <middle>


<section anchor="intro" title="Introduction and Overview">
<t>This specification defines how SETs (see
<xref target="SET"/>) can be transmitted to a previously 
registered SET Receiver using HTTP <xref target="RFC7231"/> over TLS. The
specification defines a method to push SETs via HTTP POST.</t>

<section anchor="conv" title="Notational Conventions">
<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL
NOT”, “SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”,
“MAY”, and “OPTIONAL” in this document are to be interpreted as
described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when,
they appear in all capitals, as shown here.</t>

<t>For purposes of readability examples are not URL encoded.
Implementers MUST percent encode URLs as described in Section 2.1 of
<xref target="RFC3986"/>.</t>

<t>Throughout this documents all figures MAY contain spaces and extra
line-wrapping for readability and space limitations. Similarly, some
URI’s contained within examples, have been shortened for space and
readability reasons.</t>

</section>
<section anchor="defn" title="Definitions">
<t>This specification assumes terminology defined in the Security
Event Token specification <xref target="SET"/>, as well as the terms defined below:</t>

<t><list style="hanging">
  <t hangText='SET Transmitter'><vspace blankLines='0'/>
  A service provider that delivers SETs to other providers known
as SET Receivers.</t>
  <t hangText='SET Receiver'><vspace blankLines='0'/>
  A service provider that registers to receive SETs from a SET
Transmitter and provides an endpoint to receive SETs via HTTP POST.</t>
</list></t>

</section>
</section>
<section anchor="event_delivery" title="Event Delivery">

<section anchor="event_delivery_process" title="Event Delivery Process">
<t>When an Event occurs, the SET Transmitter constructs a SET
token <xref target="SET"/> that describes the Event.</t>

<t>How SETs are defined and the process by which Events are identified for 
SET Receivers is out-of-scope of this    specification.</t>

<t>When a SET is available for a SET Receiver, the SET Transmitter
attempts to deliver the SET based on the SET Receiver’s registered
delivery mechanism:</t>

<t><list style="symbols">
  <t>The SET Transmitter uses an HTTP/1.1 POST to the SET Receiver
endpoint to deliver the SET;</t>
  <t>Or, the SET Transmitter delivers the Event through a different
method not defined by this specification.</t>
</list></t>

<t>In Push-Based SET Delivery Using HTTP, SETs are delivered one at a
time using HTTP POST requests by a SET Transmitter to a SET
Receiver. The HTTP request body is a JSON Web Token <xref target="RFC7519"/>
with a <spanx style="verb">Content-Type</spanx> header of <spanx style="verb">application/secevent+jwt</spanx> as
defined in Section 2.2 and 6.2 of <xref target="SET"/>. Upon receipt, the 
SET Receiver acknowledges receipt with a response with HTTP 
Status 202, as described below in <xref target="tx_request"/>.</t>

<t>After successful (acknowledged) SET delivery, SET 
Transmitters SHOULD NOT be required to maintain or record SETs for 
recovery. Once a SET is acknowledged, the SET Receiver SHALL be 
responsible for retention and recovery.</t>

<t>Transmitted SETs SHOULD be self-validating (e.g. signed)
if there is a requirement to verify they were issued by the SET 
Transmitter at a later date when de-coupled from the original 
delivery where authenticity could be checked via the HTTP or 
TLS mutual authentication.</t>

<t>Upon receiving a SET, the SET Receiver reads the SET and validates 
it. The SET Receiver MUST acknowledge receipt to the SET Transmitter, using the 
defined acknowledgement or error method.</t>

<t>The SET Receiver SHALL NOT use the Event acknowledgement mechanism
to report Event errors other than relating to the parsing and validation
of the SET.</t>

</section>
<section anchor="tx_request" title="Transmitting a SET">
<t>This method allows a SET Transmitter to use HTTP POST 
(Section 4.3.3 <xref target="RFC7231"/>) to deliver
SETs to a previously registered web callback URI supplied by the
SET Receiver as part of a configuration process 
(not defined by this document).</t>

<t>The SET to be delivered MAY be signed 
and/or encrypted as defined in <xref target="SET"/>.</t>

<t>The HTTP Content-Type (see 
Section 3.1.1.5 <xref target="RFC7231"/>) for the HTTP POST is 
<spanx style="verb">application/secevent+jwt</spanx> and SHALL consist of 
a single SET (see <xref target="SET"/>).
As per Section 5.3.2 <xref target="RFC7231"/>, the expected 
media type (<spanx style="verb">Accept</spanx> header) response is 
<spanx style="verb">application/json</spanx>.</t>

<t>To deliver an Event, the SET Transmitter generates an event 
delivery message and uses HTTP POST to the configured endpoint with
the appropriate <spanx style="verb">Accept</spanx> and 
<spanx style="verb">Content-Type</spanx> headers.</t>

<figure title="Example SET Transmission Request" anchor="postSet"><artwork><![CDATA[
POST /Events  HTTP/1.1

Host: notify.examplerp.com
Accept: application/json
Content-Type: application/secevent+jwt
eyJhbGciOiJub25lIn0
.
eyJwdWJsaXNoZXJVcmkiOiJodHRwczovL3NjaW0uZXhhbXBsZS5jb20iLCJmZWV
kVXJpcyI6WyJodHRwczovL2podWIuZXhhbXBsZS5jb20vRmVlZHMvOThkNTI0Nj
FmYTViYmM4Nzk1OTNiNzc1NCIsImh0dHBzOi8vamh1Yi5leGFtcGxlLmNvbS9GZ
WVkcy81ZDc2MDQ1MTZiMWQwODY0MWQ3Njc2ZWU3Il0sInJlc291cmNlVXJpcyI6
WyJodHRwczovL3NjaW0uZXhhbXBsZS5jb20vVXNlcnMvNDRmNjE0MmRmOTZiZDZ
hYjYxZTc1MjFkOSJdLCJldmVudFR5cGVzIjpbIkNSRUFURSJdLCJhdHRyaWJ1dG
VzIjpbImlkIiwibmFtZSIsInVzZXJOYW1lIiwicGFzc3dvcmQiLCJlbWFpbHMiX
SwidmFsdWVzIjp7ImVtYWlscyI6W3sidHlwZSI6IndvcmsiLCJ2YWx1ZSI6Impk
b2VAZXhhbXBsZS5jb20ifV0sInBhc3N3b3JkIjoibm90NHUybm8iLCJ1c2VyTmF
tZSI6Impkb2UiLCJpZCI6IjQ0ZjYxNDJkZjk2YmQ2YWI2MWU3NTIxZDkiLCJuYW
1lIjp7ImdpdmVuTmFtZSI6IkpvaG4iLCJmYW1pbHlOYW1lIjoiRG9lIn19fQ
.
]]></artwork></figure>

</section>
<section anchor="tx_handling" title="Handling a SET Transmission Request">
<t>Upon receipt of the request, the SET Receiver SHALL 
validate the JWT structure of the SET as defined in 
Section 7.2 <xref target="RFC7519"/>. The SET Receiver 
SHALL also validate the SET information as described
in Section 2 <xref target="SET"/>.</t>

<section anchor="tx_success" title="Success Response">
<t>If the SET is determined to be valid, the SET Receiver SHALL
“acknowledge” successful submission by responding with HTTP Status
202 as <spanx style="verb">Accepted</spanx> 
(see Section 6.3.3 <xref target="RFC7231"/>).</t>

<t>In order
to maintain compatibility with other methods of transmission, the 
SET Receiver SHOULD NOT include an HTTP response body representation
of the submitted SET or what the SET’s pending status is when 
acknowledging success. In the case of an error (e.g. HTTP Status 400),
the purpose of the HTTP response body is to indicate any SET parsing, 
validation, or cryptographic errors.</t>

<t>The following is a non-normative example of a successful
receipt of a SET.</t>

<figure title="Example Successful Delivery Response" anchor="goodPostResponse"><artwork><![CDATA[
HTTP/1.1 202 Accepted
]]></artwork></figure>

<t>Note that the purpose of the “acknowledgement” response is to let the 
SET Transmitter know that a SET has been delivered and the 
information no longer needs to be retained by the SET Transmitter. 
Before acknowledgement, SET Receivers SHOULD ensure they have 
validated received SETs and retained them in a manner appropriate 
to information retention requirements appropriate to the SET 
event types signaled. The level and method of retention of SETs
by SET Receivers is out-of-scope of this specification.</t>

</section>
<section anchor="tx_failure" title="Failure Response">
<t>In the Event of a general HTTP error condition, the SET Receiver
MAY respond with an appropriate HTTP Status code as defined in 
Section 6 <xref target="RFC7231"/>.</t>

<t>When the SET Receiver detects an error parsing or 
validating a received SET (as defined by <xref target="SET"/>), 
the SET Receiver SHALL indicate an HTTP Status 400 error with an 
error response as described in <xref target="errorResponse"/>.</t>

<t>The following is an example non-normative error 
response.</t>

<figure title="Example Error Response" anchor="badPostResponse"><artwork><![CDATA[
HTTP/1.1 400 Bad Request
Content-Type: application/json

{
  "err":"dup",
  "description":"SET already received. Ignored."

}
]]></artwork></figure>

</section>
<section anchor="error_codes" title="Security Event Token Delivery Error Codes">
<t>Security Event Token Delivery Error Codes are strings that identify a specific type of error that may occur when parsing or validating a SET. Every Security Event Token Delivery Error Code MUST have a unique name registered in the IANA “Security Event Token Delivery Error Codes” registry established by <xref target="iana_set_errors"/>.</t>

<t>The following table presents the initial set of Error Codes that are registered in the IANA “Security Event Token Delivery Error Codes” registry:</t>

<texttable title="SET Delivery Error Codes" anchor="tabErrors">
      <ttcol align='left'>Err Value</ttcol>
      <ttcol align='left'>Description</ttcol>
      <c>json</c>
      <c>Invalid JSON object.</c>
      <c>jwtParse</c>
      <c>Invalid or unparsable JWT or JSON structure.</c>
      <c>jwtHdr</c>
      <c>In invalid JWT header was detected.</c>
      <c>jwtCrypto</c>
      <c>Unable to parse due to unsupported algorithm.</c>
      <c>jws</c>
      <c>Signature was not validated.</c>
      <c>jwe</c>
      <c>Unable to decrypt JWE encoded data.</c>
      <c>jwtAud</c>
      <c>Invalid audience value.</c>
      <c>jwtIss</c>
      <c>Issuer not recognized.</c>
      <c>setType</c>
      <c>An unexpected Event type was received.</c>
      <c>setParse</c>
      <c>Invalid structure was encountered such as an inability to parse or an incomplete set of Event claims.</c>
      <c>setData</c>
      <c>SET event claims incomplete or invalid.</c>
      <c>dup</c>
      <c>A duplicate SET was received and has been ignored.</c>
</texttable>

</section>
<section anchor="errorResponse" title="Error Response Handling">
<t>An error response SHALL include a JSON
object which provides details about the error. The JSON object
includes the JSON attributes:</t>

<t><list style="hanging">
  <t hangText='err'><vspace blankLines='0'/>
  A Security Event Token Delivery Error Code (see <xref target="error_codes"/>).
description</t>
  <t>A human-readable text that provides
additional diagnostic information.</t>
</list></t>

<t>When included as part of an HTTP Status 400 response, the above
JSON is the HTTP response body (see <xref target="badPostResponse"/>).</t>

</section>
</section>
</section>
<section anchor="aa" title="Authentication and Authorization">

<t>The SET delivery method described in this specification is
based upon HTTP and depends on the use of TLS and/or standard 
HTTP authentication and authorization schemes as per 
<xref target="RFC7235"/>.</t>

<t>Because SET Delivery describes a simple function, authorization
for the ability to pick-up or deliver SETs can be derived by
considering the identity of the SET issuer, or via other employed
authentication methods.  Because SETs are
not commands (see ), SET Receivers are free to ignore SETs that 
are not of interest.</t>

</section>
<section anchor="Security" title="Security Considerations">

<section anchor="payloadAuthentication" title="Authentication Using Signed SETs">
<t>In scenarios where HTTP authorization or TLS mutual authentication
are not used or are considered weak, JWS signed SETs SHOULD be 
used (see <xref target="RFC7515"/> and 
Security Considerations <xref target="SET"/>). This enables the SET Receiver
to validate that the SET issuer is authorized to deliver SETs.</t>

</section>
<section anchor="tls-support-considerations" title="TLS Support Considerations">
<t>SETs contain sensitive information that is considered PII
(e.g. subject claims). Therefore, SET Transmitters and
SET Receivers MUST require the use of a transport-layer 
security mechanism. Event delivery endpoints MUST support TLS 
1.2 <xref target="RFC5246"/> and MAY support additional 
transport-layer mechanisms meeting its security requirements. 
When using TLS, the client MUST perform a TLS/SSL server
certificate check, per <xref target="RFC6125"/>. Implementation
security considerations for TLS can be found in “Recommendations for
Secure Use of TLS and DTLS” <xref target="RFC7525"/>.</t>

</section>
<section anchor="denial-of-service" title="Denial of Service">
<t>The SET Receiver may be vulnerable to a denial-of-service attack where a malicious party makes a high volume of requests containing invalid SETs, causing the endpoint to expend significant resources on cryptographic operations that are bound to fail. This may be mitigated by authenticating SET Transmitters with a mechanism with low runtime overhead, such as mutual TLS or statically assigned bearer tokens.</t>

</section>
</section>
<section anchor="privacy-considerations" title="Privacy Considerations">

<t>If a SET needs to be retained for audit purposes, JWS MAY 
be used to provide verification of its authenticity.</t>

<t>When sharing personally identifiable information or information
that is otherwise considered confidential to affected users, SET 
Transmitters and Receivers MUST have the appropriate legal agreements
and user consent or terms of service in place.</t>

<t>The propagation of subject identifiers can be perceived as personally
identifiable information. Where possible, SET Transmitters and Receivers
SHOULD devise approaches that prevent propagation — for example, the
passing of a hash value that requires the subscriber to already know
the subject.</t>

</section>
<section anchor="IANA" title="IANA Considerations">

<section anchor="iana_set_errors" title="Security Event Token Delivery Error Codes">
<t>This document defines Security Event Token Delivery Error Codes, for which IANA is asked to create and maintain a new registry titled “Security Event Token Delivery Error Codes”.  Initial values for the Security Event Token Delivery Error Codes registry are given in <xref target="tabErrors"/>.  Future assignments are to be made through the Expert Review registration policy (<xref target="BCP26"/>) and shall follow the template presented in <xref target="iana_set_errors_template"/>.</t>

<section anchor="iana_set_errors_template" title="Registration Template">

<t><list style="hanging">
  <t hangText='Error Code'><vspace blankLines='0'/>
  The name of the Security Event Token Delivery Error Code, as described in <xref target="error_codes"/>. The name MUST be a case-sensitive ASCII string consisting only of upper-case letters (“A” - “Z”), lower-case letters (“a” - “z”), and digits (“0” - “9”).</t>
  <t hangText='Descrption'><vspace blankLines='0'/>
  A brief human-readable description of the Security Event Token Delivery Error Code.</t>
  <t hangText='Change Controller'><vspace blankLines='0'/>
  For error codes registered by the IETF or its working groups, list “IETF Secevent Working Group”.  For all other error codes, list the name of the party responsible for the registration.  Contact information such as mailing address, email address, or phone number may also be provided.</t>
  <t hangText='Defining Document(s)'><vspace blankLines='0'/>
  A reference to the document or documents that define the Security Event Token Delivery Error Code. The definition MUST specify the name and description of the error code, and explain under what circumstances the error code may be used. URIs that can be used to retrieve copies of each document at no cost SHOULD be included.</t>
</list></t>

</section>
<section anchor="initial-registry-contents" title="Initial Registry Contents">

<section anchor="json" title="json">
<t><list style="symbols">
  <t>Name: json</t>
  <t>Description: Invalid JSON object.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jwtparse" title="jwtParse">
<t><list style="symbols">
  <t>Name: jwtParse</t>
  <t>Description: Invalid or unparsable JWT or JSON structure.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jwthdr" title="jwtHdr">
<t><list style="symbols">
  <t>Name: jwtHdr</t>
  <t>Description: In invalid JWT header was detected.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jwtcrypto" title="jwtCrypto">
<t><list style="symbols">
  <t>Name: jwtCrypto</t>
  <t>Description: Unable to parse due to unsupported algorithm.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jws" title="jws">
<t><list style="symbols">
  <t>Name: jws</t>
  <t>Description: Signature was not validated.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jwe" title="jwe">
<t><list style="symbols">
  <t>Name: jwe</t>
  <t>Description: Unable to decrypt JWE encoded data.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jwtaud" title="jwtAud">
<t><list style="symbols">
  <t>Name: jwtAud</t>
  <t>Description: Invalid audience value.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jwtiss" title="jwtIss">
<t><list style="symbols">
  <t>Name: jwtIss</t>
  <t>Description: Issuer not recognized.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="settype" title="setType">
<t><list style="symbols">
  <t>Name: setType</t>
  <t>Description: An unexpected Event type was received.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="setparse" title="setParse">
<t><list style="symbols">
  <t>Name: setParse</t>
  <t>Description: Invalid structure was encountered such as an inability to parse or an incomplete set of Event claims.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="setdata" title="setData">
<t><list style="symbols">
  <t>Name: setData</t>
  <t>Description: SET event claims incomplete or invalid.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="dup" title="dup">
<t><list style="symbols">
  <t>Name: dup</t>
  <t>Description: A duplicate SET was received and has been ignored.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
</section>
</section>
</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor="SET" target='https://www.rfc-editor.org/info/rfc8417'>
<front>
<title>Security Event Token (SET)</title>
<author initials='P.' surname='Hunt' fullname='P. Hunt' role='editor'><organization /></author>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='W.' surname='Denniss' fullname='W. Denniss'><organization /></author>
<author initials='M.' surname='Ansari' fullname='M. Ansari'><organization /></author>
<date year='2018' month='July' />
<abstract><t>This specification defines the Security Event Token (SET) data structure.  A SET describes statements of fact from the perspective of an issuer about a subject.  These statements of fact represent an event that occurred directly to or about a security subject, for example, a statement about the issuance or revocation of a token on behalf of a subject.  This specification is intended to enable representing security- and identity-related events.  A SET is a JSON Web Token (JWT), which can be optionally signed and/or encrypted. SETs can be distributed via protocols such as HTTP.</t></abstract>
</front>
<seriesInfo name='RFC' value='8417'/>
<seriesInfo name='DOI' value='10.17487/RFC8417'/>
</reference>



<reference  anchor="BCP26" target='https://www.rfc-editor.org/info/rfc8126'>
<front>
<title>Guidelines for Writing an IANA Considerations Section in RFCs</title>
<author initials='M.' surname='Cotton' fullname='M. Cotton'><organization /></author>
<author initials='B.' surname='Leiba' fullname='B. Leiba'><organization /></author>
<author initials='T.' surname='Narten' fullname='T. Narten'><organization /></author>
<date year='2017' month='June' />
<abstract><t>Many protocols make use of points of extensibility that use constants to identify various protocol parameters.  To ensure that the values in these fields do not have conflicting uses and to promote interoperability, their allocations are often coordinated by a central record keeper.  For IETF protocols, that role is filled by the Internet Assigned Numbers Authority (IANA).</t><t>To make assignments in a given registry prudently, guidance describing the conditions under which new values should be assigned, as well as when and how modifications to existing values can be made, is needed.  This document defines a framework for the documentation of these guidelines by specification authors, in order to assure that the provided guidance for the IANA Considerations is clear and addresses the various issues that are likely in the operation of a registry.</t><t>This is the third edition of this document; it obsoletes RFC 5226.</t></abstract>
</front>
<seriesInfo name='BCP' value='26'/>
<seriesInfo name='RFC' value='8126'/>
<seriesInfo name='DOI' value='10.17487/RFC8126'/>
</reference>



<reference  anchor="RFC7231" target='https://www.rfc-editor.org/info/rfc7231'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines the semantics of HTTP/1.1 messages, as expressed by request methods, request header fields, response status codes, and response header fields, along with the payload of messages (metadata and body content) and mechanisms for content negotiation.</t></abstract>
</front>
<seriesInfo name='RFC' value='7231'/>
<seriesInfo name='DOI' value='10.17487/RFC7231'/>
</reference>



<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC8174" target='https://www.rfc-editor.org/info/rfc8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author initials='B.' surname='Leiba' fullname='B. Leiba'><organization /></author>
<date year='2017' month='May' />
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>



<reference  anchor="RFC3986" target='https://www.rfc-editor.org/info/rfc3986'>
<front>
<title>Uniform Resource Identifier (URI): Generic Syntax</title>
<author initials='T.' surname='Berners-Lee' fullname='T. Berners-Lee'><organization /></author>
<author initials='R.' surname='Fielding' fullname='R. Fielding'><organization /></author>
<author initials='L.' surname='Masinter' fullname='L. Masinter'><organization /></author>
<date year='2005' month='January' />
<abstract><t>A Uniform Resource Identifier (URI) is a compact sequence of characters that identifies an abstract or physical resource.  This specification defines the generic URI syntax and a process for resolving URI references that might be in relative form, along with guidelines and security considerations for the use of URIs on the Internet.  The URI syntax defines a grammar that is a superset of all valid URIs, allowing an implementation to parse the common components of a URI reference without knowing the scheme-specific requirements of every possible identifier.  This specification does not define a generative grammar for URIs; that task is performed by the individual specifications of each URI scheme.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='STD' value='66'/>
<seriesInfo name='RFC' value='3986'/>
<seriesInfo name='DOI' value='10.17487/RFC3986'/>
</reference>



<reference  anchor="RFC7519" target='https://www.rfc-editor.org/info/rfc7519'>
<front>
<title>JSON Web Token (JWT)</title>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='J.' surname='Bradley' fullname='J. Bradley'><organization /></author>
<author initials='N.' surname='Sakimura' fullname='N. Sakimura'><organization /></author>
<date year='2015' month='May' />
<abstract><t>JSON Web Token (JWT) is a compact, URL-safe means of representing claims to be transferred between two parties.  The claims in a JWT are encoded as a JSON object that is used as the payload of a JSON Web Signature (JWS) structure or as the plaintext of a JSON Web Encryption (JWE) structure, enabling the claims to be digitally signed or integrity protected with a Message Authentication Code (MAC) and/or encrypted.</t></abstract>
</front>
<seriesInfo name='RFC' value='7519'/>
<seriesInfo name='DOI' value='10.17487/RFC7519'/>
</reference>



<reference  anchor="RFC7235" target='https://www.rfc-editor.org/info/rfc7235'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Authentication</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application- level protocol for distributed, collaborative, hypermedia information systems.  This document defines the HTTP Authentication framework.</t></abstract>
</front>
<seriesInfo name='RFC' value='7235'/>
<seriesInfo name='DOI' value='10.17487/RFC7235'/>
</reference>



<reference  anchor="RFC7515" target='https://www.rfc-editor.org/info/rfc7515'>
<front>
<title>JSON Web Signature (JWS)</title>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='J.' surname='Bradley' fullname='J. Bradley'><organization /></author>
<author initials='N.' surname='Sakimura' fullname='N. Sakimura'><organization /></author>
<date year='2015' month='May' />
<abstract><t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures.  Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification.  Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t></abstract>
</front>
<seriesInfo name='RFC' value='7515'/>
<seriesInfo name='DOI' value='10.17487/RFC7515'/>
</reference>



<reference  anchor="RFC5246" target='https://www.rfc-editor.org/info/rfc5246'>
<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.2</title>
<author initials='T.' surname='Dierks' fullname='T. Dierks'><organization /></author>
<author initials='E.' surname='Rescorla' fullname='E. Rescorla'><organization /></author>
<date year='2008' month='August' />
<abstract><t>This document specifies Version 1.2 of the Transport Layer Security (TLS) protocol.  The TLS protocol provides communications security over the Internet.  The protocol allows client/server applications to communicate in a way that is designed to prevent eavesdropping, tampering, or message forgery.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5246'/>
<seriesInfo name='DOI' value='10.17487/RFC5246'/>
</reference>



<reference  anchor="RFC6125" target='https://www.rfc-editor.org/info/rfc6125'>
<front>
<title>Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)</title>
<author initials='P.' surname='Saint-Andre' fullname='P. Saint-Andre'><organization /></author>
<author initials='J.' surname='Hodges' fullname='J. Hodges'><organization /></author>
<date year='2011' month='March' />
<abstract><t>Many application technologies enable secure communication between two entities by means of Internet Public Key Infrastructure Using X.509 (PKIX) certificates in the context of Transport Layer Security (TLS). This document specifies procedures for representing and verifying the identity of application services in such interactions.   [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6125'/>
<seriesInfo name='DOI' value='10.17487/RFC6125'/>
</reference>




    </references>

    <references title='Informative References'>





<reference  anchor="RFC7525" target='https://www.rfc-editor.org/info/rfc7525'>
<front>
<title>Recommendations for Secure Use of Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS)</title>
<author initials='Y.' surname='Sheffer' fullname='Y. Sheffer'><organization /></author>
<author initials='R.' surname='Holz' fullname='R. Holz'><organization /></author>
<author initials='P.' surname='Saint-Andre' fullname='P. Saint-Andre'><organization /></author>
<date year='2015' month='May' />
<abstract><t>Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS) are widely used to protect data exchanged over application protocols such as HTTP, SMTP, IMAP, POP, SIP, and XMPP.  Over the last few years, several serious attacks on TLS have emerged, including attacks on its most commonly used cipher suites and their modes of operation.  This document provides recommendations for improving the security of deployed services that use TLS and DTLS. The recommendations are applicable to the majority of use cases.</t></abstract>
</front>
<seriesInfo name='BCP' value='195'/>
<seriesInfo name='RFC' value='7525'/>
<seriesInfo name='DOI' value='10.17487/RFC7525'/>
</reference>




    </references>


<section anchor="other-streaming-specifications" title="Other Streaming Specifications">
<t>[[EDITORS NOTE: This section to be removed prior to publication]]</t>

<t>The following pub/sub, queuing, streaming systems were reviewed 
as possible solutions or as input to the current draft:</t>

<t>XMPP Events</t>

<t>The WG considered the XMPP events ands its ability to provide a single
messaging solution without the need for both polling and push modes.
The feeling was the size and methodology of XMPP was to far apart from
the current capabilities of the SECEVENTs community which focuses in
on HTTP based service delivery and authorization.</t>

<t>Amazon Simple Notification Service</t>

<t>Simple Notification Service, is a pub/sub messaging product from 
AWS. SNS supports a variety of subscriber types: HTTP/HTTPS endpoints, 
AWS Lambda functions, email addresses (as JSON or plain text), phone 
numbers (via SMS), and AWS SQS standard queues. It doesn’t directly 
support pull, but subscribers can get the pull model by creating an 
SQS queue and subscribing it to the topic. Note that this puts the 
cost of pull support back onto the subscriber, just as it is in the 
push model. It is not clear that one way is strictly better than the 
other; larger, sophisticated developers may be happy to own message 
persistence so they can have their own internal delivery guarantees. 
The long tail of OIDC clients may not care about that, or may fail 
to get it right. Regardless, I think we can learn something from the 
Delivery Policies supported by SNS, as well as the delivery controls 
that SQS offers (e.g. Visibility Timeout, Dead-Letter Queues). I’m 
not suggesting that we need all of these things in the spec, but 
they give an idea of what features people have found useful.</t>

<t>Other information:</t>

<t><list style="symbols">
  <t>API Reference: http://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/Welcome.html</t>
  <t>Visibility Timeouts: http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-visibility-timeout.html</t>
</list></t>

<t>Apache Kafka</t>

<t>Apache Kafka is an Apache open source project based upon TCP for 
distributed streaming. It prescribes some interesting general 
purpose features that seem to extend far beyond the simpler 
streaming model SECEVENTs is after. A comment from MS has been that 
Kafka does an acknowledge with poll combination event which seems 
to be a performance advantage. See: https://kafka.apache.org/intro</t>

<t>Google Pub/Sub</t>

<t>Google Pub Sub system favours a model whereby polling and acknowledgement
of events is done as separate endpoints as separate functions.</t>

<t>Information:</t>

<t><list style="symbols">
  <t>Cloud Overview - https://cloud.google.com/pubsub/</t>
  <t>Subscriber Overview - https://cloud.google.com/pubsub/docs/subscriber</t>
  <t>Subscriber Pull(poll) - https://cloud.google.com/pubsub/docs/pull</t>
</list></t>

</section>
<section anchor="acknowledgments" title="Acknowledgments">
<t>The editors would like to thanks the members of the SCIM WG which 
began discussions of provisioning events starting with: draft-hunt-scim-notify-00 in 2015.</t>

<t>The editors would like to thank the authors of draft-ietf-secevent-delivery-02,
on which this draft is based.</t>

<t>The editor would like to thank the participants in the the SECEVENTS
working group for their support of this specification.</t>

</section>
<section anchor="change-log" title="Change Log">
<t>Draft 00 - AB - Based on draft-ietf-secevent-delivery-02 with the 
following changes:</t>

<t><list style="symbols">
  <t>Renamed to “Push-Based SET Token Delivery Using HTTP”</t>
  <t>Removed references to the HTTP Polling delivery method.</t>
  <t>Removed informative reference to RFC6202.</t>
</list></t>

<t>Draft 01 - AB</t>

<t><list style="symbols">
  <t>Converted to Markdown</t>
  <t>Removed NumericDate definition (unused).</t>
  <t>Removed Event and Subject definitions (defined in SET).</t>
  <t>Removed text related to Event Streams.</t>
  <t>Removed Mike Jones and Phil Hunt as editors, per respective requests.</t>
  <t>Fixed area and workgroup to match secevent.</t>
  <t>Renamed Event Transmitter and Event Receiver to SET Transmitter and SET Receiver, respectively.</t>
  <t>Added IANA registry for SET Delivery Error Codes.</t>
  <t>Removed enumeration of HTTP authentication methods.</t>
  <t>Removed generally applicable guidance for HTTP, authorization tokens, andbearer tokens.</t>
  <t>Elaborated on guidance for DoS protection via authn, and moved it to Security Considerations.</t>
  <t>Removed redundant instruction to use <spanx style="verb">WWW-Authenticate</spanx> header.</t>
  <t>Removed further generally applicable guidance for authorization tokens.</t>
  <t>Removed bearer token from example delivery request, and removed text explaining it was an example only.</t>
  <t>Broke delivery method description into separate request/response sections.</t>
</list></t>

</section>


  </back>

<!-- ##markdown-source:
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

-->

</rfc>

