<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.2 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-secevent-http-push-00" category="std">

  <front>
    <title abbrev="draft-ietf-secevent-http-push">Push-Based SET Token Delivery Using HTTP</title>

    <author initials="A." surname="Backman" fullname="Annabelle Backman" role="editor">
      <organization>Amazon</organization>
      <address>
        <email>richanna@amazon.com</email>
      </address>
    </author>
    <author initials="M." surname="Jones" fullname="Michael B. Jones">
      <organization>Microsoft</organization>
      <address>
        <email>mbj@microsoft.com</email>
        <uri>http://self-issued.info/</uri>
      </address>
    </author>
    <author initials="P." surname="Hunt" fullname="Phil Hunt">
      <organization>Oracle</organization>
      <address>
        <email>phil.hunt@yahoo.com</email>
      </address>
    </author>
    <author initials="M." surname="Scurtescu" fullname="Marius Scurtescu">
      <organization>Google</organization>
      <address>
        <email>mscurtescu@google.com</email>
      </address>
    </author>
    <author initials="M." surname="Ansari" fullname="Morteza Ansari">
      <organization>Cisco</organization>
      <address>
        <email>morteza.ansari@cisco.com</email>
      </address>
    </author>
    <author initials="A." surname="Nadalin" fullname="Anthony Nadalin">
      <organization>Microsoft</organization>
      <address>
        <email>tonynad@microsoft.com</email>
      </address>
    </author>

    <date year="2018" month="August" day="27"/>

    <area>Security</area>
    <workgroup>Security Events Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This specification defines how a series of security event tokens 
(SETs) may be delivered to a previously registered receiver 
using HTTP POST over TLS initiated as a push to the receiver.</t>



    </abstract>


  </front>

  <middle>


<section anchor="intro" title="Introduction and Overview">
<t>This specification defines how SETs (see
<xref target="SET"/>) can be transmitted to a previously 
registered SET Receiver using HTTP <xref target="RFC7231"/> over TLS. The
specification defines a method to push SETs via HTTP POST.</t>

<section anchor="conv" title="Notational Conventions">
<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL
NOT”, “SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”,
“MAY”, and “OPTIONAL” in this document are to be interpreted as
described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when,
they appear in all capitals, as shown here.</t>

<t>For purposes of readability examples are not URL encoded.
Implementers MUST percent encode URLs as described in Section 2.1 of
<xref target="RFC3986"/>.</t>

<t>Throughout this documents all figures MAY contain spaces and extra
line-wrapping for readability and space limitations. Similarly, some
URI’s contained within examples, have been shortened for space and
readability reasons.</t>

</section>
<section anchor="defn" title="Definitions">
<t>This specification assumes terminology defined in the Security
Event Token specification <xref target="SET"/>, as well as the terms defined below:</t>

<t><list style="hanging">
  <t hangText='SET Transmitter'><vspace blankLines='0'/>
  A service provider that delivers SETs to other providers known
as SET Receivers.</t>
  <t hangText='SET Receiver'><vspace blankLines='0'/>
  A service provider that registers to receive SETs from an SET
Transmitter and provides an endpoint to receive SETs via HTTP POST.</t>
</list></t>

</section>
</section>
<section anchor="event_delivery" title="Event Delivery">

<section anchor="event_delivery_process" title="Event Delivery Process">
<t>When an Event occurs, the SET Transmitter constructs a SET
token <xref target="SET"/> that describes the Event.</t>

<t>How SETs are defined and the process by which Events are identified for 
SET Receivers is out-of-scope of this    specification.</t>

<t>When a SET is available for an SET Receiver, the SET Transmitter
attempts to deliver the SET based on the SET Receiver’s registered
delivery mechanism:</t>

<t><list style="symbols">
  <t>The SET Transmitter uses an HTTP/1.1 POST to the SET Receiver
endpoint to deliver the SET;</t>
  <t>Or, the SET Transmitter delivers the Event through a different
method not defined by this specification.</t>
</list></t>

<t>In Push-Based SET Delivery Using HTTP, SETs are delivered one at a
time using HTTP POST requests by an SET Transmitter to an SET
Receiver. The HTTP request body is a JSON Web Token <xref target="RFC7519"/>
with a <spanx style="verb">Content-Type</spanx> header of <spanx style="verb">application/secevent+jwt</spanx> as
defined in Section 2.2 and 6.2 of <xref target="SET"/>. Upon receipt, the 
SET Receiver acknowledges receipt with a response with HTTP 
Status 202, as described below in <xref target="tx_request"/>.</t>

<t>After successful (acknowledged) SET delivery, SET 
Transmitters SHOULD NOT be required to maintain or record SETs for 
recovery. Once a SET is acknowledged, the SET Receiver SHALL be 
responsible for retention and recovery.</t>

<t>Transmitted SETs SHOULD be self-validating (e.g. signed)
if there is a requirement to verify they were issued by the SET 
Transmitter at a later date when de-coupled from the original 
delivery where authenticity could be checked via the HTTP or 
TLS mutual authentication.</t>

<t>Upon receiving a SET, the SET Receiver reads the SET and validates 
it. The SET Receiver MUST acknowledge receipt to the SET Transmitter, using the 
defined acknowledgement or error method.</t>

<t>The SET Receiver SHALL NOT use the Event acknowledgement mechanism
to report Event errors other than relating to the parsing and validation
of the SET.</t>

</section>
<section anchor="tx_request" title="Transmitting a SET">
<t>This method allows an SET Transmitter to use HTTP POST 
(Section 4.3.3 <xref target="RFC7231"/>) to deliver
SETs to a previously registered web callback URI supplied by the
SET Receiver as part of a configuration process 
(not defined by this document).</t>

<t>The SET to be delivered MAY be signed 
and/or encrypted as defined in <xref target="SET"/>.</t>

<t>The HTTP Content-Type (see 
Section 3.1.1.5 <xref target="RFC7231"/>) for the HTTP POST is 
<spanx style="verb">application/secevent+jwt</spanx> and SHALL consist of 
a single SET (see <xref target="SET"/>).
As per Section 5.3.2 <xref target="RFC7231"/>, the expected 
media type (<spanx style="verb">Accept</spanx> header) response is 
<spanx style="verb">application/json</spanx>.</t>

<t>To deliver an Event, the SET Transmitter generates an event 
delivery message and uses HTTP POST to the configured endpoint with
the appropriate <spanx style="verb">Accept</spanx> and 
<spanx style="verb">Content-Type</spanx> headers.</t>

<figure title="Example SET Transmission Request" anchor="postSet"><artwork><![CDATA[
POST /Events  HTTP/1.1

Host: notify.examplerp.com
Accept: application/json
Content-Type: application/secevent+jwt
eyJhbGciOiJub25lIn0
.
eyJwdWJsaXNoZXJVcmkiOiJodHRwczovL3NjaW0uZXhhbXBsZS5jb20iLCJmZWV
kVXJpcyI6WyJodHRwczovL2podWIuZXhhbXBsZS5jb20vRmVlZHMvOThkNTI0Nj
FmYTViYmM4Nzk1OTNiNzc1NCIsImh0dHBzOi8vamh1Yi5leGFtcGxlLmNvbS9GZ
WVkcy81ZDc2MDQ1MTZiMWQwODY0MWQ3Njc2ZWU3Il0sInJlc291cmNlVXJpcyI6
WyJodHRwczovL3NjaW0uZXhhbXBsZS5jb20vVXNlcnMvNDRmNjE0MmRmOTZiZDZ
hYjYxZTc1MjFkOSJdLCJldmVudFR5cGVzIjpbIkNSRUFURSJdLCJhdHRyaWJ1dG
VzIjpbImlkIiwibmFtZSIsInVzZXJOYW1lIiwicGFzc3dvcmQiLCJlbWFpbHMiX
SwidmFsdWVzIjp7ImVtYWlscyI6W3sidHlwZSI6IndvcmsiLCJ2YWx1ZSI6Impk
b2VAZXhhbXBsZS5jb20ifV0sInBhc3N3b3JkIjoibm90NHUybm8iLCJ1c2VyTmF
tZSI6Impkb2UiLCJpZCI6IjQ0ZjYxNDJkZjk2YmQ2YWI2MWU3NTIxZDkiLCJuYW
1lIjp7ImdpdmVuTmFtZSI6IkpvaG4iLCJmYW1pbHlOYW1lIjoiRG9lIn19fQ
.
]]></artwork></figure>

</section>
<section anchor="tx_handling" title="Handling a SET Transmission Request">
<t>Upon receipt of the request, the SET Receiver SHALL 
validate the JWT structure of the SET as defined in 
Section 7.2 <xref target="RFC7519"/>. The SET Receiver 
SHALL also validate the SET information as described
in Section 2 <xref target="SET"/>.</t>

<section anchor="tx_success" title="Success Response">
<t>If the SET is determined to be valid, the SET Receiver SHALL
“acknowledge” successful submission by responding with HTTP Status
202 as <spanx style="verb">Accepted</spanx> 
(see Section 6.3.3 <xref target="RFC7231"/>).</t>

<t>In order
to maintain compatibility with other methods of transmission, the 
SET Receiver SHOULD NOT include an HTTP response body representation
of the submitted SET or what the SET’s pending status is when 
acknowledging success. In the case of an error (e.g. HTTP Status 400),
the purpose of the HTTP response body is to indicate any SET parsing, 
validation, or cryptographic errors.</t>

<t>The following is a non-normative example of a successful
receipt of a SET.</t>

<figure title="Example Successful Delivery Response" anchor="goodPostResponse"><artwork><![CDATA[
HTTP/1.1 202 Accepted
]]></artwork></figure>

<t>Note that the purpose of the “acknowledgement” response is to let the 
SET Transmitter know that a SET has been delivered and the 
information no longer needs to be retained by the SET Transmitter. 
Before acknowledgement, SET Receivers SHOULD ensure they have 
validated received SETs and retained them in a manner appropriate 
to information retention requirements appropriate to the SET 
event types signaled. The level and method of retention of SETs
by SET Receivers is out-of-scope of this specification.</t>

</section>
<section anchor="tx_failure" title="Failure Response">
<t>In the Event of a general HTTP error condition, the SET Receiver
MAY respond with an appropriate HTTP Status code as defined in 
Section 6 <xref target="RFC7231"/>.</t>

<t>When the SET Receiver detects an error parsing or 
validating a received SET (as defined by <xref target="SET"/>), 
the SET Receiver SHALL indicate an HTTP Status 400 error with an 
error response as described in <xref target="errorResponse"/>.</t>

<t>The following is an example non-normative error 
response.</t>

<figure title="Example Error Response" anchor="badPostResponse"><artwork><![CDATA[
HTTP/1.1 400 Bad Request
Content-Type: application/json

{
  "err":"dup",
  "description":"SET already received. Ignored."

}
]]></artwork></figure>

</section>
<section anchor="error_codes" title="Security Event Token Delivery Error Codes">
<t>Security Event Token Delivery Error Codes are strings that identify a specific type of error that may occur when parsing or validating a SET. Every Security Event Token Delivery Error Code MUST have a unique name registered in the IANA “Security Event Token Delivery Error Codes” registry established by <xref target="iana_set_errors"/>.</t>

<t>The following table presents the initial set of Error Codes that are registered in the IANA “Security Event Token Delivery Error Codes” registry:</t>

<texttable title="SET Delivery Error Codes" anchor="tabErrors">
      <ttcol align='left'>Err Value</ttcol>
      <ttcol align='left'>Description</ttcol>
      <c>json</c>
      <c>Invalid JSON object.</c>
      <c>jwtParse</c>
      <c>Invalid or unparsable JWT or JSON structure.</c>
      <c>jwtHdr</c>
      <c>In invalid JWT header was detected.</c>
      <c>jwtCrypto</c>
      <c>Unable to parse due to unsupported algorithm.</c>
      <c>jws</c>
      <c>Signature was not validated.</c>
      <c>jwe</c>
      <c>Unable to decrypt JWE encoded data.</c>
      <c>jwtAud</c>
      <c>Invalid audience value.</c>
      <c>jwtIss</c>
      <c>Issuer not recognized.</c>
      <c>setType</c>
      <c>An unexpected Event type was received.</c>
      <c>setParse</c>
      <c>Invalid structure was encountered such as an inability to parse or an incomplete set of Event claims.</c>
      <c>setData</c>
      <c>SET event claims incomplete or invalid.</c>
      <c>dup</c>
      <c>A duplicate SET was received and has been ignored.</c>
</texttable>

</section>
<section anchor="errorResponse" title="Error Response Handling">
<t>An error response SHALL include a JSON
object which provides details about the error. The JSON object
includes the JSON attributes:</t>

<t><list style="hanging">
  <t hangText='err'><vspace blankLines='0'/>
  A Security Event Token Delivery Error Code (see <xref target="error_codes"/>).
description</t>
  <t>A human-readable text that provides
additional diagnostic information.</t>
</list></t>

<t>When included as part of an HTTP Status 400 response, the above
JSON is the HTTP response body (see <xref target="badPostResponse"/>).</t>

</section>
</section>
</section>
<section anchor="aa" title="Authentication and Authorization">

<t>The SET delivery method described in this specification is
based upon HTTP and depends on the use of TLS and/or standard 
HTTP authentication and authorization schemes as per 
<xref target="RFC7235"/>.</t>

<t>Because SET Delivery describes a simple function, authorization
for the ability to pick-up or deliver SETs can be derived by
considering the identity of the SET issuer, or via other employed
authentication methods.  Because SETs are
not commands (see ), SET Receivers are free to ignore SETs that 
are not of interest.</t>

</section>
<section anchor="Security" title="Security Considerations">

<section anchor="payloadAuthentication" title="Authentication Using Signed SETs">
<t>In scenarios where HTTP authorization or TLS mutual authentication
are not used or are considered weak, JWS signed SETs SHOULD be 
used (see <xref target="RFC7515"/> and 
Security Considerations <xref target="SET"/>). This enables the SET Receiver
to validate that the SET issuer is authorized to deliver SETs.</t>

</section>
<section anchor="tls-support-considerations" title="TLS Support Considerations">
<t>SETs contain sensitive information that is considered PII
(e.g. subject claims). Therefore, SET Transmitters and
SET Receivers MUST require the use of a transport-layer 
security mechanism. Event delivery endpoints MUST support TLS 
1.2 <xref target="RFC5246"/> and MAY support additional 
transport-layer mechanisms meeting its security requirements. 
When using TLS, the client MUST perform a TLS/SSL server
certificate check, per <xref target="RFC6125"/>. Implementation
security considerations for TLS can be found in “Recommendations for
Secure Use of TLS and DTLS” <xref target="RFC7525"/>.</t>

</section>
<section anchor="denial-of-service" title="Denial of Service">
<t>The SET Receiver may be vulnerable to a denial-of-service attack where a malicious party makes a high volume of requests containing invalid SETs, causing the endpoint to expend significant resources on cryptographic operations that are bound to fail. This may be mitigated by authenticating SET Transmitters with a mechanism with low runtime overhead, such as mutual TLS or statically assigned bearer tokens.</t>

</section>
</section>
<section anchor="privacy-considerations" title="Privacy Considerations">

<t>If a SET needs to be retained for audit purposes, JWS MAY 
be used to provide verification of its authenticity.</t>

<t>When sharing personally identifiable information or information
that is otherwise considered confidential to affected users, SET 
Transmitters and Receivers MUST have the appropriate legal agreements
and user consent or terms of service in place.</t>

<t>The propagation of subject identifiers can be perceived as personally
identifiable information. Where possible, SET Transmitters and Receivers
SHOULD devise approaches that prevent propagation — for example, the
passing of a hash value that requires the subscriber to already know
the subject.</t>

</section>
<section anchor="IANA" title="IANA Considerations">

<section anchor="iana_set_errors" title="Security Event Token Delivery Error Codes">
<t>This document defines Security Event Token Delivery Error Codes, for which IANA is asked to create and maintain a new registry titled “Security Event Token Delivery Error Codes”.  Initial values for the Security Event Token Delivery Error Codes registry are given in <xref target="tabErrors"/>.  Future assignments are to be made through the Expert Review registration policy (<xref target="BCP26"/>) and shall follow the template presented in <xref target="iana_set_errors_template"/>.</t>

<section anchor="iana_set_errors_template" title="Registration Template">

<t><list style="hanging">
  <t hangText='Error Code'><vspace blankLines='0'/>
  The name of the Security Event Token Delivery Error Code, as described in <xref target="error_codes"/>. The name MUST be a case-sensitive ASCII string consisting only of upper-case letters (“A” - “Z”), lower-case letters (“a” - “z”), and digits (“0” - “9”).</t>
  <t hangText='Descrption'><vspace blankLines='0'/>
  A brief human-readable description of the Security Event Token Delivery Error Code.</t>
  <t hangText='Change Controller'><vspace blankLines='0'/>
  For error codes registered by the IETF or its working groups, list “IETF Secevent Working Group”.  For all other error codes, list the name of the party responsible for the registration.  Contact information such as mailing address, email address, or phone number may also be provided.</t>
  <t hangText='Defining Document(s)'><vspace blankLines='0'/>
  A reference to the document or documents that define the Security Event Token Delivery Error Code. The definition MUST specify the name and description of the error code, and explain under what circumstances the error code may be used. URIs that can be used to retrieve copies of each document at no cost SHOULD be included.</t>
</list></t>

</section>
<section anchor="initial-registry-contents" title="Initial Registry Contents">

<section anchor="json" title="json">
<t><list style="symbols">
  <t>Name: json</t>
  <t>Description: Invalid JSON object.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jwtparse" title="jwtParse">
<t><list style="symbols">
  <t>Name: jwtParse</t>
  <t>Description: Invalid or unparsable JWT or JSON structure.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jwthdr" title="jwtHdr">
<t><list style="symbols">
  <t>Name: jwtHdr</t>
  <t>Description: In invalid JWT header was detected.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jwtcrypto" title="jwtCrypto">
<t><list style="symbols">
  <t>Name: jwtCrypto</t>
  <t>Description: Unable to parse due to unsupported algorithm.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jws" title="jws">
<t><list style="symbols">
  <t>Name: jws</t>
  <t>Description: Signature was not validated.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jwe" title="jwe">
<t><list style="symbols">
  <t>Name: jwe</t>
  <t>Description: Unable to decrypt JWE encoded data.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jwtaud" title="jwtAud">
<t><list style="symbols">
  <t>Name: jwtAud</t>
  <t>Description: Invalid audience value.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jwtiss" title="jwtIss">
<t><list style="symbols">
  <t>Name: jwtIss</t>
  <t>Description: Issuer not recognized.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="settype" title="setType">
<t><list style="symbols">
  <t>Name: setType</t>
  <t>Description: An unexpected Event type was received.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="setparse" title="setParse">
<t><list style="symbols">
  <t>Name: setParse</t>
  <t>Description: Invalid structure was encountered such as an inability to parse or an incomplete set of Event claims.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="setdata" title="setData">
<t><list style="symbols">
  <t>Name: setData</t>
  <t>Description: SET event claims incomplete or invalid.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="dup" title="dup">
<t><list style="symbols">
  <t>Name: dup</t>
  <t>Description: A duplicate SET was received and has been ignored.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
</section>
</section>
</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor="SET" target='https://www.rfc-editor.org/info/rfc8417'>
<front>
<title>Security Event Token (SET)</title>
<author initials='P.' surname='Hunt' fullname='P. Hunt' role='editor'><organization /></author>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='W.' surname='Denniss' fullname='W. Denniss'><organization /></author>
<author initials='M.' surname='Ansari' fullname='M. Ansari'><organization /></author>
<date year='2018' month='July' />
<abstract><t>This specification defines the Security Event Token (SET) data structure.  A SET describes statements of fact from the perspective of an issuer about a subject.  These statements of fact represent an event that occurred directly to or about a security subject, for example, a statement about the issuance or revocation of a token on behalf of a subject.  This specification is intended to enable representing security- and identity-related events.  A SET is a JSON Web Token (JWT), which can be optionally signed and/or encrypted. SETs can be distributed via protocols such as HTTP.</t></abstract>
</front>
<seriesInfo name='RFC' value='8417'/>
<seriesInfo name='DOI' value='10.17487/RFC8417'/>
</reference>



<reference  anchor="BCP26" target='https://www.rfc-editor.org/info/rfc8126'>
<front>
<title>Guidelines for Writing an IANA Considerations Section in RFCs</title>
<author initials='M.' surname='Cotton' fullname='M. Cotton'><organization /></author>
<author initials='B.' surname='Leiba' fullname='B. Leiba'><organization /></author>
<author initials='T.' surname='Narten' fullname='T. Narten'><organization /></author>
<date year='2017' month='June' />
<abstract><t>Many protocols make use of points of extensibility that use constants to identify various protocol parameters.  To ensure that the values in these fields do not have conflicting uses and to promote interoperability, their allocations are often coordinated by a central record keeper.  For IETF protocols, that role is filled by the Internet Assigned Numbers Authority (IANA).</t><t>To make assignments in a given registry prudently, guidance describing the conditions under which new values should be assigned, as well as when and how modifications to existing values can be made, is needed.  This document defines a framework for the documentation of these guidelines by specification authors, in order to assure that the provided guidance for the IANA Considerations is clear and addresses the various issues that are likely in the operation of a registry.</t><t>This is the third edition of this document; it obsoletes RFC 5226.</t></abstract>
</front>
<seriesInfo name='BCP' value='26'/>
<seriesInfo name='RFC' value='8126'/>
<seriesInfo name='DOI' value='10.17487/RFC8126'/>
</reference>



<reference  anchor="RFC7231" target='https://www.rfc-editor.org/info/rfc7231'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines the semantics of HTTP/1.1 messages, as expressed by request methods, request header fields, response status codes, and response header fields, along with the payload of messages (metadata and body content) and mechanisms for content negotiation.</t></abstract>
</front>
<seriesInfo name='RFC' value='7231'/>
<seriesInfo name='DOI' value='10.17487/RFC7231'/>
</reference>



<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC8174" target='https://www.rfc-editor.org/info/rfc8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author initials='B.' surname='Leiba' fullname='B. Leiba'><organization /></author>
<date year='2017' month='May' />
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>



<reference  anchor="RFC3986" target='https://www.rfc-editor.org/info/rfc3986'>
<front>
<title>Uniform Resource Identifier (URI): Generic Syntax</title>
<author initials='T.' surname='Berners-Lee' fullname='T. Berners-Lee'><organization /></author>
<author initials='R.' surname='Fielding' fullname='R. Fielding'><organization /></author>
<author initials='L.' surname='Masinter' fullname='L. Masinter'><organization /></author>
<date year='2005' month='January' />
<abstract><t>A Uniform Resource Identifier (URI) is a compact sequence of characters that identifies an abstract or physical resource.  This specification defines the generic URI syntax and a process for resolving URI references that might be in relative form, along with guidelines and security considerations for the use of URIs on the Internet.  The URI syntax defines a grammar that is a superset of all valid URIs, allowing an implementation to parse the common components of a URI reference without knowing the scheme-specific requirements of every possible identifier.  This specification does not define a generative grammar for URIs; that task is performed by the individual specifications of each URI scheme.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='STD' value='66'/>
<seriesInfo name='RFC' value='3986'/>
<seriesInfo name='DOI' value='10.17487/RFC3986'/>
</reference>



<reference  anchor="RFC7519" target='https://www.rfc-editor.org/info/rfc7519'>
<front>
<title>JSON Web Token (JWT)</title>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='J.' surname='Bradley' fullname='J. Bradley'><organization /></author>
<author initials='N.' surname='Sakimura' fullname='N. Sakimura'><organization /></author>
<date year='2015' month='May' />
<abstract><t>JSON Web Token (JWT) is a compact, URL-safe means of representing claims to be transferred between two parties.  The claims in a JWT are encoded as a JSON object that is used as the payload of a JSON Web Signature (JWS) structure or as the plaintext of a JSON Web Encryption (JWE) structure, enabling the claims to be digitally signed or integrity protected with a Message Authentication Code (MAC) and/or encrypted.</t></abstract>
</front>
<seriesInfo name='RFC' value='7519'/>
<seriesInfo name='DOI' value='10.17487/RFC7519'/>
</reference>



<reference  anchor="RFC7235" target='https://www.rfc-editor.org/info/rfc7235'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Authentication</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application- level protocol for distributed, collaborative, hypermedia information systems.  This document defines the HTTP Authentication framework.</t></abstract>
</front>
<seriesInfo name='RFC' value='7235'/>
<seriesInfo name='DOI' value='10.17487/RFC7235'/>
</reference>



<reference  anchor="RFC7515" target='https://www.rfc-editor.org/info/rfc7515'>
<front>
<title>JSON Web Signature (JWS)</title>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='J.' surname='Bradley' fullname='J. Bradley'><organization /></author>
<author initials='N.' surname='Sakimura' fullname='N. Sakimura'><organization /></author>
<date year='2015' month='May' />
<abstract><t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures.  Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification.  Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t></abstract>
</front>
<seriesInfo name='RFC' value='7515'/>
<seriesInfo name='DOI' value='10.17487/RFC7515'/>
</reference>



<reference  anchor="RFC5246" target='https://www.rfc-editor.org/info/rfc5246'>
<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.2</title>
<author initials='T.' surname='Dierks' fullname='T. Dierks'><organization /></author>
<author initials='E.' surname='Rescorla' fullname='E. Rescorla'><organization /></author>
<date year='2008' month='August' />
<abstract><t>This document specifies Version 1.2 of the Transport Layer Security (TLS) protocol.  The TLS protocol provides communications security over the Internet.  The protocol allows client/server applications to communicate in a way that is designed to prevent eavesdropping, tampering, or message forgery.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5246'/>
<seriesInfo name='DOI' value='10.17487/RFC5246'/>
</reference>



<reference  anchor="RFC6125" target='https://www.rfc-editor.org/info/rfc6125'>
<front>
<title>Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)</title>
<author initials='P.' surname='Saint-Andre' fullname='P. Saint-Andre'><organization /></author>
<author initials='J.' surname='Hodges' fullname='J. Hodges'><organization /></author>
<date year='2011' month='March' />
<abstract><t>Many application technologies enable secure communication between two entities by means of Internet Public Key Infrastructure Using X.509 (PKIX) certificates in the context of Transport Layer Security (TLS). This document specifies procedures for representing and verifying the identity of application services in such interactions.   [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6125'/>
<seriesInfo name='DOI' value='10.17487/RFC6125'/>
</reference>




    </references>

    <references title='Informative References'>





<reference  anchor="RFC7525" target='https://www.rfc-editor.org/info/rfc7525'>
<front>
<title>Recommendations for Secure Use of Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS)</title>
<author initials='Y.' surname='Sheffer' fullname='Y. Sheffer'><organization /></author>
<author initials='R.' surname='Holz' fullname='R. Holz'><organization /></author>
<author initials='P.' surname='Saint-Andre' fullname='P. Saint-Andre'><organization /></author>
<date year='2015' month='May' />
<abstract><t>Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS) are widely used to protect data exchanged over application protocols such as HTTP, SMTP, IMAP, POP, SIP, and XMPP.  Over the last few years, several serious attacks on TLS have emerged, including attacks on its most commonly used cipher suites and their modes of operation.  This document provides recommendations for improving the security of deployed services that use TLS and DTLS. The recommendations are applicable to the majority of use cases.</t></abstract>
</front>
<seriesInfo name='BCP' value='195'/>
<seriesInfo name='RFC' value='7525'/>
<seriesInfo name='DOI' value='10.17487/RFC7525'/>
</reference>




    </references>


<section anchor="other-streaming-specifications" title="Other Streaming Specifications">
<t>[[EDITORS NOTE: This section to be removed prior to publication]]</t>

<t>The following pub/sub, queuing, streaming systems were reviewed 
as possible solutions or as input to the current draft:</t>

<t>XMPP Events</t>

<t>The WG considered the XMPP events ands its ability to provide a single
messaging solution without the need for both polling and push modes.
The feeling was the size and methodology of XMPP was to far apart from
the current capabilities of the SECEVENTs community which focuses in
on HTTP based service delivery and authorization.</t>

<t>Amazon Simple Notification Service</t>

<t>Simple Notification Service, is a pub/sub messaging product from 
AWS. SNS supports a variety of subscriber types: HTTP/HTTPS endpoints, 
AWS Lambda functions, email addresses (as JSON or plain text), phone 
numbers (via SMS), and AWS SQS standard queues. It doesn’t directly 
support pull, but subscribers can get the pull model by creating an 
SQS queue and subscribing it to the topic. Note that this puts the 
cost of pull support back onto the subscriber, just as it is in the 
push model. It is not clear that one way is strictly better than the 
other; larger, sophisticated developers may be happy to own message 
persistence so they can have their own internal delivery guarantees. 
The long tail of OIDC clients may not care about that, or may fail 
to get it right. Regardless, I think we can learn something from the 
Delivery Policies supported by SNS, as well as the delivery controls 
that SQS offers (e.g. Visibility Timeout, Dead-Letter Queues). I’m 
not suggesting that we need all of these things in the spec, but 
they give an idea of what features people have found useful.</t>

<t>Other information:</t>

<t><list style="symbols">
  <t>API Reference: http://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/Welcome.html</t>
  <t>Visibility Timeouts: http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-visibility-timeout.html</t>
</list></t>

<t>Apache Kafka</t>

<t>Apache Kafka is an Apache open source project based upon TCP for 
distributed streaming. It prescribes some interesting general 
purpose features that seem to extend far beyond the simpler 
streaming model SECEVENTs is after. A comment from MS has been that 
Kafka does an acknowledge with poll combination event which seems 
to be a performance advantage. See: https://kafka.apache.org/intro</t>

<t>Google Pub/Sub</t>

<t>Google Pub Sub system favours a model whereby polling and acknowledgement
of events is done as separate endpoints as separate functions.</t>

<t>Information:</t>

<t><list style="symbols">
  <t>Cloud Overview - https://cloud.google.com/pubsub/</t>
  <t>Subscriber Overview - https://cloud.google.com/pubsub/docs/subscriber</t>
  <t>Subscriber Pull(poll) - https://cloud.google.com/pubsub/docs/pull</t>
</list></t>

</section>
<section anchor="acknowledgments" title="Acknowledgments">
<t>The editors would like to thanks the members of the SCIM WG which 
began discussions of provisioning events starting with: draft-hunt-scim-notify-00 in 2015.</t>

<t>The editors would like to thank the authors of draft-ietf-secevent-delivery-02,
on which this draft is based.</t>

<t>The editor would like to thank the participants in the the SECEVENTS
working group for their support of this specification.</t>

</section>
<section anchor="change-log" title="Change Log">
<t>Draft 00 - AB - Based on draft-ietf-secevent-delivery-02 with the 
following changes:</t>

<t><list style="symbols">
  <t>Renamed to “Push-Based SET Token Delivery Using HTTP”</t>
  <t>Removed references to the HTTP Polling delivery method.</t>
  <t>Removed informative reference to RFC6202.</t>
</list></t>

<t>Draft 01 - AB</t>

<t><list style="symbols">
  <t>Converted to Markdown</t>
  <t>Removed NumericDate definition (unused).</t>
  <t>Removed Event and Subject definitions (defined in SET).</t>
  <t>Removed text related to Event Streams.</t>
  <t>Removed Mike Jones and Phil Hunt as editors, per respective requests.</t>
  <t>Fixed area and workgroup to match secevent.</t>
  <t>Renamed Event Transmitter and Event Receiver to SET Transmitter and SET Receiver, respectively.</t>
  <t>Added IANA registry for SET Delivery Error Codes.</t>
  <t>Removed enumeration of HTTP authentication methods.</t>
  <t>Removed generally applicable guidance for HTTP, authorization tokens, and bearer tokens.</t>
  <t>Elaborated on guidance for DoS protection via authn, and moved it to Security Considerations.</t>
  <t>Removed redundant instruction to use <spanx style="verb">WWW-Authenticate</spanx> header.</t>
  <t>Removed further generally applicable guidance for authorization tokens.</t>
  <t>Removed bearer token from example delivery request, and removed text explaining it was an example only.</t>
  <t>Broke delivery method description into separate request/response sections.</t>
</list></t>

</section>


  </back>

<!-- ##markdown-source:
H4sIAMakhVsAA8U8a3fTSpLf+1f0hg8DM7GTmMeFzJmzN+QBZokT4pBAZuZA
W2rbivXwqCUHw2XO/o39e/tLth7drZbjcGHP7sA5gCW1uquq613V6nQ6okqq
VO/K09pMO8+V0bEcHp7L82Kmc3mg02Shy6V8a5J8Il+en58KNRqVerEr41KN
q06iq3HH6EgvdF51plU178xhJhEXUa4y/TvDOtvbIlYVDOtt7zztbD/t9H4R
EdyYFOVyV5oqFsm83JVVWZuqt739bLsnhCq12pVDHdVlUi3FTVHOJmVRz5t7
8hCXMfISHiHcL/CxmOkljI13ZT+vdJnrqnOAsAlhKpXHH1Ra5ADIUhsxT3bl
X6si2pSmKKtSjw38Wmb44++wfl1Ni3JXdISEP0luduVeVz5X0SxTOd1jzPfy
XI10murWs6KcqDz5rKqkyGFMpj4X/EBnKkl3ZZlEUwVv/qroUTcqMnpcFrhL
Ok6qogyXPu7KVwC4CRY+xil0Kp+Hj9rrwpCyMAVgHyydja5/zdwDvzBQdFfi
ju1ubRmdjjuJMbWOu0k+LrZCSE678mWdVwEgp9Mkbe61ITgpVZTqcPk5jO5O
YfSvSzUtCgKgjegQtrfSJqpDZFWZ1GblUXupF0UxaS+VGTf81wk9XLPYXm5g
6nAl4AX9WYUP2uvsJyYqWsvwG11Fb/wa4fPVlYB1BipWadJmHWCxfNl68h0b
WME7uYpXNlHkRZnBawu9S4NBvHfl2dH+00c7v9CN5/unvSd8a6f3RIhOpyPV
yFSwQ5U4nyZGmrmOknES0eIy1uME2EpOixuppNFlAhfFGH5Z8SMpB2hAhRgp
7sOC5oHM1FKONLxMKgXUTFXA23PQJUlRm3QpSz1JTEWPStAUOEqK2iseeXoy
PJcF3j1/PQTiJVUCmiKWyuA8oE1wxmqq/dtdRiVL4hi2H6S+LOI6IhRA4OUJ
DFkk+kZ+uZfgs6/iL3f9+T0qIIbyvtFafPnyb3Dx9esDGakc8QUq5iZLqmoN
xiJAGZXumUM7wBomhI35pfdw5+tXj31Xnk+1WA+PkpkG7qHViCoE3CJRDRW7
UohBUdF7KpX7RY4bBhcGaBHB1Vck3Jo/QActQY9KVKRGbhy/HZ5vbPL/cnBC
v88O37ztnx0e4O/hy73Xr/0PYUcMX568fX3Q/Gre3D85Pj4cHPDLcFe2bomN
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

-->

</rfc>

