<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.2 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-secevent-http-push-00" category="std">

  <front>
    <title abbrev="draft-ietf-secevent-http-push">Push-Based SET Token Delivery Using HTTP</title>

    <author initials="A." surname="Backman" fullname="Annabelle Backman" role="editor">
      <organization>Amazon</organization>
      <address>
        <email>richanna@amazon.com</email>
      </address>
    </author>
    <author initials="M." surname="Jones" fullname="Michael B. Jones">
      <organization>Microsoft</organization>
      <address>
        <email>mbj@microsoft.com</email>
        <uri>http://self-issued.info/</uri>
      </address>
    </author>
    <author initials="P." surname="Hunt" fullname="Phil Hunt">
      <organization>Oracle</organization>
      <address>
        <email>phil.hunt@yahoo.com</email>
      </address>
    </author>
    <author initials="M." surname="Scurtescu" fullname="Marius Scurtescu">
      <organization>Google</organization>
      <address>
        <email>mscurtescu@google.com</email>
      </address>
    </author>
    <author initials="M." surname="Ansari" fullname="Morteza Ansari">
      <organization>Cisco</organization>
      <address>
        <email>morteza.ansari@cisco.com</email>
      </address>
    </author>
    <author initials="A." surname="Nadalin" fullname="Anthony Nadalin">
      <organization>Microsoft</organization>
      <address>
        <email>tonynad@microsoft.com</email>
      </address>
    </author>

    <date year="2018" month="August" day="27"/>

    <area>Security</area>
    <workgroup>Security Events Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This specification defines how a series of security event tokens 
(SETs) may be delivered to a previously registered receiver 
using HTTP POST over TLS initiated as a push to the receiver.</t>



    </abstract>


  </front>

  <middle>


<section anchor="intro" title="Introduction and Overview">
<t>This specification defines how SETs (see
<xref target="SET"/>) can be transmitted to a previously 
registered SET Receiver using HTTP <xref target="RFC7231"/> over TLS. The
specification defines a method to push SETs via HTTP POST.</t>

<section anchor="conv" title="Notational Conventions">
<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL
NOT”, “SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”,
“MAY”, and “OPTIONAL” in this document are to be interpreted as
described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when,
they appear in all capitals, as shown here.</t>

<t>Throughout this documents all figures may contain spaces and extra
line-wrapping for readability and space limitations.</t>

</section>
<section anchor="defn" title="Definitions">
<t>This specification assumes terminology defined in the Security
Event Token specification <xref target="SET"/>, as well as the terms defined below:</t>

<t><list style="hanging">
  <t hangText='SET Transmitter'><vspace blankLines='0'/>
  A service provider that delivers SETs to other providers known
as SET Receivers.</t>
  <t hangText='SET Receiver'><vspace blankLines='0'/>
  A service provider that registers to receive SETs from a SET
Transmitter and provides an endpoint to receive SETs via HTTP POST.</t>
</list></t>

</section>
</section>
<section anchor="event_delivery" title="Event Delivery">

<section anchor="event_delivery_process" title="Event Delivery Process">
<t>In Push-Based SET Delivery Using HTTP, SETs are delivered one at a
time using HTTP POST requests by a SET Transmitter to a SET
Receiver, as described below in <xref target="tx_request"/>. Upon receipt,
the SET Receiver acknowledges receipt or indicates an error
via the HTTP response, as described below in <xref target="tx_handling"/>.</t>

<t>After successful (acknowledged) SET delivery, SET 
Transmitters SHOULD NOT be required to maintain or record SETs for 
recovery. Once a SET is acknowledged, the SET Receiver SHALL be 
responsible for retention and recovery.</t>

<t>Transmitted SETs SHOULD be self-validating (e.g. signed)
if there is a requirement to verify they were issued by the SET 
Transmitter at a later date when de-coupled from the original 
delivery where authenticity could be checked via the HTTP or 
TLS mutual authentication.</t>

<t>Upon receiving a SET, the SET Receiver reads the SET and validates 
it. The SET Receiver MUST acknowledge receipt to the SET Transmitter, using the 
defined acknowledgement or error method.</t>

<t>The SET Receiver SHALL NOT use the Event acknowledgement mechanism
to report Event errors other than relating to the parsing and validation
of the SET.</t>

</section>
<section anchor="tx_request" title="Transmitting a SET">
<t>This method allows a SET Transmitter to use HTTP POST 
(Section 4.3.3 <xref target="RFC7231"/>) to deliver
SETs to a previously registered web callback URI supplied by the
SET Receiver as part of a configuration process 
(not defined by this document).</t>

<t>The SET to be delivered MAY be signed 
and/or encrypted as defined in <xref target="SET"/>.</t>

<t>The HTTP Content-Type (see 
Section 3.1.1.5 <xref target="RFC7231"/>) for the HTTP POST is 
<spanx style="verb">application/secevent+jwt</spanx> and the request body SHALL consist of 
a single SET (see <xref target="SET"/>).
As per Section 5.3.2 <xref target="RFC7231"/>, the value of the
<spanx style="verb">Accept</spanx> header is 
<spanx style="verb">application/json</spanx>.</t>

<t>The following is a non-normative example of a SET transmission HTTP POST request:</t>

<figure title="Example SET Transmission Request" anchor="postSet"><artwork><![CDATA[
POST /Events  HTTP/1.1

Host: notify.examplerp.com
Accept: application/json
Content-Type: application/secevent+jwt

eyJhbGciOiJub25lIn0
.
eyJwdWJsaXNoZXJVcmkiOiJodHRwczovL3NjaW0uZXhhbXBsZS5jb20iLCJmZWV
kVXJpcyI6WyJodHRwczovL2podWIuZXhhbXBsZS5jb20vRmVlZHMvOThkNTI0Nj
FmYTViYmM4Nzk1OTNiNzc1NCIsImh0dHBzOi8vamh1Yi5leGFtcGxlLmNvbS9GZ
WVkcy81ZDc2MDQ1MTZiMWQwODY0MWQ3Njc2ZWU3Il0sInJlc291cmNlVXJpcyI6
WyJodHRwczovL3NjaW0uZXhhbXBsZS5jb20vVXNlcnMvNDRmNjE0MmRmOTZiZDZ
hYjYxZTc1MjFkOSJdLCJldmVudFR5cGVzIjpbIkNSRUFURSJdLCJhdHRyaWJ1dG
VzIjpbImlkIiwibmFtZSIsInVzZXJOYW1lIiwicGFzc3dvcmQiLCJlbWFpbHMiX
SwidmFsdWVzIjp7ImVtYWlscyI6W3sidHlwZSI6IndvcmsiLCJ2YWx1ZSI6Impk
b2VAZXhhbXBsZS5jb20ifV0sInBhc3N3b3JkIjoibm90NHUybm8iLCJ1c2VyTmF
tZSI6Impkb2UiLCJpZCI6IjQ0ZjYxNDJkZjk2YmQ2YWI2MWU3NTIxZDkiLCJuYW
1lIjp7ImdpdmVuTmFtZSI6IkpvaG4iLCJmYW1pbHlOYW1lIjoiRG9lIn19fQ
.
]]></artwork></figure>

</section>
<section anchor="tx_handling" title="Handling a SET Transmission Request">
<t>Upon receipt of the request, the SET Receiver SHALL 
validate the JWT structure of the SET as defined in 
Section 7.2 <xref target="RFC7519"/>. The SET Receiver 
SHALL also validate the SET information as described
in Section 2 <xref target="SET"/>.</t>

<section anchor="tx_success" title="Success Response">
<t>If the SET is determined to be valid, the SET Receiver SHALL
“acknowledge” successful submission by responding with HTTP Status
202 as <spanx style="verb">Accepted</spanx> 
(see Section 6.3.3 <xref target="RFC7231"/>).</t>

<t>In order
to maintain compatibility with other methods of transmission, the 
SET Receiver SHOULD NOT include an HTTP response body representation
of the submitted SET or what the SET’s pending status is when 
acknowledging success. In the case of an error (e.g. HTTP Status 400),
the purpose of the HTTP response body is to indicate any SET parsing, 
validation, or cryptographic errors.</t>

<t>The following is a non-normative example of a successful
receipt of a SET.</t>

<figure title="Example Successful Delivery Response" anchor="goodPostResponse"><artwork><![CDATA[
HTTP/1.1 202 Accepted
]]></artwork></figure>

<t>Note that the purpose of the “acknowledgement” response is to let the 
SET Transmitter know that a SET has been delivered and the 
information no longer needs to be retained by the SET Transmitter. 
Before acknowledgement, SET Receivers SHOULD ensure they have 
validated received SETs and retained them in a manner appropriate 
to information retention requirements appropriate to the SET 
event types signaled. The level and method of retention of SETs
by SET Receivers is out-of-scope of this specification.</t>

</section>
<section anchor="tx_failure" title="Failure Response">
<t>In the Event of a general HTTP error condition, the SET Receiver
MAY respond with an appropriate HTTP Status code as defined in 
Section 6 <xref target="RFC7231"/>.</t>

<t>When the SET Receiver detects an error parsing or 
validating a received SET (as defined by <xref target="SET"/>), 
the SET Receiver SHALL indicate an HTTP Status 400 error with an 
error response as described in <xref target="errorResponse"/>.</t>

<t>The following is an example non-normative error 
response.</t>

<figure title="Example Error Response" anchor="badPostResponse"><artwork><![CDATA[
HTTP/1.1 400 Bad Request
Content-Type: application/json

{
  "err":"dup",
  "description":"SET already received. Ignored."

}
]]></artwork></figure>

</section>
<section anchor="error_codes" title="Security Event Token Delivery Error Codes">
<t>Security Event Token Delivery Error Codes are strings that identify a specific type of error that may occur when parsing or validating a SET. Every Security Event Token Delivery Error Code MUST have a unique name registered in the IANA “Security Event Token Delivery Error Codes” registry established by <xref target="iana_set_errors"/>.</t>

<t>The following table presents the initial set of Error Codes that are registered in the IANA “Security Event Token Delivery Error Codes” registry:</t>

<texttable title="SET Delivery Error Codes" anchor="tabErrors">
      <ttcol align='left'>Error Code</ttcol>
      <ttcol align='left'>Description</ttcol>
      <c>json</c>
      <c>Invalid JSON object.</c>
      <c>jwtParse</c>
      <c>Invalid or unparsable JWT or JSON structure.</c>
      <c>jwtHdr</c>
      <c>In invalid JWT header was detected.</c>
      <c>jwtCrypto</c>
      <c>Unable to parse due to unsupported algorithm.</c>
      <c>jws</c>
      <c>Signature was not validated.</c>
      <c>jwe</c>
      <c>Unable to decrypt JWE encoded data.</c>
      <c>jwtAud</c>
      <c>Invalid audience value.</c>
      <c>jwtIss</c>
      <c>Issuer not recognized.</c>
      <c>setType</c>
      <c>An unexpected Event type was received.</c>
      <c>setParse</c>
      <c>Invalid structure was encountered such as an inability to parse or an incomplete set of Event claims.</c>
      <c>setData</c>
      <c>SET event claims incomplete or invalid.</c>
      <c>dup</c>
      <c>A duplicate SET was received and has been ignored.</c>
</texttable>

</section>
<section anchor="errorResponse" title="Error Response Handling">
<t>An error response SHALL include a JSON
object which provides details about the error. The JSON object
includes the JSON attributes:</t>

<t><list style="hanging">
  <t hangText='err'><vspace blankLines='0'/>
  A Security Event Token Delivery Error Code (see <xref target="error_codes"/>).
description</t>
  <t>A human-readable text that provides
additional diagnostic information.</t>
</list></t>

<t>When included as part of an HTTP Status 400 response, the above
JSON is the HTTP response body (see <xref target="badPostResponse"/>).</t>

</section>
</section>
</section>
<section anchor="aa" title="Authentication and Authorization">

<t>The SET delivery method described in this specification is
based upon HTTP and depends on the use of TLS and/or standard 
HTTP authentication and authorization schemes as per 
<xref target="RFC7235"/>.</t>

<t>Because SET Delivery describes a simple function, authorization
for the ability to pick-up or deliver SETs can be derived by
considering the identity of the SET issuer, or via other employed
authentication methods.  Because SETs are
not commands (see ), SET Receivers are free to ignore SETs that 
are not of interest.</t>

</section>
<section anchor="Security" title="Security Considerations">

<section anchor="payloadAuthentication" title="Authentication Using Signed SETs">
<t>In scenarios where HTTP authorization or TLS mutual authentication
are not used or are considered weak, JWS signed SETs SHOULD be 
used (see <xref target="RFC7515"/> and 
Security Considerations <xref target="SET"/>). This enables the SET Receiver
to validate that the SET issuer is authorized to deliver SETs.</t>

</section>
<section anchor="tls-support-considerations" title="TLS Support Considerations">
<t>SETs contain sensitive information that is considered PII
(e.g. subject claims). Therefore, SET Transmitters and
SET Receivers MUST require the use of a transport-layer 
security mechanism. Event delivery endpoints MUST support TLS 
1.2 <xref target="RFC5246"/> and MAY support additional 
transport-layer mechanisms meeting its security requirements. 
When using TLS, the client MUST perform a TLS/SSL server
certificate check, per <xref target="RFC6125"/>. Implementation
security considerations for TLS can be found in “Recommendations for
Secure Use of TLS and DTLS” <xref target="RFC7525"/>.</t>

</section>
<section anchor="denial-of-service" title="Denial of Service">
<t>The SET Receiver may be vulnerable to a denial-of-service attack where a malicious party makes a high volume of requests containing invalid SETs, causing the endpoint to expend significant resources on cryptographic operations that are bound to fail. This may be mitigated by authenticating SET Transmitters with a mechanism with low runtime overhead, such as mutual TLS or statically assigned bearer tokens.</t>

</section>
</section>
<section anchor="privacy-considerations" title="Privacy Considerations">

<t>If a SET needs to be retained for audit purposes, JWS MAY 
be used to provide verification of its authenticity.</t>

<t>When sharing personally identifiable information or information
that is otherwise considered confidential to affected users, SET 
Transmitters and Receivers MUST have the appropriate legal agreements
and user consent or terms of service in place.</t>

<t>The propagation of subject identifiers can be perceived as personally
identifiable information. Where possible, SET Transmitters and Receivers
SHOULD devise approaches that prevent propagation — for example, the
passing of a hash value that requires the subscriber to already know
the subject.</t>

</section>
<section anchor="IANA" title="IANA Considerations">

<section anchor="iana_set_errors" title="Security Event Token Delivery Error Codes">
<t>This document defines Security Event Token Delivery Error Codes, for which IANA is asked to create and maintain a new registry titled “Security Event Token Delivery Error Codes”.  Initial values for the Security Event Token Delivery Error Codes registry are given in <xref target="tabErrors"/>.  Future assignments are to be made through the Expert Review registration policy (<xref target="BCP26"/>) and shall follow the template presented in <xref target="iana_set_errors_template"/>.</t>

<section anchor="iana_set_errors_template" title="Registration Template">

<t><list style="hanging">
  <t hangText='Error Code'><vspace blankLines='0'/>
  The name of the Security Event Token Delivery Error Code, as described in <xref target="error_codes"/>. The name MUST be a case-sensitive ASCII string consisting only of upper-case letters (“A” - “Z”), lower-case letters (“a” - “z”), and digits (“0” - “9”).</t>
  <t hangText='Descrption'><vspace blankLines='0'/>
  A brief human-readable description of the Security Event Token Delivery Error Code.</t>
  <t hangText='Change Controller'><vspace blankLines='0'/>
  For error codes registered by the IETF or its working groups, list “IETF Secevent Working Group”.  For all other error codes, list the name of the party responsible for the registration.  Contact information such as mailing address, email address, or phone number may also be provided.</t>
  <t hangText='Defining Document(s)'><vspace blankLines='0'/>
  A reference to the document or documents that define the Security Event Token Delivery Error Code. The definition MUST specify the name and description of the error code, and explain under what circumstances the error code may be used. URIs that can be used to retrieve copies of each document at no cost SHOULD be included.</t>
</list></t>

</section>
<section anchor="initial-registry-contents" title="Initial Registry Contents">

<section anchor="json" title="json">
<t><list style="symbols">
  <t>Name: json</t>
  <t>Description: Invalid JSON object.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jwtparse" title="jwtParse">
<t><list style="symbols">
  <t>Name: jwtParse</t>
  <t>Description: Invalid or unparsable JWT or JSON structure.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jwthdr" title="jwtHdr">
<t><list style="symbols">
  <t>Name: jwtHdr</t>
  <t>Description: In invalid JWT header was detected.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jwtcrypto" title="jwtCrypto">
<t><list style="symbols">
  <t>Name: jwtCrypto</t>
  <t>Description: Unable to parse due to unsupported algorithm.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jws" title="jws">
<t><list style="symbols">
  <t>Name: jws</t>
  <t>Description: Signature was not validated.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jwe" title="jwe">
<t><list style="symbols">
  <t>Name: jwe</t>
  <t>Description: Unable to decrypt JWE encoded data.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jwtaud" title="jwtAud">
<t><list style="symbols">
  <t>Name: jwtAud</t>
  <t>Description: Invalid audience value.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jwtiss" title="jwtIss">
<t><list style="symbols">
  <t>Name: jwtIss</t>
  <t>Description: Issuer not recognized.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="settype" title="setType">
<t><list style="symbols">
  <t>Name: setType</t>
  <t>Description: An unexpected Event type was received.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="setparse" title="setParse">
<t><list style="symbols">
  <t>Name: setParse</t>
  <t>Description: Invalid structure was encountered such as an inability to parse or an incomplete set of Event claims.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="setdata" title="setData">
<t><list style="symbols">
  <t>Name: setData</t>
  <t>Description: SET event claims incomplete or invalid.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="dup" title="dup">
<t><list style="symbols">
  <t>Name: dup</t>
  <t>Description: A duplicate SET was received and has been ignored.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
</section>
</section>
</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor="SET" target='https://www.rfc-editor.org/info/rfc8417'>
<front>
<title>Security Event Token (SET)</title>
<author initials='P.' surname='Hunt' fullname='P. Hunt' role='editor'><organization /></author>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='W.' surname='Denniss' fullname='W. Denniss'><organization /></author>
<author initials='M.' surname='Ansari' fullname='M. Ansari'><organization /></author>
<date year='2018' month='July' />
<abstract><t>This specification defines the Security Event Token (SET) data structure.  A SET describes statements of fact from the perspective of an issuer about a subject.  These statements of fact represent an event that occurred directly to or about a security subject, for example, a statement about the issuance or revocation of a token on behalf of a subject.  This specification is intended to enable representing security- and identity-related events.  A SET is a JSON Web Token (JWT), which can be optionally signed and/or encrypted. SETs can be distributed via protocols such as HTTP.</t></abstract>
</front>
<seriesInfo name='RFC' value='8417'/>
<seriesInfo name='DOI' value='10.17487/RFC8417'/>
</reference>



<reference  anchor="BCP26" target='https://www.rfc-editor.org/info/rfc8126'>
<front>
<title>Guidelines for Writing an IANA Considerations Section in RFCs</title>
<author initials='M.' surname='Cotton' fullname='M. Cotton'><organization /></author>
<author initials='B.' surname='Leiba' fullname='B. Leiba'><organization /></author>
<author initials='T.' surname='Narten' fullname='T. Narten'><organization /></author>
<date year='2017' month='June' />
<abstract><t>Many protocols make use of points of extensibility that use constants to identify various protocol parameters.  To ensure that the values in these fields do not have conflicting uses and to promote interoperability, their allocations are often coordinated by a central record keeper.  For IETF protocols, that role is filled by the Internet Assigned Numbers Authority (IANA).</t><t>To make assignments in a given registry prudently, guidance describing the conditions under which new values should be assigned, as well as when and how modifications to existing values can be made, is needed.  This document defines a framework for the documentation of these guidelines by specification authors, in order to assure that the provided guidance for the IANA Considerations is clear and addresses the various issues that are likely in the operation of a registry.</t><t>This is the third edition of this document; it obsoletes RFC 5226.</t></abstract>
</front>
<seriesInfo name='BCP' value='26'/>
<seriesInfo name='RFC' value='8126'/>
<seriesInfo name='DOI' value='10.17487/RFC8126'/>
</reference>



<reference  anchor="RFC7231" target='https://www.rfc-editor.org/info/rfc7231'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines the semantics of HTTP/1.1 messages, as expressed by request methods, request header fields, response status codes, and response header fields, along with the payload of messages (metadata and body content) and mechanisms for content negotiation.</t></abstract>
</front>
<seriesInfo name='RFC' value='7231'/>
<seriesInfo name='DOI' value='10.17487/RFC7231'/>
</reference>



<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC8174" target='https://www.rfc-editor.org/info/rfc8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author initials='B.' surname='Leiba' fullname='B. Leiba'><organization /></author>
<date year='2017' month='May' />
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>



<reference  anchor="RFC7519" target='https://www.rfc-editor.org/info/rfc7519'>
<front>
<title>JSON Web Token (JWT)</title>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='J.' surname='Bradley' fullname='J. Bradley'><organization /></author>
<author initials='N.' surname='Sakimura' fullname='N. Sakimura'><organization /></author>
<date year='2015' month='May' />
<abstract><t>JSON Web Token (JWT) is a compact, URL-safe means of representing claims to be transferred between two parties.  The claims in a JWT are encoded as a JSON object that is used as the payload of a JSON Web Signature (JWS) structure or as the plaintext of a JSON Web Encryption (JWE) structure, enabling the claims to be digitally signed or integrity protected with a Message Authentication Code (MAC) and/or encrypted.</t></abstract>
</front>
<seriesInfo name='RFC' value='7519'/>
<seriesInfo name='DOI' value='10.17487/RFC7519'/>
</reference>



<reference  anchor="RFC7235" target='https://www.rfc-editor.org/info/rfc7235'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Authentication</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application- level protocol for distributed, collaborative, hypermedia information systems.  This document defines the HTTP Authentication framework.</t></abstract>
</front>
<seriesInfo name='RFC' value='7235'/>
<seriesInfo name='DOI' value='10.17487/RFC7235'/>
</reference>



<reference  anchor="RFC7515" target='https://www.rfc-editor.org/info/rfc7515'>
<front>
<title>JSON Web Signature (JWS)</title>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='J.' surname='Bradley' fullname='J. Bradley'><organization /></author>
<author initials='N.' surname='Sakimura' fullname='N. Sakimura'><organization /></author>
<date year='2015' month='May' />
<abstract><t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures.  Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification.  Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t></abstract>
</front>
<seriesInfo name='RFC' value='7515'/>
<seriesInfo name='DOI' value='10.17487/RFC7515'/>
</reference>



<reference  anchor="RFC5246" target='https://www.rfc-editor.org/info/rfc5246'>
<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.2</title>
<author initials='T.' surname='Dierks' fullname='T. Dierks'><organization /></author>
<author initials='E.' surname='Rescorla' fullname='E. Rescorla'><organization /></author>
<date year='2008' month='August' />
<abstract><t>This document specifies Version 1.2 of the Transport Layer Security (TLS) protocol.  The TLS protocol provides communications security over the Internet.  The protocol allows client/server applications to communicate in a way that is designed to prevent eavesdropping, tampering, or message forgery.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5246'/>
<seriesInfo name='DOI' value='10.17487/RFC5246'/>
</reference>



<reference  anchor="RFC6125" target='https://www.rfc-editor.org/info/rfc6125'>
<front>
<title>Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)</title>
<author initials='P.' surname='Saint-Andre' fullname='P. Saint-Andre'><organization /></author>
<author initials='J.' surname='Hodges' fullname='J. Hodges'><organization /></author>
<date year='2011' month='March' />
<abstract><t>Many application technologies enable secure communication between two entities by means of Internet Public Key Infrastructure Using X.509 (PKIX) certificates in the context of Transport Layer Security (TLS). This document specifies procedures for representing and verifying the identity of application services in such interactions.   [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6125'/>
<seriesInfo name='DOI' value='10.17487/RFC6125'/>
</reference>




    </references>

    <references title='Informative References'>





<reference  anchor="RFC7525" target='https://www.rfc-editor.org/info/rfc7525'>
<front>
<title>Recommendations for Secure Use of Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS)</title>
<author initials='Y.' surname='Sheffer' fullname='Y. Sheffer'><organization /></author>
<author initials='R.' surname='Holz' fullname='R. Holz'><organization /></author>
<author initials='P.' surname='Saint-Andre' fullname='P. Saint-Andre'><organization /></author>
<date year='2015' month='May' />
<abstract><t>Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS) are widely used to protect data exchanged over application protocols such as HTTP, SMTP, IMAP, POP, SIP, and XMPP.  Over the last few years, several serious attacks on TLS have emerged, including attacks on its most commonly used cipher suites and their modes of operation.  This document provides recommendations for improving the security of deployed services that use TLS and DTLS. The recommendations are applicable to the majority of use cases.</t></abstract>
</front>
<seriesInfo name='BCP' value='195'/>
<seriesInfo name='RFC' value='7525'/>
<seriesInfo name='DOI' value='10.17487/RFC7525'/>
</reference>




    </references>


<section anchor="other-streaming-specifications" title="Other Streaming Specifications">
<t>[[EDITORS NOTE: This section to be removed prior to publication]]</t>

<t>The following pub/sub, queuing, streaming systems were reviewed 
as possible solutions or as input to the current draft:</t>

<t>XMPP Events</t>

<t>The WG considered the XMPP events ands its ability to provide a single
messaging solution without the need for both polling and push modes.
The feeling was the size and methodology of XMPP was to far apart from
the current capabilities of the SECEVENTs community which focuses in
on HTTP based service delivery and authorization.</t>

<t>Amazon Simple Notification Service</t>

<t>Simple Notification Service, is a pub/sub messaging product from 
AWS. SNS supports a variety of subscriber types: HTTP/HTTPS endpoints, 
AWS Lambda functions, email addresses (as JSON or plain text), phone 
numbers (via SMS), and AWS SQS standard queues. It doesn’t directly 
support pull, but subscribers can get the pull model by creating an 
SQS queue and subscribing it to the topic. Note that this puts the 
cost of pull support back onto the subscriber, just as it is in the 
push model. It is not clear that one way is strictly better than the 
other; larger, sophisticated developers may be happy to own message 
persistence so they can have their own internal delivery guarantees. 
The long tail of OIDC clients may not care about that, or may fail 
to get it right. Regardless, I think we can learn something from the 
Delivery Policies supported by SNS, as well as the delivery controls 
that SQS offers (e.g. Visibility Timeout, Dead-Letter Queues). I’m 
not suggesting that we need all of these things in the spec, but 
they give an idea of what features people have found useful.</t>

<t>Other information:</t>

<t><list style="symbols">
  <t>API Reference: http://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/Welcome.html</t>
  <t>Visibility Timeouts: http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-visibility-timeout.html</t>
</list></t>

<t>Apache Kafka</t>

<t>Apache Kafka is an Apache open source project based upon TCP for 
distributed streaming. It prescribes some interesting general 
purpose features that seem to extend far beyond the simpler 
streaming model SECEVENTs is after. A comment from MS has been that 
Kafka does an acknowledge with poll combination event which seems 
to be a performance advantage. See: https://kafka.apache.org/intro</t>

<t>Google Pub/Sub</t>

<t>Google Pub Sub system favours a model whereby polling and acknowledgement
of events is done as separate endpoints as separate functions.</t>

<t>Information:</t>

<t><list style="symbols">
  <t>Cloud Overview - https://cloud.google.com/pubsub/</t>
  <t>Subscriber Overview - https://cloud.google.com/pubsub/docs/subscriber</t>
  <t>Subscriber Pull(poll) - https://cloud.google.com/pubsub/docs/pull</t>
</list></t>

</section>
<section anchor="acknowledgments" title="Acknowledgments">
<t>The editors would like to thanks the members of the SCIM WG which 
began discussions of provisioning events starting with: draft-hunt-scim-notify-00 in 2015.</t>

<t>The editors would like to thank the authors of draft-ietf-secevent-delivery-02,
on which this draft is based.</t>

<t>The editor would like to thank the participants in the the SECEVENTS
working group for their support of this specification.</t>

</section>
<section anchor="change-log" title="Change Log">
<t>Draft 00 - AB - Based on draft-ietf-secevent-delivery-02 with the 
following changes:</t>

<t><list style="symbols">
  <t>Renamed to “Push-Based SET Token Delivery Using HTTP”</t>
  <t>Removed references to the HTTP Polling delivery method.</t>
  <t>Removed informative reference to RFC6202.</t>
</list></t>

<t>Draft 01 - AB</t>

<t><list style="symbols">
  <t>Converted to Markdown</t>
  <t>Removed NumericDate definition (unused).</t>
  <t>Removed Event and Subject definitions (defined in SET).</t>
  <t>Removed text related to Event Streams.</t>
  <t>Removed Mike Jones and Phil Hunt as editors, per respective requests.</t>
  <t>Fixed area and workgroup to match secevent.</t>
  <t>Renamed Event Transmitter and Event Receiver to SET Transmitter and SET Receiver, respectively.</t>
  <t>Added IANA registry for SET Delivery Error Codes.</t>
  <t>Removed enumeration of HTTP authentication methods.</t>
  <t>Removed generally applicable guidance for HTTP, authorization tokens, andbearer tokens.</t>
  <t>Elaborated on guidance for DoS protection via authn, and moved it to Security Considerations.</t>
  <t>Removed redundant instruction to use <spanx style="verb">WWW-Authenticate</spanx> header.</t>
  <t>Removed further generally applicable guidance for authorization tokens.</t>
  <t>Removed bearer token from example delivery request, and removed text explaining it was an example only.</t>
  <t>Broke delivery method description into separate request/response sections.</t>
  <t>Added missing blank line ahead of body in example request.</t>
  <t>Removed unapplicable explanatory text regarding shortening and encoding of URLs in examples.</t>
  <t>Changed MAY to may in explanation of non-normative line breaks and whitespace in examples.</t>
  <t>Removed unnecessary text about SET creation and aspects of SET handling not related to the delivery method.</t>
  <t>Removed duplicate technical description of delivery method requests and responses.</t>
  <t>Added “non-normative example” text before example SET transmission request.</t>
  <t>Updated error code column headers to match descriptive text.</t>
</list></t>

</section>


  </back>

<!-- ##markdown-source:
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
Cx1TAAA=

-->

</rfc>

