<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.2 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-secevent-http-push-00" category="std">

  <front>
    <title abbrev="draft-ietf-secevent-http-push">Push-Based SET Token Delivery Using HTTP</title>

    <author initials="A." surname="Backman" fullname="Annabelle Backman" role="editor">
      <organization>Amazon</organization>
      <address>
        <email>richanna@amazon.com</email>
      </address>
    </author>
    <author initials="M." surname="Jones" fullname="Michael B. Jones">
      <organization>Microsoft</organization>
      <address>
        <email>mbj@microsoft.com</email>
        <uri>http://self-issued.info/</uri>
      </address>
    </author>
    <author initials="P." surname="Hunt" fullname="Phil Hunt">
      <organization>Oracle</organization>
      <address>
        <email>phil.hunt@yahoo.com</email>
      </address>
    </author>
    <author initials="M." surname="Scurtescu" fullname="Marius Scurtescu">
      <organization>Google</organization>
      <address>
        <email>mscurtescu@google.com</email>
      </address>
    </author>
    <author initials="M." surname="Ansari" fullname="Morteza Ansari">
      <organization>Cisco</organization>
      <address>
        <email>morteza.ansari@cisco.com</email>
      </address>
    </author>
    <author initials="A." surname="Nadalin" fullname="Anthony Nadalin">
      <organization>Microsoft</organization>
      <address>
        <email>tonynad@microsoft.com</email>
      </address>
    </author>

    <date year="2018" month="August" day="27"/>

    <area>Security</area>
    <workgroup>Security Events Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This specification defines how a series of security event tokens 
(SETs) may be delivered to a previously registered receiver 
using HTTP POST over TLS initiated as a push to the receiver.</t>



    </abstract>


  </front>

  <middle>


<section anchor="intro" title="Introduction and Overview">
<t>This specification defines how SETs (see
<xref target="SET"/>) can be transmitted to a previously 
registered SET Receiver using HTTP <xref target="RFC7231"/> over TLS. The
specification defines a method to push SETs via HTTP POST.</t>

<section anchor="conv" title="Notational Conventions">
<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL
NOT”, “SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”,
“MAY”, and “OPTIONAL” in this document are to be interpreted as
described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when,
they appear in all capitals, as shown here.</t>

<t>For purposes of readability examples are not URL encoded.
Implementers MUST percent encode URLs as described in Section 2.1 of
<xref target="RFC3986"/>.</t>

<t>Throughout this documents all figures MAY contain spaces and extra
line-wrapping for readability and space limitations. Similarly, some
URI’s contained within examples, have been shortened for space and
readability reasons.</t>

</section>
<section anchor="defn" title="Definitions">
<t>This specification assumes terminology defined in the Security
Event Token specification <xref target="SET"/>, as well as the terms defined below:</t>

<t><list style="hanging">
  <t hangText='SET Transmitter'><vspace blankLines='0'/>
  A service provider that delivers SETs to other providers known
as SET Receivers.</t>
  <t hangText='SET Receiver'><vspace blankLines='0'/>
  A service provider that registers to receive SETs from an SET
Transmitter and provides an endpoint to receive SETs via HTTP POST.</t>
</list></t>

</section>
</section>
<section anchor="event_delivery" title="Event Delivery">

<section anchor="event_delivery_process" title="Event Delivery Process">
<t>When an Event occurs, the SET Transmitter constructs a SET
token <xref target="SET"/> that describes the Event.</t>

<t>How SETs are defined and the process by which Events are identified for 
SET Receivers is out-of-scope of this    specification.</t>

<t>When a SET is available for an SET Receiver, the SET Transmitter
attempts to deliver the SET based on the SET Receiver’s registered
delivery mechanism:</t>

<t><list style="symbols">
  <t>The SET Transmitter uses an HTTP/1.1 POST to the SET Receiver
endpoint to deliver the SET;</t>
  <t>Or, the SET Transmitter delivers the Event through a different
method not defined by this specification.</t>
</list></t>

<t>In Push-Based SET Delivery Using HTTP, SETs are delivered one at a
time using HTTP POST requests by an SET Transmitter to an SET
Receiver. The HTTP request body is a JSON Web Token <xref target="RFC7519"/>
with a <spanx style="verb">Content-Type</spanx> header of <spanx style="verb">application/secevent+jwt</spanx> as
defined in Section 2.2 and 6.2 of <xref target="SET"/>. Upon receipt, the 
SET Receiver acknowledges receipt with a response with HTTP 
Status 202, as described below in <xref target="httpPost"/>.</t>

<t>After successful (acknowledged) SET delivery, SET 
Transmitters SHOULD NOT be required to maintain or record SETs for 
recovery. Once a SET is acknowledged, the SET Receiver SHALL be 
responsible for retention and recovery.</t>

<t>Transmitted SETs SHOULD be self-validating (e.g. signed)
if there is a requirement to verify they were issued by the SET 
Transmitter at a later date when de-coupled from the original 
delivery where authenticity could be checked via the HTTP or 
TLS mutual authentication.</t>

<t>Upon receiving a SET, the SET Receiver reads the SET and validates 
it. The SET Receiver MUST acknowledge receipt to the SET Transmitter, using the 
defined acknowledgement or error method.</t>

<t>The SET Receiver SHALL NOT use the Event acknowledgement mechanism
to report Event errors other than relating to the parsing and validation
of the SET.</t>

</section>
<section anchor="httpPost" title="Push Delivery using HTTP">
<t>This method allows an SET Transmitter to use HTTP POST 
(Section 4.3.3 <xref target="RFC7231"/>) to deliver
SETs to a previously registered web callback URI supplied by the
SET Receiver as part of a configuration process 
(not defined by this document).</t>

<t>The SET to be delivered MAY be signed 
and/or encrypted as defined in <xref target="SET"/>.</t>

<t>The HTTP Content-Type (see 
Section 3.1.1.5 <xref target="RFC7231"/>) for the HTTP POST is 
<spanx style="verb">application/secevent+jwt</spanx> and SHALL consist of 
a single SET (see <xref target="SET"/>).
As per Section 5.3.2 <xref target="RFC7231"/>, the expected 
media type (<spanx style="verb">Accept</spanx> header) response is 
<spanx style="verb">application/json</spanx>.</t>

<t>To deliver an Event, the SET Transmitter generates an event 
delivery message and uses HTTP POST to the configured endpoint with
the appropriate <spanx style="verb">Accept</spanx> and 
<spanx style="verb">Content-Type</spanx> headers.</t>

<figure title="Example HTTP POST Request" anchor="postSet"><artwork><![CDATA[
POST /Events  HTTP/1.1

Host: notify.examplerp.com
Accept: application/json
Authorization: Bearer h480djs93hd8
Content-Type: application/secevent+jwt
eyJhbGciOiJub25lIn0
.
eyJwdWJsaXNoZXJVcmkiOiJodHRwczovL3NjaW0uZXhhbXBsZS5jb20iLCJmZWV
kVXJpcyI6WyJodHRwczovL2podWIuZXhhbXBsZS5jb20vRmVlZHMvOThkNTI0Nj
FmYTViYmM4Nzk1OTNiNzc1NCIsImh0dHBzOi8vamh1Yi5leGFtcGxlLmNvbS9GZ
WVkcy81ZDc2MDQ1MTZiMWQwODY0MWQ3Njc2ZWU3Il0sInJlc291cmNlVXJpcyI6
WyJodHRwczovL3NjaW0uZXhhbXBsZS5jb20vVXNlcnMvNDRmNjE0MmRmOTZiZDZ
hYjYxZTc1MjFkOSJdLCJldmVudFR5cGVzIjpbIkNSRUFURSJdLCJhdHRyaWJ1dG
VzIjpbImlkIiwibmFtZSIsInVzZXJOYW1lIiwicGFzc3dvcmQiLCJlbWFpbHMiX
SwidmFsdWVzIjp7ImVtYWlscyI6W3sidHlwZSI6IndvcmsiLCJ2YWx1ZSI6Impk
b2VAZXhhbXBsZS5jb20ifV0sInBhc3N3b3JkIjoibm90NHUybm8iLCJ1c2VyTmF
tZSI6Impkb2UiLCJpZCI6IjQ0ZjYxNDJkZjk2YmQ2YWI2MWU3NTIxZDkiLCJuYW
1lIjp7ImdpdmVuTmFtZSI6IkpvaG4iLCJmYW1pbHlOYW1lIjoiRG9lIn19fQ
.
]]></artwork></figure>

<t>Upon receipt of the request, the SET Receiver SHALL 
validate the JWT structure of the SET as defined in 
Section 7.2 <xref target="RFC7519"/>. The SET Receiver 
SHALL also validate the SET information as described
in Section 2 <xref target="SET"/>.</t>

<t>If the SET is determined to be valid, the SET Receiver SHALL
“acknowledge” successful submission by responding with HTTP Status
202 as <spanx style="verb">Accepted</spanx> 
(see Section 6.3.3 <xref target="RFC7231"/>).</t>

<t>In order
to maintain compatibility with other methods of transmission, the 
SET Receiver SHOULD NOT include an HTTP response body representation
of the submitted SET or what the SET’s pending status is when 
acknowledging success. In the case of an error (e.g. HTTP Status 400),
the purpose of the HTTP response body is to indicate any SET parsing, 
validation, or cryptographic errors.</t>

<t>The following is a non-normative example of a successful
receipt of a SET.</t>

<figure title="Example Successful Delivery Response" anchor="goodPostResponse"><artwork><![CDATA[
HTTP/1.1 202 Accepted
]]></artwork></figure>

<t>Note that the purpose of the “acknowledgement” response is to let the 
SET Transmitter know that a SET has been delivered and the 
information no longer needs to be retained by the SET Transmitter. 
Before acknowledgement, SET Receivers SHOULD ensure they have 
validated received SETs and retained them in a manner appropriate 
to information retention requirements appropriate to the SET 
event types signaled. The level and method of retention of SETs
by SET Receivers is out-of-scope of this specification.</t>

<t>In the Event of a general HTTP error condition, the SET Receiver
MAY respond with an appropriate HTTP Status code as defined in 
Section 6 <xref target="RFC7231"/>.</t>

<t>When the SET Receiver detects an error parsing or 
validating a received SET (as defined by <xref target="SET"/>), 
the SET Receiver SHALL indicate an HTTP Status 400 error with an 
error response as described in <xref target="errorResponse"/>.</t>

<t>The following is an example non-normative error 
response.</t>

<figure title="Example HTTP Status 400 Response" anchor="badPostResponse"><artwork><![CDATA[
HTTP/1.1 400 Bad Request
Content-Type: application/json

{
  "err":"dup",
  "description":"SET already received. Ignored."

}
]]></artwork></figure>

</section>
<section anchor="error_codes" title="Security Event Token Delivery Error Codes">
<t>Security Event Token Delivery Error Codes are strings that identify a specific type of error that may occur when parsing or validating a SET. Every Security Event Token Delivery Error Code MUST have a unique name registered in the IANA “Security Event Token Delivery Error Codes” registry established by <xref target="iana_set_errors"/>.</t>

<t>The following table presents the initial set of Error Codes that are registered in the IANA “Security Event Token Delivery Error Codes” registry:</t>

<texttable title="SET Delivery Error Codes" anchor="tabErrors">
      <ttcol align='left'>Err Value</ttcol>
      <ttcol align='left'>Description</ttcol>
      <c>json</c>
      <c>Invalid JSON object.</c>
      <c>jwtParse</c>
      <c>Invalid or unparsable JWT or JSON structure.</c>
      <c>jwtHdr</c>
      <c>In invalid JWT header was detected.</c>
      <c>jwtCrypto</c>
      <c>Unable to parse due to unsupported algorithm.</c>
      <c>jws</c>
      <c>Signature was not validated.</c>
      <c>jwe</c>
      <c>Unable to decrypt JWE encoded data.</c>
      <c>jwtAud</c>
      <c>Invalid audience value.</c>
      <c>jwtIss</c>
      <c>Issuer not recognized.</c>
      <c>setType</c>
      <c>An unexpected Event type was received.</c>
      <c>setParse</c>
      <c>Invalid structure was encountered such as an inability to parse or an incomplete set of Event claims.</c>
      <c>setData</c>
      <c>SET event claims incomplete or invalid.</c>
      <c>dup</c>
      <c>A duplicate SET was received and has been ignored.</c>
</texttable>

</section>
<section anchor="errorResponse" title="Error Response Handling">
<t>An error response SHALL include a JSON
object which provides details about the error. The JSON object
includes the JSON attributes:</t>

<t><list style="hanging">
  <t hangText='err'><vspace blankLines='0'/>
  A Security Event Token Delivery Error Code (see <xref target="error_codes"/>).
description</t>
  <t>A human-readable text that provides
additional diagnostic information.</t>
</list></t>

<t>When included as part of an HTTP Status 400 response, the above
JSON is the HTTP response body (see <xref target="badPostResponse"/>).</t>

</section>
</section>
<section anchor="aa" title="Authentication and Authorization">

<t>The SET delivery method described in this specification is
based upon HTTP and depends on the use of TLS and/or standard 
HTTP authentication and authorization schemes as per 
<xref target="RFC7235"/>. For example, the following
methodologies could be used among others:</t>

<t><list style="hanging">
  <t hangText='TLS Client Authentication'><vspace blankLines='0'/>
  Event delivery
endpoints MAY request TLS mutual client authentication. 
See Section 7.3 <xref target="RFC5246"/>.</t>
  <t hangText='Bearer Tokens'><vspace blankLines='0'/>
  Bearer tokens 
<xref target="RFC6750"/> MAY be used when combined with TLS and a token
framework such as OAuth 2.0 <xref target="RFC6749"/>. 
For security considerations regarding the use of bearer tokens in
SET delivery see <xref target="bearerConsiderations"/>.</t>
  <t hangText='Basic Authentication'><vspace blankLines='0'/>
  Usage of basic
authentication should be avoided due to its use of a single factor
that is based upon a relatively static, symmetric secret.
Implementers SHOULD combine the use of basic authentication with
other factors. The security considerations of HTTP BASIC, are well
documented in <xref target="RFC7617"/> and SHOULD be considered
along with using signed SETs (see SET Payload Authentication below).</t>
  <t hangText='SET Payload Authentication'><vspace blankLines='0'/>
  In scenarios 
where SETs are signed and
the delivery method is HTTP POST (see <xref target="httpPost"/>),
SET Receivers MAY elect to use Basic Authentication or not 
to use HTTP or TLS based authentication at all. See 
<xref target="payloadAuthentication"/> for considerations.</t>
</list></t>

<t>As per Section 4.1 of <xref target="RFC7235"/>, a SET
delivery endpoint SHALL indicate supported HTTP authentication 
schemes via the <spanx style="verb">WWW-Authenticate</spanx> header.</t>

<t>Because SET Delivery describes a simple function, authorization
for the ability to pick-up or deliver SETs can be derived by
considering the identity of the SET issuer, or via an authentication
method above. This specification considers authentication as a
feature to prevent denial-of-service attacks. Because SETs are
not commands (see ), SET Receivers are free to ignore SETs that 
are not of interest.</t>

<t>For illustrative purposes only, SET delivery examples show an OAuth2
bearer token value <xref target="RFC6750"/> in the authorization header.
This is not intended to imply that bearer tokens are
preferred. However, the use of bearer tokens in the specification does
reflect common practice.</t>

<section anchor="authzTokens" title="Use of Tokens as Authorizations">
<t>When using bearer tokens or proof-of-possession tokens that
represent an authorization grant such as issued by OAuth (see <xref target="RFC6749"/>), implementers SHOULD consider the type of
authorization granted, any authorized scopes (see Section 3.3 of <xref target="RFC6749"/>), and the security subject(s) that SHOULD be mapped
from the authorization when considering local access control rules.
Section 6 of the OAuth Assertions draft <xref target="RFC7521"/>, documents common scenarios for
authorization including:</t>

<t><list style="symbols">
  <t>Clients using an assertion to authenticate and/or act on behalf
of itself;</t>
  <t>Clients acting on behalf of a user; and,</t>
  <t>A Client acting on behalf of an anonymous user (e.g., see next
section).</t>
</list></t>

<t>When using OAuth authorization tokens, implementers MUST take
into account the threats and countermeasures documented in the
security considerations for the use of client authorizations (see
Section 8 of <xref target="RFC7521"/>). When using
other token formats or frameworks, implementers MUST take into account
similar threats and countermeasures, especially those documented by
the relevant specifications.</t>

</section>
</section>
<section anchor="Security" title="Security Considerations">

<section anchor="payloadAuthentication" title="Authentication Using Signed SETs">
<t>In scenarios where HTTP authorization or TLS mutual authentication
are not used or are considered weak, JWS signed SETs SHOULD be 
used (see <xref target="RFC7515"/> and 
Security Considerations <xref target="SET"/>). This enables the SET Receiver
to validate that the SET issuer is authorized to deliver SETs.</t>

</section>
<section anchor="http-considerations" title="HTTP Considerations">
<t>SET delivery depends on the use of Hypertext Transfer Protocol and thus
subject to the security considerations of HTTP Section 9 <xref target="RFC7230"/> and its related specifications.</t>

<t>As stated in Section 2.7.1 <xref target="RFC7230"/>, an 
HTTP requestor MUST NOT generate the <spanx style="verb">userinfo</spanx>
(i.e., username and password) component (and its “@” delimiter) when
an “http” URI reference is generated with a message as they are now
disallowed in HTTP.</t>

</section>
<section anchor="tls-support-considerations" title="TLS Support Considerations">
<t>SETs contain sensitive information that is considered PII
(e.g. subject claims). Therefore, SET Transmitters and
SET Receivers MUST require the use of a transport-layer 
security mechanism. Event delivery endpoints MUST support TLS 
1.2 <xref target="RFC5246"/> and MAY support additional 
transport-layer mechanisms meeting its security requirements. 
When using TLS, the client MUST perform a TLS/SSL server
certificate check, per <xref target="RFC6125"/>. Implementation
security considerations for TLS can be found in “Recommendations for
Secure Use of TLS and DTLS” <xref target="RFC7525"/>.</t>

</section>
<section anchor="authorization-token-considerations" title="Authorization Token Considerations">
<t>When using authorization tokens such as those issued by OAuth 2.0
<xref target="RFC6749"/>, implementers MUST take into account threats
and countermeasures documented in Section 8 of <xref target="RFC7521"/>.</t>

<section anchor="bearerConsiderations" title="Bearer Token Considerations">
<t>Due to the possibility of interception, Bearer tokens MUST be 
exchanged using TLS.</t>

<t>Bearer tokens MUST have a limited lifetime that can be determined
directly or indirectly (e.g., by checking with a validation service)
by the service provider. By expiring tokens, clients are forced to
obtain a new token (which usually involves re-authentication) for
continued authorized access. For example, in OAuth2, a client MAY use
OAuth token refresh to obtain a new bearer token after authenticating
to an authorization server. See Section 6 of <xref target="RFC6749"/>.</t>

<t>Implementations supporting OAuth bearer tokens need to factor in
security considerations of this authorization method 
<xref target="RFC7521"/>. Since security is only as good
as the weakest link, implementers also need to consider authentication
choices coupled with OAuth bearer tokens. The security considerations
of the default authentication method for OAuth bearer tokens, HTTP
BASIC, are well documented in 
<xref target="RFC7617"/>, therefore implementers
are encouraged to prefer stronger authentication methods. Designating
the specific methods of authentication and authorization are
out-of-scope for the delivery of SET tokens, however this 
information is provided as a resource to implementers.</t>

</section>
</section>
</section>
<section anchor="privacy-considerations" title="Privacy Considerations">

<t>If a SET needs to be retained for audit purposes, JWS MAY 
be used to provide verification of its authenticity.</t>

<t>When sharing personally identifiable information or information
that is otherwise considered confidential to affected users, SET 
Transmitters and Receivers MUST have the appropriate legal agreements
and user consent or terms of service in place.</t>

<t>The propagation of subject identifiers can be perceived as personally
identifiable information. Where possible, SET Transmitters and Receivers
SHOULD devise approaches that prevent propagation — for example, the
passing of a hash value that requires the subscriber to already know
the subject.</t>

</section>
<section anchor="IANA" title="IANA Considerations">

<section anchor="iana_set_errors" title="Security Event Token Delivery Error Codes">
<t>This document defines Security Event Token Delivery Error Codes, for which IANA is asked to create and maintain a new registry titled “Security Event Token Delivery Error Codes”.  Initial values for the Security Event Token Delivery Error Codes registry are given in <xref target="tabErrors"/>.  Future assignments are to be made through the Expert Review registration policy (<xref target="BCP26"/>) and shall follow the template presented in <xref target="iana_set_errors_template"/>.</t>

<section anchor="iana_set_errors_template" title="Registration Template">

<t><list style="hanging">
  <t hangText='Error Code'><vspace blankLines='0'/>
  The name of the Security Event Token Delivery Error Code, as described in <xref target="error_codes"/>. The name MUST be a case-sensitive ASCII string consisting only of upper-case letters (“A” - “Z”), lower-case letters (“a” - “z”), and digits (“0” - “9”).</t>
  <t hangText='Descrption'><vspace blankLines='0'/>
  A brief human-readable description of the Security Event Token Delivery Error Code.</t>
  <t hangText='Change Controller'><vspace blankLines='0'/>
  For error codes registered by the IETF or its working groups, list “IETF Secevent Working Group”.  For all other error codes, list the name of the party responsible for the registration.  Contact information such as mailing address, email address, or phone number may also be provided.</t>
  <t hangText='Defining Document(s)'><vspace blankLines='0'/>
  A reference to the document or documents that define the Security Event Token Delivery Error Code. The definition MUST specify the name and description of the error code, and explain under what circumstances the error code may be used. URIs that can be used to retrieve copies of each document at no cost SHOULD be included.</t>
</list></t>

</section>
<section anchor="initial-registry-contents" title="Initial Registry Contents">

<section anchor="json" title="json">
<t><list style="symbols">
  <t>Name: json</t>
  <t>Description: Invalid JSON object.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jwtparse" title="jwtParse">
<t><list style="symbols">
  <t>Name: jwtParse</t>
  <t>Description: Invalid or unparsable JWT or JSON structure.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jwthdr" title="jwtHdr">
<t><list style="symbols">
  <t>Name: jwtHdr</t>
  <t>Description: In invalid JWT header was detected.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jwtcrypto" title="jwtCrypto">
<t><list style="symbols">
  <t>Name: jwtCrypto</t>
  <t>Description: Unable to parse due to unsupported algorithm.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jws" title="jws">
<t><list style="symbols">
  <t>Name: jws</t>
  <t>Description: Signature was not validated.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jwe" title="jwe">
<t><list style="symbols">
  <t>Name: jwe</t>
  <t>Description: Unable to decrypt JWE encoded data.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jwtaud" title="jwtAud">
<t><list style="symbols">
  <t>Name: jwtAud</t>
  <t>Description: Invalid audience value.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jwtiss" title="jwtIss">
<t><list style="symbols">
  <t>Name: jwtIss</t>
  <t>Description: Issuer not recognized.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="settype" title="setType">
<t><list style="symbols">
  <t>Name: setType</t>
  <t>Description: An unexpected Event type was received.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="setparse" title="setParse">
<t><list style="symbols">
  <t>Name: setParse</t>
  <t>Description: Invalid structure was encountered such as an inability to parse or an incomplete set of Event claims.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="setdata" title="setData">
<t><list style="symbols">
  <t>Name: setData</t>
  <t>Description: SET event claims incomplete or invalid.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="dup" title="dup">
<t><list style="symbols">
  <t>Name: dup</t>
  <t>Description: A duplicate SET was received and has been ignored.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
</section>
</section>
</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor="SET" target='https://www.rfc-editor.org/info/rfc8417'>
<front>
<title>Security Event Token (SET)</title>
<author initials='P.' surname='Hunt' fullname='P. Hunt' role='editor'><organization /></author>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='W.' surname='Denniss' fullname='W. Denniss'><organization /></author>
<author initials='M.' surname='Ansari' fullname='M. Ansari'><organization /></author>
<date year='2018' month='July' />
<abstract><t>This specification defines the Security Event Token (SET) data structure.  A SET describes statements of fact from the perspective of an issuer about a subject.  These statements of fact represent an event that occurred directly to or about a security subject, for example, a statement about the issuance or revocation of a token on behalf of a subject.  This specification is intended to enable representing security- and identity-related events.  A SET is a JSON Web Token (JWT), which can be optionally signed and/or encrypted. SETs can be distributed via protocols such as HTTP.</t></abstract>
</front>
<seriesInfo name='RFC' value='8417'/>
<seriesInfo name='DOI' value='10.17487/RFC8417'/>
</reference>



<reference  anchor="BCP26" target='https://www.rfc-editor.org/info/rfc8126'>
<front>
<title>Guidelines for Writing an IANA Considerations Section in RFCs</title>
<author initials='M.' surname='Cotton' fullname='M. Cotton'><organization /></author>
<author initials='B.' surname='Leiba' fullname='B. Leiba'><organization /></author>
<author initials='T.' surname='Narten' fullname='T. Narten'><organization /></author>
<date year='2017' month='June' />
<abstract><t>Many protocols make use of points of extensibility that use constants to identify various protocol parameters.  To ensure that the values in these fields do not have conflicting uses and to promote interoperability, their allocations are often coordinated by a central record keeper.  For IETF protocols, that role is filled by the Internet Assigned Numbers Authority (IANA).</t><t>To make assignments in a given registry prudently, guidance describing the conditions under which new values should be assigned, as well as when and how modifications to existing values can be made, is needed.  This document defines a framework for the documentation of these guidelines by specification authors, in order to assure that the provided guidance for the IANA Considerations is clear and addresses the various issues that are likely in the operation of a registry.</t><t>This is the third edition of this document; it obsoletes RFC 5226.</t></abstract>
</front>
<seriesInfo name='BCP' value='26'/>
<seriesInfo name='RFC' value='8126'/>
<seriesInfo name='DOI' value='10.17487/RFC8126'/>
</reference>



<reference  anchor="RFC7231" target='https://www.rfc-editor.org/info/rfc7231'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines the semantics of HTTP/1.1 messages, as expressed by request methods, request header fields, response status codes, and response header fields, along with the payload of messages (metadata and body content) and mechanisms for content negotiation.</t></abstract>
</front>
<seriesInfo name='RFC' value='7231'/>
<seriesInfo name='DOI' value='10.17487/RFC7231'/>
</reference>



<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC8174" target='https://www.rfc-editor.org/info/rfc8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author initials='B.' surname='Leiba' fullname='B. Leiba'><organization /></author>
<date year='2017' month='May' />
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>



<reference  anchor="RFC3986" target='https://www.rfc-editor.org/info/rfc3986'>
<front>
<title>Uniform Resource Identifier (URI): Generic Syntax</title>
<author initials='T.' surname='Berners-Lee' fullname='T. Berners-Lee'><organization /></author>
<author initials='R.' surname='Fielding' fullname='R. Fielding'><organization /></author>
<author initials='L.' surname='Masinter' fullname='L. Masinter'><organization /></author>
<date year='2005' month='January' />
<abstract><t>A Uniform Resource Identifier (URI) is a compact sequence of characters that identifies an abstract or physical resource.  This specification defines the generic URI syntax and a process for resolving URI references that might be in relative form, along with guidelines and security considerations for the use of URIs on the Internet.  The URI syntax defines a grammar that is a superset of all valid URIs, allowing an implementation to parse the common components of a URI reference without knowing the scheme-specific requirements of every possible identifier.  This specification does not define a generative grammar for URIs; that task is performed by the individual specifications of each URI scheme.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='STD' value='66'/>
<seriesInfo name='RFC' value='3986'/>
<seriesInfo name='DOI' value='10.17487/RFC3986'/>
</reference>



<reference  anchor="RFC7519" target='https://www.rfc-editor.org/info/rfc7519'>
<front>
<title>JSON Web Token (JWT)</title>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='J.' surname='Bradley' fullname='J. Bradley'><organization /></author>
<author initials='N.' surname='Sakimura' fullname='N. Sakimura'><organization /></author>
<date year='2015' month='May' />
<abstract><t>JSON Web Token (JWT) is a compact, URL-safe means of representing claims to be transferred between two parties.  The claims in a JWT are encoded as a JSON object that is used as the payload of a JSON Web Signature (JWS) structure or as the plaintext of a JSON Web Encryption (JWE) structure, enabling the claims to be digitally signed or integrity protected with a Message Authentication Code (MAC) and/or encrypted.</t></abstract>
</front>
<seriesInfo name='RFC' value='7519'/>
<seriesInfo name='DOI' value='10.17487/RFC7519'/>
</reference>



<reference  anchor="RFC7235" target='https://www.rfc-editor.org/info/rfc7235'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Authentication</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application- level protocol for distributed, collaborative, hypermedia information systems.  This document defines the HTTP Authentication framework.</t></abstract>
</front>
<seriesInfo name='RFC' value='7235'/>
<seriesInfo name='DOI' value='10.17487/RFC7235'/>
</reference>



<reference  anchor="RFC5246" target='https://www.rfc-editor.org/info/rfc5246'>
<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.2</title>
<author initials='T.' surname='Dierks' fullname='T. Dierks'><organization /></author>
<author initials='E.' surname='Rescorla' fullname='E. Rescorla'><organization /></author>
<date year='2008' month='August' />
<abstract><t>This document specifies Version 1.2 of the Transport Layer Security (TLS) protocol.  The TLS protocol provides communications security over the Internet.  The protocol allows client/server applications to communicate in a way that is designed to prevent eavesdropping, tampering, or message forgery.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5246'/>
<seriesInfo name='DOI' value='10.17487/RFC5246'/>
</reference>



<reference  anchor="RFC6750" target='https://www.rfc-editor.org/info/rfc6750'>
<front>
<title>The OAuth 2.0 Authorization Framework: Bearer Token Usage</title>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='D.' surname='Hardt' fullname='D. Hardt'><organization /></author>
<date year='2012' month='October' />
<abstract><t>This specification describes how to use bearer tokens in HTTP requests to access OAuth 2.0 protected resources.  Any party in possession of a bearer token (a &quot;bearer&quot;) can use it to get access to the associated resources (without demonstrating possession of a cryptographic key).  To prevent misuse, bearer tokens need to be protected from disclosure in storage and in transport.   [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6750'/>
<seriesInfo name='DOI' value='10.17487/RFC6750'/>
</reference>



<reference  anchor="RFC6749" target='https://www.rfc-editor.org/info/rfc6749'>
<front>
<title>The OAuth 2.0 Authorization Framework</title>
<author initials='D.' surname='Hardt' fullname='D. Hardt' role='editor'><organization /></author>
<date year='2012' month='October' />
<abstract><t>The OAuth 2.0 authorization framework enables a third-party application to obtain limited access to an HTTP service, either on behalf of a resource owner by orchestrating an approval interaction between the resource owner and the HTTP service, or by allowing the third-party application to obtain access on its own behalf.  This specification replaces and obsoletes the OAuth 1.0 protocol described in RFC 5849.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6749'/>
<seriesInfo name='DOI' value='10.17487/RFC6749'/>
</reference>



<reference  anchor="RFC7617" target='https://www.rfc-editor.org/info/rfc7617'>
<front>
<title>The 'Basic' HTTP Authentication Scheme</title>
<author initials='J.' surname='Reschke' fullname='J. Reschke'><organization /></author>
<date year='2015' month='September' />
<abstract><t>This document defines the &quot;Basic&quot; Hypertext Transfer Protocol (HTTP) authentication scheme, which transmits credentials as user-id/ password pairs, encoded using Base64.</t></abstract>
</front>
<seriesInfo name='RFC' value='7617'/>
<seriesInfo name='DOI' value='10.17487/RFC7617'/>
</reference>



<reference  anchor="RFC7521" target='https://www.rfc-editor.org/info/rfc7521'>
<front>
<title>Assertion Framework for OAuth 2.0 Client Authentication and Authorization Grants</title>
<author initials='B.' surname='Campbell' fullname='B. Campbell'><organization /></author>
<author initials='C.' surname='Mortimore' fullname='C. Mortimore'><organization /></author>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='Y.' surname='Goland' fullname='Y. Goland'><organization /></author>
<date year='2015' month='May' />
<abstract><t>This specification provides a framework for the use of assertions with OAuth 2.0 in the form of a new client authentication mechanism and a new authorization grant type.  Mechanisms are specified for transporting assertions during interactions with a token endpoint; general processing rules are also specified.</t><t>The intent of this specification is to provide a common framework for OAuth 2.0 to interwork with other identity systems using assertions and to provide alternative client authentication mechanisms.</t><t>Note that this specification only defines abstract message flows and processing rules.  In order to be implementable, companion specifications are necessary to provide the corresponding concrete instantiations.</t></abstract>
</front>
<seriesInfo name='RFC' value='7521'/>
<seriesInfo name='DOI' value='10.17487/RFC7521'/>
</reference>



<reference  anchor="RFC7515" target='https://www.rfc-editor.org/info/rfc7515'>
<front>
<title>JSON Web Signature (JWS)</title>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='J.' surname='Bradley' fullname='J. Bradley'><organization /></author>
<author initials='N.' surname='Sakimura' fullname='N. Sakimura'><organization /></author>
<date year='2015' month='May' />
<abstract><t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures.  Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification.  Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t></abstract>
</front>
<seriesInfo name='RFC' value='7515'/>
<seriesInfo name='DOI' value='10.17487/RFC7515'/>
</reference>



<reference  anchor="RFC7230" target='https://www.rfc-editor.org/info/rfc7230'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems.  This document provides an overview of HTTP architecture and its associated terminology, defines the &quot;http&quot; and &quot;https&quot; Uniform Resource Identifier (URI) schemes, defines the HTTP/1.1 message syntax and parsing requirements, and describes related security concerns for implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='7230'/>
<seriesInfo name='DOI' value='10.17487/RFC7230'/>
</reference>



<reference  anchor="RFC6125" target='https://www.rfc-editor.org/info/rfc6125'>
<front>
<title>Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)</title>
<author initials='P.' surname='Saint-Andre' fullname='P. Saint-Andre'><organization /></author>
<author initials='J.' surname='Hodges' fullname='J. Hodges'><organization /></author>
<date year='2011' month='March' />
<abstract><t>Many application technologies enable secure communication between two entities by means of Internet Public Key Infrastructure Using X.509 (PKIX) certificates in the context of Transport Layer Security (TLS). This document specifies procedures for representing and verifying the identity of application services in such interactions.   [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6125'/>
<seriesInfo name='DOI' value='10.17487/RFC6125'/>
</reference>



<reference  anchor="RFC7525" target='https://www.rfc-editor.org/info/rfc7525'>
<front>
<title>Recommendations for Secure Use of Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS)</title>
<author initials='Y.' surname='Sheffer' fullname='Y. Sheffer'><organization /></author>
<author initials='R.' surname='Holz' fullname='R. Holz'><organization /></author>
<author initials='P.' surname='Saint-Andre' fullname='P. Saint-Andre'><organization /></author>
<date year='2015' month='May' />
<abstract><t>Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS) are widely used to protect data exchanged over application protocols such as HTTP, SMTP, IMAP, POP, SIP, and XMPP.  Over the last few years, several serious attacks on TLS have emerged, including attacks on its most commonly used cipher suites and their modes of operation.  This document provides recommendations for improving the security of deployed services that use TLS and DTLS. The recommendations are applicable to the majority of use cases.</t></abstract>
</front>
<seriesInfo name='BCP' value='195'/>
<seriesInfo name='RFC' value='7525'/>
<seriesInfo name='DOI' value='10.17487/RFC7525'/>
</reference>




    </references>



<section anchor="other-streaming-specifications" title="Other Streaming Specifications">
<t>[[EDITORS NOTE: This section to be removed prior to publication]]</t>

<t>The following pub/sub, queuing, streaming systems were reviewed 
as possible solutions or as input to the current draft:</t>

<t>XMPP Events</t>

<t>The WG considered the XMPP events ands its ability to provide a single
messaging solution without the need for both polling and push modes.
The feeling was the size and methodology of XMPP was to far apart from
the current capabilities of the SECEVENTs community which focuses in
on HTTP based service delivery and authorization.</t>

<t>Amazon Simple Notification Service</t>

<t>Simple Notification Service, is a pub/sub messaging product from 
AWS. SNS supports a variety of subscriber types: HTTP/HTTPS endpoints, 
AWS Lambda functions, email addresses (as JSON or plain text), phone 
numbers (via SMS), and AWS SQS standard queues. It doesn’t directly 
support pull, but subscribers can get the pull model by creating an 
SQS queue and subscribing it to the topic. Note that this puts the 
cost of pull support back onto the subscriber, just as it is in the 
push model. It is not clear that one way is strictly better than the 
other; larger, sophisticated developers may be happy to own message 
persistence so they can have their own internal delivery guarantees. 
The long tail of OIDC clients may not care about that, or may fail 
to get it right. Regardless, I think we can learn something from the 
Delivery Policies supported by SNS, as well as the delivery controls 
that SQS offers (e.g. Visibility Timeout, Dead-Letter Queues). I’m 
not suggesting that we need all of these things in the spec, but 
they give an idea of what features people have found useful.</t>

<t>Other information:</t>

<t><list style="symbols">
  <t>API Reference: http://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/Welcome.html</t>
  <t>Visibility Timeouts: http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-visibility-timeout.html</t>
</list></t>

<t>Apache Kafka</t>

<t>Apache Kafka is an Apache open source project based upon TCP for 
distributed streaming. It prescribes some interesting general 
purpose features that seem to extend far beyond the simpler 
streaming model SECEVENTs is after. A comment from MS has been that 
Kafka does an acknowledge with poll combination event which seems 
to be a performance advantage. See: https://kafka.apache.org/intro</t>

<t>Google Pub/Sub</t>

<t>Google Pub Sub system favours a model whereby polling and acknowledgement
of events is done as separate endpoints as separate functions.</t>

<t>Information:</t>

<t><list style="symbols">
  <t>Cloud Overview - https://cloud.google.com/pubsub/</t>
  <t>Subscriber Overview - https://cloud.google.com/pubsub/docs/subscriber</t>
  <t>Subscriber Pull(poll) - https://cloud.google.com/pubsub/docs/pull</t>
</list></t>

</section>
<section anchor="acknowledgments" title="Acknowledgments">
<t>The editors would like to thanks the members of the SCIM WG which 
began discussions of provisioning events starting with: draft-hunt-scim-notify-00 in 2015.</t>

<t>The editors would like to thank the authors of draft-ietf-secevent-delivery-02,
on which this draft is based.</t>

<t>The editor would like to thank the participants in the the SECEVENTS
working group for their support of this specification.</t>

</section>
<section anchor="change-log" title="Change Log">
<t>Draft 00 - AB - Based on draft-ietf-secevent-delivery-02 with the 
following changes:</t>

<t><list style="symbols">
  <t>Renamed to “Push-Based SET Token Delivery Using HTTP”</t>
  <t>Removed references to the HTTP Polling delivery method.</t>
  <t>Removed informative reference to RFC6202.</t>
</list></t>

<t>Draft 01 - AB</t>

<t><list style="symbols">
  <t>Converted to Markdown</t>
  <t>Removed NumericDate definition (unused).</t>
  <t>Removed Event and Subject definitions (defined in SET).</t>
  <t>Removed text related to Event Streams.</t>
  <t>Removed Mike Jones and Phil Hunt as editors, per respective requests.</t>
  <t>Fixed area and workgroup to match secevent.</t>
  <t>Renamed Event Transmitter and Event Receiver to SET Transmitter and SET Receiver, respectively.</t>
  <t>Added IANA registry for SET Delivery Error Codes.</t>
</list></t>

</section>


  </back>

<!-- ##markdown-source:
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
6PpcKQr2fTueB+J/AB2mePK3YwAA

-->

</rfc>

