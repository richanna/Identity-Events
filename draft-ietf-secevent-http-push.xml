<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.2 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-secevent-http-push-01" category="std">

  <front>
    <title abbrev="draft-ietf-secevent-http-push">Push-Based SET Token Delivery Using HTTP</title>

    <author initials="A." surname="Backman" fullname="Annabelle Backman" role="editor">
      <organization>Amazon</organization>
      <address>
        <email>richanna@amazon.com</email>
      </address>
    </author>
    <author initials="M." surname="Jones" fullname="Michael B. Jones">
      <organization>Microsoft</organization>
      <address>
        <email>mbj@microsoft.com</email>
        <uri>http://self-issued.info/</uri>
      </address>
    </author>
    <author initials="P." surname="Hunt" fullname="Phil Hunt">
      <organization>Oracle</organization>
      <address>
        <email>phil.hunt@yahoo.com</email>
      </address>
    </author>
    <author initials="M." surname="Scurtescu" fullname="Marius Scurtescu">
      <organization>Google</organization>
      <address>
        <email>mscurtescu@google.com</email>
      </address>
    </author>
    <author initials="M." surname="Ansari" fullname="Morteza Ansari">
      <organization>Cisco</organization>
      <address>
        <email>morteza.ansari@cisco.com</email>
      </address>
    </author>
    <author initials="A." surname="Nadalin" fullname="Anthony Nadalin">
      <organization>Microsoft</organization>
      <address>
        <email>tonynad@microsoft.com</email>
      </address>
    </author>

    <date year="2018" month="August" day="28"/>

    <area>Security</area>
    <workgroup>Security Events Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This specification defines how a series of security event tokens 
(SETs) may be delivered to a previously registered receiver 
using HTTP POST over TLS initiated as a push to the receiver.</t>



    </abstract>


  </front>

  <middle>


<section anchor="intro" title="Introduction and Overview">
<t>This specification defines how SETs (see
<xref target="SET"/>) can be transmitted to a previously 
registered SET Receiver using HTTP <xref target="RFC7231"/> over TLS. The
specification defines a method to push SETs via HTTP POST.</t>

<section anchor="conv" title="Notational Conventions">
<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL
NOT”, “SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”,
“MAY”, and “OPTIONAL” in this document are to be interpreted as
described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when,
they appear in all capitals, as shown here.</t>

<t>Throughout this documents all figures may contain spaces and extra
line-wrapping for readability and space limitations.</t>

</section>
<section anchor="defn" title="Definitions">
<t>This specification assumes terminology defined in the Security
Event Token specification <xref target="SET"/>, as well as the terms defined below:</t>

<t><list style="hanging">
  <t hangText='SET Transmitter'><vspace blankLines='0'/>
  A service provider that delivers SETs to other providers known
as SET Receivers.</t>
  <t hangText='SET Receiver'><vspace blankLines='0'/>
  A service provider that registers to receive SETs from a SET
Transmitter and provides an endpoint to receive SETs via HTTP POST.</t>
</list></t>

</section>
</section>
<section anchor="event_delivery" title="Event Delivery">

<section anchor="event_delivery_process" title="Event Delivery Process">
<t>In Push-Based SET Delivery Using HTTP, SETs are delivered one at a
time using HTTP POST requests by a SET Transmitter to a SET
Receiver, as described below in <xref target="tx_request"/>. Upon receipt,
the SET Receiver acknowledges receipt or indicates an error
via the HTTP response, as described below in <xref target="tx_handling"/>.</t>

<t>After successful (acknowledged) SET delivery, SET 
Transmitters SHOULD NOT be required to maintain or record SETs for 
recovery. Once a SET is acknowledged, the SET Receiver SHALL be 
responsible for retention and recovery.</t>

<t>Transmitted SETs SHOULD be self-validating (e.g. signed)
if there is a requirement to verify they were issued by the SET 
Transmitter at a later date when de-coupled from the original 
delivery where authenticity could be checked via the HTTP or 
TLS mutual authentication.</t>

<t>Upon receiving a SET, the SET Receiver reads the SET and validates 
it. The SET Receiver MUST acknowledge receipt to the SET Transmitter, using the 
defined acknowledgement or error method.</t>

<t>The SET Receiver SHALL NOT use the Event acknowledgement mechanism
to report Event errors other than relating to the parsing and validation
of the SET.</t>

</section>
<section anchor="tx_request" title="Transmitting a SET">
<t>This method allows a SET Transmitter to use HTTP POST 
(Section 4.3.3 <xref target="RFC7231"/>) to deliver
SETs to a previously registered web callback URI supplied by the
SET Receiver as part of a configuration process 
(not defined by this document).</t>

<t>The SET to be delivered MAY be signed 
and/or encrypted as defined in <xref target="SET"/>.</t>

<t>The HTTP Content-Type (see 
Section 3.1.1.5 <xref target="RFC7231"/>) for the HTTP POST is 
<spanx style="verb">application/secevent+jwt</spanx> and the request body SHALL consist of 
a single SET (see <xref target="SET"/>).
As per Section 5.3.2 <xref target="RFC7231"/>, the value of the
<spanx style="verb">Accept</spanx> header is 
<spanx style="verb">application/json</spanx>.</t>

<t>The following is a non-normative example of a SET transmission HTTP POST request:</t>

<figure title="Example SET Transmission Request" anchor="postSet"><artwork><![CDATA[
POST /Events  HTTP/1.1

Host: notify.examplerp.com
Accept: application/json
Content-Type: application/secevent+jwt

eyJhbGciOiJub25lIn0
.
eyJwdWJsaXNoZXJVcmkiOiJodHRwczovL3NjaW0uZXhhbXBsZS5jb20iLCJmZWV
kVXJpcyI6WyJodHRwczovL2podWIuZXhhbXBsZS5jb20vRmVlZHMvOThkNTI0Nj
FmYTViYmM4Nzk1OTNiNzc1NCIsImh0dHBzOi8vamh1Yi5leGFtcGxlLmNvbS9GZ
WVkcy81ZDc2MDQ1MTZiMWQwODY0MWQ3Njc2ZWU3Il0sInJlc291cmNlVXJpcyI6
WyJodHRwczovL3NjaW0uZXhhbXBsZS5jb20vVXNlcnMvNDRmNjE0MmRmOTZiZDZ
hYjYxZTc1MjFkOSJdLCJldmVudFR5cGVzIjpbIkNSRUFURSJdLCJhdHRyaWJ1dG
VzIjpbImlkIiwibmFtZSIsInVzZXJOYW1lIiwicGFzc3dvcmQiLCJlbWFpbHMiX
SwidmFsdWVzIjp7ImVtYWlscyI6W3sidHlwZSI6IndvcmsiLCJ2YWx1ZSI6Impk
b2VAZXhhbXBsZS5jb20ifV0sInBhc3N3b3JkIjoibm90NHUybm8iLCJ1c2VyTmF
tZSI6Impkb2UiLCJpZCI6IjQ0ZjYxNDJkZjk2YmQ2YWI2MWU3NTIxZDkiLCJuYW
1lIjp7ImdpdmVuTmFtZSI6IkpvaG4iLCJmYW1pbHlOYW1lIjoiRG9lIn19fQ
.
]]></artwork></figure>

</section>
<section anchor="tx_handling" title="Handling a SET Transmission Request">
<t>Upon receipt of the request, the SET Receiver SHALL 
validate the JWT structure of the SET as defined in 
Section 7.2 <xref target="RFC7519"/>. The SET Receiver 
SHALL also validate the SET information as described
in Section 2 <xref target="SET"/>.</t>

<section anchor="tx_success" title="Success Response">
<t>If the SET is determined to be valid, the SET Receiver SHALL
“acknowledge” successful submission by responding with HTTP Status
202 as <spanx style="verb">Accepted</spanx> 
(see Section 6.3.3 <xref target="RFC7231"/>).</t>

<t>In order
to maintain compatibility with other methods of transmission, the 
SET Receiver SHOULD NOT include an HTTP response body representation
of the submitted SET or what the SET’s pending status is when 
acknowledging success. In the case of an error (e.g. HTTP Status 400),
the purpose of the HTTP response body is to indicate any SET parsing, 
validation, or cryptographic errors.</t>

<t>The following is a non-normative example of a successful
receipt of a SET.</t>

<figure title="Example Successful Delivery Response" anchor="goodPostResponse"><artwork><![CDATA[
HTTP/1.1 202 Accepted
]]></artwork></figure>

<t>Note that the purpose of the “acknowledgement” response is to let the 
SET Transmitter know that a SET has been delivered and the 
information no longer needs to be retained by the SET Transmitter. 
Before acknowledgement, SET Receivers SHOULD ensure they have 
validated received SETs and retained them in a manner appropriate 
to information retention requirements appropriate to the SET 
event types signaled. The level and method of retention of SETs
by SET Receivers is out-of-scope of this specification.</t>

</section>
<section anchor="tx_failure" title="Failure Response">
<t>In the Event of a general HTTP error condition, the SET Receiver
MAY respond with an appropriate HTTP Status code as defined in 
Section 6 <xref target="RFC7231"/>.</t>

<t>When the SET Receiver detects an error parsing or 
validating a received SET (as defined by <xref target="SET"/>), 
the SET Receiver SHALL indicate an HTTP Status 400 error with an 
error response as described in <xref target="errorResponse"/>.</t>

<t>The following is an example non-normative error 
response.</t>

<figure title="Example Error Response" anchor="badPostResponse"><artwork><![CDATA[
HTTP/1.1 400 Bad Request
Content-Type: application/json

{
  "err":"dup",
  "description":"SET already received. Ignored."

}
]]></artwork></figure>

</section>
<section anchor="error_codes" title="Security Event Token Delivery Error Codes">
<t>Security Event Token Delivery Error Codes are strings that identify a specific type of error that may occur when parsing or validating a SET. Every Security Event Token Delivery Error Code MUST have a unique name registered in the IANA “Security Event Token Delivery Error Codes” registry established by <xref target="iana_set_errors"/>.</t>

<t>The following table presents the initial set of Error Codes that are registered in the IANA “Security Event Token Delivery Error Codes” registry:</t>

<texttable title="SET Delivery Error Codes" anchor="tabErrors">
      <ttcol align='left'>Error Code</ttcol>
      <ttcol align='left'>Description</ttcol>
      <c>json</c>
      <c>Invalid JSON object.</c>
      <c>jwtParse</c>
      <c>Invalid or unparsable JWT or JSON structure.</c>
      <c>jwtHdr</c>
      <c>In invalid JWT header was detected.</c>
      <c>jwtCrypto</c>
      <c>Unable to parse due to unsupported algorithm.</c>
      <c>jws</c>
      <c>Signature was not validated.</c>
      <c>jwe</c>
      <c>Unable to decrypt JWE encoded data.</c>
      <c>jwtAud</c>
      <c>Invalid audience value.</c>
      <c>jwtIss</c>
      <c>Issuer not recognized.</c>
      <c>setType</c>
      <c>An unexpected Event type was received.</c>
      <c>setParse</c>
      <c>Invalid structure was encountered such as an inability to parse or an incomplete set of Event claims.</c>
      <c>setData</c>
      <c>SET event claims incomplete or invalid.</c>
      <c>dup</c>
      <c>A duplicate SET was received and has been ignored.</c>
</texttable>

</section>
<section anchor="errorResponse" title="Error Response Handling">
<t>An error response SHALL include a JSON
object which provides details about the error. The JSON object
includes the JSON attributes:</t>

<t><list style="hanging">
  <t hangText='err'><vspace blankLines='0'/>
  A Security Event Token Delivery Error Code (see <xref target="error_codes"/>).
description</t>
  <t>A human-readable text that provides
additional diagnostic information.</t>
</list></t>

<t>When included as part of an HTTP Status 400 response, the above
JSON is the HTTP response body (see <xref target="badPostResponse"/>).</t>

</section>
</section>
</section>
<section anchor="aa" title="Authentication and Authorization">

<t>The SET delivery method described in this specification is
based upon HTTP and depends on the use of TLS and/or standard 
HTTP authentication and authorization schemes as per 
<xref target="RFC7235"/>.</t>

<t>Because SET Delivery describes a simple function, authorization
for the ability to pick-up or deliver SETs can be derived by
considering the identity of the SET issuer, or via other employed
authentication methods.  Because SETs are
not commands (see ), SET Receivers are free to ignore SETs that 
are not of interest.</t>

</section>
<section anchor="Security" title="Security Considerations">

<section anchor="payloadAuthentication" title="Authentication Using Signed SETs">
<t>In scenarios where HTTP authorization or TLS mutual authentication
are not used or are considered weak, JWS signed SETs SHOULD be 
used (see <xref target="RFC7515"/> and 
Security Considerations <xref target="SET"/>). This enables the SET Receiver
to validate that the SET issuer is authorized to deliver SETs.</t>

</section>
<section anchor="tls-support-considerations" title="TLS Support Considerations">
<t>SETs contain sensitive information that is considered PII
(e.g. subject claims). Therefore, SET Transmitters and
SET Receivers MUST require the use of a transport-layer 
security mechanism. Event delivery endpoints MUST support TLS 
1.2 <xref target="RFC5246"/> and MAY support additional 
transport-layer mechanisms meeting its security requirements. 
When using TLS, the client MUST perform a TLS/SSL server
certificate check, per <xref target="RFC6125"/>. Implementation
security considerations for TLS can be found in “Recommendations for
Secure Use of TLS and DTLS” <xref target="RFC7525"/>.</t>

</section>
<section anchor="denial-of-service" title="Denial of Service">
<t>The SET Receiver may be vulnerable to a denial-of-service attack where a malicious party makes a high volume of requests containing invalid SETs, causing the endpoint to expend significant resources on cryptographic operations that are bound to fail. This may be mitigated by authenticating SET Transmitters with a mechanism with low runtime overhead, such as mutual TLS or statically assigned bearer tokens.</t>

</section>
</section>
<section anchor="privacy-considerations" title="Privacy Considerations">

<t>If a SET needs to be retained for audit purposes, JWS MAY 
be used to provide verification of its authenticity.</t>

<t>When sharing personally identifiable information or information
that is otherwise considered confidential to affected users, SET 
Transmitters and Receivers MUST have the appropriate legal agreements
and user consent or terms of service in place.</t>

<t>The propagation of subject identifiers can be perceived as personally
identifiable information. Where possible, SET Transmitters and Receivers
SHOULD devise approaches that prevent propagation — for example, the
passing of a hash value that requires the subscriber to already know
the subject.</t>

</section>
<section anchor="IANA" title="IANA Considerations">

<section anchor="iana_set_errors" title="Security Event Token Delivery Error Codes">
<t>This document defines Security Event Token Delivery Error Codes, for which IANA is asked to create and maintain a new registry titled “Security Event Token Delivery Error Codes”.  Initial values for the Security Event Token Delivery Error Codes registry are given in <xref target="tabErrors"/>.  Future assignments are to be made through the Expert Review registration policy (<xref target="BCP26"/>) and shall follow the template presented in <xref target="iana_set_errors_template"/>.</t>

<section anchor="iana_set_errors_template" title="Registration Template">

<t><list style="hanging">
  <t hangText='Error Code'><vspace blankLines='0'/>
  The name of the Security Event Token Delivery Error Code, as described in <xref target="error_codes"/>. The name MUST be a case-sensitive ASCII string consisting only of upper-case letters (“A” - “Z”), lower-case letters (“a” - “z”), and digits (“0” - “9”).</t>
  <t hangText='Descrption'><vspace blankLines='0'/>
  A brief human-readable description of the Security Event Token Delivery Error Code.</t>
  <t hangText='Change Controller'><vspace blankLines='0'/>
  For error codes registered by the IETF or its working groups, list “IETF Secevent Working Group”.  For all other error codes, list the name of the party responsible for the registration.  Contact information such as mailing address, email address, or phone number may also be provided.</t>
  <t hangText='Defining Document(s)'><vspace blankLines='0'/>
  A reference to the document or documents that define the Security Event Token Delivery Error Code. The definition MUST specify the name and description of the error code, and explain under what circumstances the error code may be used. URIs that can be used to retrieve copies of each document at no cost SHOULD be included.</t>
</list></t>

</section>
<section anchor="initial-registry-contents" title="Initial Registry Contents">

<section anchor="json" title="json">
<t><list style="symbols">
  <t>Name: json</t>
  <t>Description: Invalid JSON object.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jwtparse" title="jwtParse">
<t><list style="symbols">
  <t>Name: jwtParse</t>
  <t>Description: Invalid or unparsable JWT or JSON structure.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jwthdr" title="jwtHdr">
<t><list style="symbols">
  <t>Name: jwtHdr</t>
  <t>Description: In invalid JWT header was detected.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jwtcrypto" title="jwtCrypto">
<t><list style="symbols">
  <t>Name: jwtCrypto</t>
  <t>Description: Unable to parse due to unsupported algorithm.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jws" title="jws">
<t><list style="symbols">
  <t>Name: jws</t>
  <t>Description: Signature was not validated.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jwe" title="jwe">
<t><list style="symbols">
  <t>Name: jwe</t>
  <t>Description: Unable to decrypt JWE encoded data.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jwtaud" title="jwtAud">
<t><list style="symbols">
  <t>Name: jwtAud</t>
  <t>Description: Invalid audience value.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jwtiss" title="jwtIss">
<t><list style="symbols">
  <t>Name: jwtIss</t>
  <t>Description: Issuer not recognized.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="settype" title="setType">
<t><list style="symbols">
  <t>Name: setType</t>
  <t>Description: An unexpected Event type was received.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="setparse" title="setParse">
<t><list style="symbols">
  <t>Name: setParse</t>
  <t>Description: Invalid structure was encountered such as an inability to parse or an incomplete set of Event claims.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="setdata" title="setData">
<t><list style="symbols">
  <t>Name: setData</t>
  <t>Description: SET event claims incomplete or invalid.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="dup" title="dup">
<t><list style="symbols">
  <t>Name: dup</t>
  <t>Description: A duplicate SET was received and has been ignored.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
</section>
</section>
</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor="SET" target='https://www.rfc-editor.org/info/rfc8417'>
<front>
<title>Security Event Token (SET)</title>
<author initials='P.' surname='Hunt' fullname='P. Hunt' role='editor'><organization /></author>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='W.' surname='Denniss' fullname='W. Denniss'><organization /></author>
<author initials='M.' surname='Ansari' fullname='M. Ansari'><organization /></author>
<date year='2018' month='July' />
<abstract><t>This specification defines the Security Event Token (SET) data structure.  A SET describes statements of fact from the perspective of an issuer about a subject.  These statements of fact represent an event that occurred directly to or about a security subject, for example, a statement about the issuance or revocation of a token on behalf of a subject.  This specification is intended to enable representing security- and identity-related events.  A SET is a JSON Web Token (JWT), which can be optionally signed and/or encrypted. SETs can be distributed via protocols such as HTTP.</t></abstract>
</front>
<seriesInfo name='RFC' value='8417'/>
<seriesInfo name='DOI' value='10.17487/RFC8417'/>
</reference>



<reference  anchor="BCP26" target='https://www.rfc-editor.org/info/rfc8126'>
<front>
<title>Guidelines for Writing an IANA Considerations Section in RFCs</title>
<author initials='M.' surname='Cotton' fullname='M. Cotton'><organization /></author>
<author initials='B.' surname='Leiba' fullname='B. Leiba'><organization /></author>
<author initials='T.' surname='Narten' fullname='T. Narten'><organization /></author>
<date year='2017' month='June' />
<abstract><t>Many protocols make use of points of extensibility that use constants to identify various protocol parameters.  To ensure that the values in these fields do not have conflicting uses and to promote interoperability, their allocations are often coordinated by a central record keeper.  For IETF protocols, that role is filled by the Internet Assigned Numbers Authority (IANA).</t><t>To make assignments in a given registry prudently, guidance describing the conditions under which new values should be assigned, as well as when and how modifications to existing values can be made, is needed.  This document defines a framework for the documentation of these guidelines by specification authors, in order to assure that the provided guidance for the IANA Considerations is clear and addresses the various issues that are likely in the operation of a registry.</t><t>This is the third edition of this document; it obsoletes RFC 5226.</t></abstract>
</front>
<seriesInfo name='BCP' value='26'/>
<seriesInfo name='RFC' value='8126'/>
<seriesInfo name='DOI' value='10.17487/RFC8126'/>
</reference>



<reference  anchor="RFC7231" target='https://www.rfc-editor.org/info/rfc7231'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines the semantics of HTTP/1.1 messages, as expressed by request methods, request header fields, response status codes, and response header fields, along with the payload of messages (metadata and body content) and mechanisms for content negotiation.</t></abstract>
</front>
<seriesInfo name='RFC' value='7231'/>
<seriesInfo name='DOI' value='10.17487/RFC7231'/>
</reference>



<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC8174" target='https://www.rfc-editor.org/info/rfc8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author initials='B.' surname='Leiba' fullname='B. Leiba'><organization /></author>
<date year='2017' month='May' />
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>



<reference  anchor="RFC7519" target='https://www.rfc-editor.org/info/rfc7519'>
<front>
<title>JSON Web Token (JWT)</title>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='J.' surname='Bradley' fullname='J. Bradley'><organization /></author>
<author initials='N.' surname='Sakimura' fullname='N. Sakimura'><organization /></author>
<date year='2015' month='May' />
<abstract><t>JSON Web Token (JWT) is a compact, URL-safe means of representing claims to be transferred between two parties.  The claims in a JWT are encoded as a JSON object that is used as the payload of a JSON Web Signature (JWS) structure or as the plaintext of a JSON Web Encryption (JWE) structure, enabling the claims to be digitally signed or integrity protected with a Message Authentication Code (MAC) and/or encrypted.</t></abstract>
</front>
<seriesInfo name='RFC' value='7519'/>
<seriesInfo name='DOI' value='10.17487/RFC7519'/>
</reference>



<reference  anchor="RFC7235" target='https://www.rfc-editor.org/info/rfc7235'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Authentication</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application- level protocol for distributed, collaborative, hypermedia information systems.  This document defines the HTTP Authentication framework.</t></abstract>
</front>
<seriesInfo name='RFC' value='7235'/>
<seriesInfo name='DOI' value='10.17487/RFC7235'/>
</reference>



<reference  anchor="RFC7515" target='https://www.rfc-editor.org/info/rfc7515'>
<front>
<title>JSON Web Signature (JWS)</title>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='J.' surname='Bradley' fullname='J. Bradley'><organization /></author>
<author initials='N.' surname='Sakimura' fullname='N. Sakimura'><organization /></author>
<date year='2015' month='May' />
<abstract><t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures.  Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification.  Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t></abstract>
</front>
<seriesInfo name='RFC' value='7515'/>
<seriesInfo name='DOI' value='10.17487/RFC7515'/>
</reference>



<reference  anchor="RFC5246" target='https://www.rfc-editor.org/info/rfc5246'>
<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.2</title>
<author initials='T.' surname='Dierks' fullname='T. Dierks'><organization /></author>
<author initials='E.' surname='Rescorla' fullname='E. Rescorla'><organization /></author>
<date year='2008' month='August' />
<abstract><t>This document specifies Version 1.2 of the Transport Layer Security (TLS) protocol.  The TLS protocol provides communications security over the Internet.  The protocol allows client/server applications to communicate in a way that is designed to prevent eavesdropping, tampering, or message forgery.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5246'/>
<seriesInfo name='DOI' value='10.17487/RFC5246'/>
</reference>



<reference  anchor="RFC6125" target='https://www.rfc-editor.org/info/rfc6125'>
<front>
<title>Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)</title>
<author initials='P.' surname='Saint-Andre' fullname='P. Saint-Andre'><organization /></author>
<author initials='J.' surname='Hodges' fullname='J. Hodges'><organization /></author>
<date year='2011' month='March' />
<abstract><t>Many application technologies enable secure communication between two entities by means of Internet Public Key Infrastructure Using X.509 (PKIX) certificates in the context of Transport Layer Security (TLS). This document specifies procedures for representing and verifying the identity of application services in such interactions.   [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6125'/>
<seriesInfo name='DOI' value='10.17487/RFC6125'/>
</reference>




    </references>

    <references title='Informative References'>





<reference  anchor="RFC7525" target='https://www.rfc-editor.org/info/rfc7525'>
<front>
<title>Recommendations for Secure Use of Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS)</title>
<author initials='Y.' surname='Sheffer' fullname='Y. Sheffer'><organization /></author>
<author initials='R.' surname='Holz' fullname='R. Holz'><organization /></author>
<author initials='P.' surname='Saint-Andre' fullname='P. Saint-Andre'><organization /></author>
<date year='2015' month='May' />
<abstract><t>Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS) are widely used to protect data exchanged over application protocols such as HTTP, SMTP, IMAP, POP, SIP, and XMPP.  Over the last few years, several serious attacks on TLS have emerged, including attacks on its most commonly used cipher suites and their modes of operation.  This document provides recommendations for improving the security of deployed services that use TLS and DTLS. The recommendations are applicable to the majority of use cases.</t></abstract>
</front>
<seriesInfo name='BCP' value='195'/>
<seriesInfo name='RFC' value='7525'/>
<seriesInfo name='DOI' value='10.17487/RFC7525'/>
</reference>




    </references>


<section anchor="other-streaming-specifications" title="Other Streaming Specifications">
<t>[[EDITORS NOTE: This section to be removed prior to publication]]</t>

<t>The following pub/sub, queuing, streaming systems were reviewed 
as possible solutions or as input to the current draft:</t>

<t>XMPP Events</t>

<t>The WG considered the XMPP events ands its ability to provide a single
messaging solution without the need for both polling and push modes.
The feeling was the size and methodology of XMPP was to far apart from
the current capabilities of the SECEVENTs community which focuses in
on HTTP based service delivery and authorization.</t>

<t>Amazon Simple Notification Service</t>

<t>Simple Notification Service, is a pub/sub messaging product from 
AWS. SNS supports a variety of subscriber types: HTTP/HTTPS endpoints, 
AWS Lambda functions, email addresses (as JSON or plain text), phone 
numbers (via SMS), and AWS SQS standard queues. It doesn’t directly 
support pull, but subscribers can get the pull model by creating an 
SQS queue and subscribing it to the topic. Note that this puts the 
cost of pull support back onto the subscriber, just as it is in the 
push model. It is not clear that one way is strictly better than the 
other; larger, sophisticated developers may be happy to own message 
persistence so they can have their own internal delivery guarantees. 
The long tail of OIDC clients may not care about that, or may fail 
to get it right. Regardless, I think we can learn something from the 
Delivery Policies supported by SNS, as well as the delivery controls 
that SQS offers (e.g. Visibility Timeout, Dead-Letter Queues). I’m 
not suggesting that we need all of these things in the spec, but 
they give an idea of what features people have found useful.</t>

<t>Other information:</t>

<t><list style="symbols">
  <t>API Reference: http://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/Welcome.html</t>
  <t>Visibility Timeouts: http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-visibility-timeout.html</t>
</list></t>

<t>Apache Kafka</t>

<t>Apache Kafka is an Apache open source project based upon TCP for 
distributed streaming. It prescribes some interesting general 
purpose features that seem to extend far beyond the simpler 
streaming model SECEVENTs is after. A comment from MS has been that 
Kafka does an acknowledge with poll combination event which seems 
to be a performance advantage. See: https://kafka.apache.org/intro</t>

<t>Google Pub/Sub</t>

<t>Google Pub Sub system favours a model whereby polling and acknowledgement
of events is done as separate endpoints as separate functions.</t>

<t>Information:</t>

<t><list style="symbols">
  <t>Cloud Overview - https://cloud.google.com/pubsub/</t>
  <t>Subscriber Overview - https://cloud.google.com/pubsub/docs/subscriber</t>
  <t>Subscriber Pull(poll) - https://cloud.google.com/pubsub/docs/pull</t>
</list></t>

</section>
<section anchor="acknowledgments" title="Acknowledgments">
<t>The editors would like to thanks the members of the SCIM WG which 
began discussions of provisioning events starting with: draft-hunt-scim-notify-00 in 2015.</t>

<t>The editors would like to thank the authors of draft-ietf-secevent-delivery-02,
on which this draft is based.</t>

<t>The editor would like to thank the participants in the the SECEVENTS
working group for their support of this specification.</t>

</section>
<section anchor="change-log" title="Change Log">
<t>Draft 00 - AB - Based on draft-ietf-secevent-delivery-02 with the 
following changes:</t>

<t><list style="symbols">
  <t>Renamed to “Push-Based SET Token Delivery Using HTTP”</t>
  <t>Removed references to the HTTP Polling delivery method.</t>
  <t>Removed informative reference to RFC6202.</t>
</list></t>

<t>Draft 01 - AB</t>

<t><list style="symbols">
  <t>Converted to Markdown</t>
  <t>Removed NumericDate definition (unused).</t>
  <t>Removed Event and Subject definitions (defined in SET).</t>
  <t>Removed text related to Event Streams.</t>
  <t>Removed Mike Jones and Phil Hunt as editors, per respective requests.</t>
  <t>Fixed area and workgroup to match secevent.</t>
  <t>Renamed Event Transmitter and Event Receiver to SET Transmitter and SET Receiver, respectively.</t>
  <t>Added IANA registry for SET Delivery Error Codes.</t>
  <t>Removed enumeration of HTTP authentication methods.</t>
  <t>Removed generally applicable guidance for HTTP, authorization tokens, andbearer tokens.</t>
  <t>Elaborated on guidance for DoS protection via authn, and moved it to Security Considerations.</t>
  <t>Removed redundant instruction to use <spanx style="verb">WWW-Authenticate</spanx> header.</t>
  <t>Removed further generally applicable guidance for authorization tokens.</t>
  <t>Removed bearer token from example delivery request, and removed text explaining it was an example only.</t>
  <t>Broke delivery method description into separate request/response sections.</t>
  <t>Added missing blank line ahead of body in example request.</t>
  <t>Removed unapplicable explanatory text regarding shortening and encoding of URLs in examples.</t>
  <t>Changed MAY to may in explanation of non-normative line breaks and whitespace in examples.</t>
  <t>Removed unnecessary text about SET creation and aspects of SET handling not related to the delivery method.</t>
  <t>Removed duplicate technical description of delivery method requests and responses.</t>
  <t>Added “non-normative example” text before example SET transmission request.</t>
  <t>Updated error code column headers to match descriptive text.</t>
  <t>Updated date. Updated documentation version to 01.</t>
</list></t>

</section>


  </back>

<!-- ##markdown-source:
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
U3tMR2wQspK5td0T/wOOC2cTUlMAAA==

-->

</rfc>

