<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.2 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-secevent-http-push-00" category="std">

  <front>
    <title abbrev="draft-ietf-secevent-http-push">Push-Based SET Token Delivery Using HTTP</title>

    <author initials="A." surname="Backman" fullname="Annabelle Backman" role="editor">
      <organization>Amazon</organization>
      <address>
        <email>richanna@amazon.com</email>
      </address>
    </author>
    <author initials="M." surname="Jones" fullname="Michael B. Jones">
      <organization>Microsoft</organization>
      <address>
        <email>mbj@microsoft.com</email>
        <uri>http://self-issued.info/</uri>
      </address>
    </author>
    <author initials="P." surname="Hunt" fullname="Phil Hunt">
      <organization>Oracle</organization>
      <address>
        <email>phil.hunt@yahoo.com</email>
      </address>
    </author>
    <author initials="M." surname="Scurtescu" fullname="Marius Scurtescu">
      <organization>Google</organization>
      <address>
        <email>mscurtescu@google.com</email>
      </address>
    </author>
    <author initials="M." surname="Ansari" fullname="Morteza Ansari">
      <organization>Cisco</organization>
      <address>
        <email>morteza.ansari@cisco.com</email>
      </address>
    </author>
    <author initials="A." surname="Nadalin" fullname="Anthony Nadalin">
      <organization>Microsoft</organization>
      <address>
        <email>tonynad@microsoft.com</email>
      </address>
    </author>

    <date year="2018" month="August" day="27"/>

    <area>Security</area>
    <workgroup>Security Events Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This specification defines how a series of security event tokens 
(SETs) may be delivered to a previously registered receiver 
using HTTP POST over TLS initiated as a push to the receiver.</t>



    </abstract>


  </front>

  <middle>


<section anchor="intro" title="Introduction and Overview">
<t>This specification defines how SETs (see
<xref target="SET"/>) can be transmitted to a previously 
registered SET Receiver using HTTP <xref target="RFC7231"/> over TLS. The
specification defines a method to push SETs via HTTP POST.</t>

<section anchor="conv" title="Notational Conventions">
<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL
NOT”, “SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”,
“MAY”, and “OPTIONAL” in this document are to be interpreted as
described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when,
they appear in all capitals, as shown here.</t>

<t>Throughout this documents all figures may contain spaces and extra
line-wrapping for readability and space limitations.</t>

</section>
<section anchor="defn" title="Definitions">
<t>This specification assumes terminology defined in the Security
Event Token specification <xref target="SET"/>, as well as the terms defined below:</t>

<t><list style="hanging">
  <t hangText='SET Transmitter'><vspace blankLines='0'/>
  A service provider that delivers SETs to other providers known
as SET Receivers.</t>
  <t hangText='SET Receiver'><vspace blankLines='0'/>
  A service provider that registers to receive SETs from a SET
Transmitter and provides an endpoint to receive SETs via HTTP POST.</t>
</list></t>

</section>
</section>
<section anchor="event_delivery" title="Event Delivery">

<section anchor="event_delivery_process" title="Event Delivery Process">
<t>When an Event occurs, the SET Transmitter constructs a SET
token <xref target="SET"/> that describes the Event.</t>

<t>How SETs are defined and the process by which Events are identified for 
SET Receivers is out-of-scope of this    specification.</t>

<t>When a SET is available for a SET Receiver, the SET Transmitter
attempts to deliver the SET based on the SET Receiver’s registered
delivery mechanism:</t>

<t><list style="symbols">
  <t>The SET Transmitter uses an HTTP/1.1 POST to the SET Receiver
endpoint to deliver the SET;</t>
  <t>Or, the SET Transmitter delivers the Event through a different
method not defined by this specification.</t>
</list></t>

<t>In Push-Based SET Delivery Using HTTP, SETs are delivered one at a
time using HTTP POST requests by a SET Transmitter to a SET
Receiver. The HTTP request body is a JSON Web Token <xref target="RFC7519"/>
with a <spanx style="verb">Content-Type</spanx> header of <spanx style="verb">application/secevent+jwt</spanx> as
defined in Section 2.2 and 6.2 of <xref target="SET"/>. Upon receipt, the 
SET Receiver acknowledges receipt with a response with HTTP 
Status 202, as described below in <xref target="tx_request"/>.</t>

<t>After successful (acknowledged) SET delivery, SET 
Transmitters SHOULD NOT be required to maintain or record SETs for 
recovery. Once a SET is acknowledged, the SET Receiver SHALL be 
responsible for retention and recovery.</t>

<t>Transmitted SETs SHOULD be self-validating (e.g. signed)
if there is a requirement to verify they were issued by the SET 
Transmitter at a later date when de-coupled from the original 
delivery where authenticity could be checked via the HTTP or 
TLS mutual authentication.</t>

<t>Upon receiving a SET, the SET Receiver reads the SET and validates 
it. The SET Receiver MUST acknowledge receipt to the SET Transmitter, using the 
defined acknowledgement or error method.</t>

<t>The SET Receiver SHALL NOT use the Event acknowledgement mechanism
to report Event errors other than relating to the parsing and validation
of the SET.</t>

</section>
<section anchor="tx_request" title="Transmitting a SET">
<t>This method allows a SET Transmitter to use HTTP POST 
(Section 4.3.3 <xref target="RFC7231"/>) to deliver
SETs to a previously registered web callback URI supplied by the
SET Receiver as part of a configuration process 
(not defined by this document).</t>

<t>The SET to be delivered MAY be signed 
and/or encrypted as defined in <xref target="SET"/>.</t>

<t>The HTTP Content-Type (see 
Section 3.1.1.5 <xref target="RFC7231"/>) for the HTTP POST is 
<spanx style="verb">application/secevent+jwt</spanx> and SHALL consist of 
a single SET (see <xref target="SET"/>).
As per Section 5.3.2 <xref target="RFC7231"/>, the expected 
media type (<spanx style="verb">Accept</spanx> header) response is 
<spanx style="verb">application/json</spanx>.</t>

<t>To deliver an Event, the SET Transmitter generates an event 
delivery message and uses HTTP POST to the configured endpoint with
the appropriate <spanx style="verb">Accept</spanx> and 
<spanx style="verb">Content-Type</spanx> headers.</t>

<figure title="Example SET Transmission Request" anchor="postSet"><artwork><![CDATA[
POST /Events  HTTP/1.1

Host: notify.examplerp.com
Accept: application/json
Content-Type: application/secevent+jwt

eyJhbGciOiJub25lIn0
.
eyJwdWJsaXNoZXJVcmkiOiJodHRwczovL3NjaW0uZXhhbXBsZS5jb20iLCJmZWV
kVXJpcyI6WyJodHRwczovL2podWIuZXhhbXBsZS5jb20vRmVlZHMvOThkNTI0Nj
FmYTViYmM4Nzk1OTNiNzc1NCIsImh0dHBzOi8vamh1Yi5leGFtcGxlLmNvbS9GZ
WVkcy81ZDc2MDQ1MTZiMWQwODY0MWQ3Njc2ZWU3Il0sInJlc291cmNlVXJpcyI6
WyJodHRwczovL3NjaW0uZXhhbXBsZS5jb20vVXNlcnMvNDRmNjE0MmRmOTZiZDZ
hYjYxZTc1MjFkOSJdLCJldmVudFR5cGVzIjpbIkNSRUFURSJdLCJhdHRyaWJ1dG
VzIjpbImlkIiwibmFtZSIsInVzZXJOYW1lIiwicGFzc3dvcmQiLCJlbWFpbHMiX
SwidmFsdWVzIjp7ImVtYWlscyI6W3sidHlwZSI6IndvcmsiLCJ2YWx1ZSI6Impk
b2VAZXhhbXBsZS5jb20ifV0sInBhc3N3b3JkIjoibm90NHUybm8iLCJ1c2VyTmF
tZSI6Impkb2UiLCJpZCI6IjQ0ZjYxNDJkZjk2YmQ2YWI2MWU3NTIxZDkiLCJuYW
1lIjp7ImdpdmVuTmFtZSI6IkpvaG4iLCJmYW1pbHlOYW1lIjoiRG9lIn19fQ
.
]]></artwork></figure>

</section>
<section anchor="tx_handling" title="Handling a SET Transmission Request">
<t>Upon receipt of the request, the SET Receiver SHALL 
validate the JWT structure of the SET as defined in 
Section 7.2 <xref target="RFC7519"/>. The SET Receiver 
SHALL also validate the SET information as described
in Section 2 <xref target="SET"/>.</t>

<section anchor="tx_success" title="Success Response">
<t>If the SET is determined to be valid, the SET Receiver SHALL
“acknowledge” successful submission by responding with HTTP Status
202 as <spanx style="verb">Accepted</spanx> 
(see Section 6.3.3 <xref target="RFC7231"/>).</t>

<t>In order
to maintain compatibility with other methods of transmission, the 
SET Receiver SHOULD NOT include an HTTP response body representation
of the submitted SET or what the SET’s pending status is when 
acknowledging success. In the case of an error (e.g. HTTP Status 400),
the purpose of the HTTP response body is to indicate any SET parsing, 
validation, or cryptographic errors.</t>

<t>The following is a non-normative example of a successful
receipt of a SET.</t>

<figure title="Example Successful Delivery Response" anchor="goodPostResponse"><artwork><![CDATA[
HTTP/1.1 202 Accepted
]]></artwork></figure>

<t>Note that the purpose of the “acknowledgement” response is to let the 
SET Transmitter know that a SET has been delivered and the 
information no longer needs to be retained by the SET Transmitter. 
Before acknowledgement, SET Receivers SHOULD ensure they have 
validated received SETs and retained them in a manner appropriate 
to information retention requirements appropriate to the SET 
event types signaled. The level and method of retention of SETs
by SET Receivers is out-of-scope of this specification.</t>

</section>
<section anchor="tx_failure" title="Failure Response">
<t>In the Event of a general HTTP error condition, the SET Receiver
MAY respond with an appropriate HTTP Status code as defined in 
Section 6 <xref target="RFC7231"/>.</t>

<t>When the SET Receiver detects an error parsing or 
validating a received SET (as defined by <xref target="SET"/>), 
the SET Receiver SHALL indicate an HTTP Status 400 error with an 
error response as described in <xref target="errorResponse"/>.</t>

<t>The following is an example non-normative error 
response.</t>

<figure title="Example Error Response" anchor="badPostResponse"><artwork><![CDATA[
HTTP/1.1 400 Bad Request
Content-Type: application/json

{
  "err":"dup",
  "description":"SET already received. Ignored."

}
]]></artwork></figure>

</section>
<section anchor="error_codes" title="Security Event Token Delivery Error Codes">
<t>Security Event Token Delivery Error Codes are strings that identify a specific type of error that may occur when parsing or validating a SET. Every Security Event Token Delivery Error Code MUST have a unique name registered in the IANA “Security Event Token Delivery Error Codes” registry established by <xref target="iana_set_errors"/>.</t>

<t>The following table presents the initial set of Error Codes that are registered in the IANA “Security Event Token Delivery Error Codes” registry:</t>

<texttable title="SET Delivery Error Codes" anchor="tabErrors">
      <ttcol align='left'>Err Value</ttcol>
      <ttcol align='left'>Description</ttcol>
      <c>json</c>
      <c>Invalid JSON object.</c>
      <c>jwtParse</c>
      <c>Invalid or unparsable JWT or JSON structure.</c>
      <c>jwtHdr</c>
      <c>In invalid JWT header was detected.</c>
      <c>jwtCrypto</c>
      <c>Unable to parse due to unsupported algorithm.</c>
      <c>jws</c>
      <c>Signature was not validated.</c>
      <c>jwe</c>
      <c>Unable to decrypt JWE encoded data.</c>
      <c>jwtAud</c>
      <c>Invalid audience value.</c>
      <c>jwtIss</c>
      <c>Issuer not recognized.</c>
      <c>setType</c>
      <c>An unexpected Event type was received.</c>
      <c>setParse</c>
      <c>Invalid structure was encountered such as an inability to parse or an incomplete set of Event claims.</c>
      <c>setData</c>
      <c>SET event claims incomplete or invalid.</c>
      <c>dup</c>
      <c>A duplicate SET was received and has been ignored.</c>
</texttable>

</section>
<section anchor="errorResponse" title="Error Response Handling">
<t>An error response SHALL include a JSON
object which provides details about the error. The JSON object
includes the JSON attributes:</t>

<t><list style="hanging">
  <t hangText='err'><vspace blankLines='0'/>
  A Security Event Token Delivery Error Code (see <xref target="error_codes"/>).
description</t>
  <t>A human-readable text that provides
additional diagnostic information.</t>
</list></t>

<t>When included as part of an HTTP Status 400 response, the above
JSON is the HTTP response body (see <xref target="badPostResponse"/>).</t>

</section>
</section>
</section>
<section anchor="aa" title="Authentication and Authorization">

<t>The SET delivery method described in this specification is
based upon HTTP and depends on the use of TLS and/or standard 
HTTP authentication and authorization schemes as per 
<xref target="RFC7235"/>.</t>

<t>Because SET Delivery describes a simple function, authorization
for the ability to pick-up or deliver SETs can be derived by
considering the identity of the SET issuer, or via other employed
authentication methods.  Because SETs are
not commands (see ), SET Receivers are free to ignore SETs that 
are not of interest.</t>

</section>
<section anchor="Security" title="Security Considerations">

<section anchor="payloadAuthentication" title="Authentication Using Signed SETs">
<t>In scenarios where HTTP authorization or TLS mutual authentication
are not used or are considered weak, JWS signed SETs SHOULD be 
used (see <xref target="RFC7515"/> and 
Security Considerations <xref target="SET"/>). This enables the SET Receiver
to validate that the SET issuer is authorized to deliver SETs.</t>

</section>
<section anchor="tls-support-considerations" title="TLS Support Considerations">
<t>SETs contain sensitive information that is considered PII
(e.g. subject claims). Therefore, SET Transmitters and
SET Receivers MUST require the use of a transport-layer 
security mechanism. Event delivery endpoints MUST support TLS 
1.2 <xref target="RFC5246"/> and MAY support additional 
transport-layer mechanisms meeting its security requirements. 
When using TLS, the client MUST perform a TLS/SSL server
certificate check, per <xref target="RFC6125"/>. Implementation
security considerations for TLS can be found in “Recommendations for
Secure Use of TLS and DTLS” <xref target="RFC7525"/>.</t>

</section>
<section anchor="denial-of-service" title="Denial of Service">
<t>The SET Receiver may be vulnerable to a denial-of-service attack where a malicious party makes a high volume of requests containing invalid SETs, causing the endpoint to expend significant resources on cryptographic operations that are bound to fail. This may be mitigated by authenticating SET Transmitters with a mechanism with low runtime overhead, such as mutual TLS or statically assigned bearer tokens.</t>

</section>
</section>
<section anchor="privacy-considerations" title="Privacy Considerations">

<t>If a SET needs to be retained for audit purposes, JWS MAY 
be used to provide verification of its authenticity.</t>

<t>When sharing personally identifiable information or information
that is otherwise considered confidential to affected users, SET 
Transmitters and Receivers MUST have the appropriate legal agreements
and user consent or terms of service in place.</t>

<t>The propagation of subject identifiers can be perceived as personally
identifiable information. Where possible, SET Transmitters and Receivers
SHOULD devise approaches that prevent propagation — for example, the
passing of a hash value that requires the subscriber to already know
the subject.</t>

</section>
<section anchor="IANA" title="IANA Considerations">

<section anchor="iana_set_errors" title="Security Event Token Delivery Error Codes">
<t>This document defines Security Event Token Delivery Error Codes, for which IANA is asked to create and maintain a new registry titled “Security Event Token Delivery Error Codes”.  Initial values for the Security Event Token Delivery Error Codes registry are given in <xref target="tabErrors"/>.  Future assignments are to be made through the Expert Review registration policy (<xref target="BCP26"/>) and shall follow the template presented in <xref target="iana_set_errors_template"/>.</t>

<section anchor="iana_set_errors_template" title="Registration Template">

<t><list style="hanging">
  <t hangText='Error Code'><vspace blankLines='0'/>
  The name of the Security Event Token Delivery Error Code, as described in <xref target="error_codes"/>. The name MUST be a case-sensitive ASCII string consisting only of upper-case letters (“A” - “Z”), lower-case letters (“a” - “z”), and digits (“0” - “9”).</t>
  <t hangText='Descrption'><vspace blankLines='0'/>
  A brief human-readable description of the Security Event Token Delivery Error Code.</t>
  <t hangText='Change Controller'><vspace blankLines='0'/>
  For error codes registered by the IETF or its working groups, list “IETF Secevent Working Group”.  For all other error codes, list the name of the party responsible for the registration.  Contact information such as mailing address, email address, or phone number may also be provided.</t>
  <t hangText='Defining Document(s)'><vspace blankLines='0'/>
  A reference to the document or documents that define the Security Event Token Delivery Error Code. The definition MUST specify the name and description of the error code, and explain under what circumstances the error code may be used. URIs that can be used to retrieve copies of each document at no cost SHOULD be included.</t>
</list></t>

</section>
<section anchor="initial-registry-contents" title="Initial Registry Contents">

<section anchor="json" title="json">
<t><list style="symbols">
  <t>Name: json</t>
  <t>Description: Invalid JSON object.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jwtparse" title="jwtParse">
<t><list style="symbols">
  <t>Name: jwtParse</t>
  <t>Description: Invalid or unparsable JWT or JSON structure.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jwthdr" title="jwtHdr">
<t><list style="symbols">
  <t>Name: jwtHdr</t>
  <t>Description: In invalid JWT header was detected.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jwtcrypto" title="jwtCrypto">
<t><list style="symbols">
  <t>Name: jwtCrypto</t>
  <t>Description: Unable to parse due to unsupported algorithm.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jws" title="jws">
<t><list style="symbols">
  <t>Name: jws</t>
  <t>Description: Signature was not validated.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jwe" title="jwe">
<t><list style="symbols">
  <t>Name: jwe</t>
  <t>Description: Unable to decrypt JWE encoded data.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jwtaud" title="jwtAud">
<t><list style="symbols">
  <t>Name: jwtAud</t>
  <t>Description: Invalid audience value.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jwtiss" title="jwtIss">
<t><list style="symbols">
  <t>Name: jwtIss</t>
  <t>Description: Issuer not recognized.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="settype" title="setType">
<t><list style="symbols">
  <t>Name: setType</t>
  <t>Description: An unexpected Event type was received.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="setparse" title="setParse">
<t><list style="symbols">
  <t>Name: setParse</t>
  <t>Description: Invalid structure was encountered such as an inability to parse or an incomplete set of Event claims.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="setdata" title="setData">
<t><list style="symbols">
  <t>Name: setData</t>
  <t>Description: SET event claims incomplete or invalid.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="dup" title="dup">
<t><list style="symbols">
  <t>Name: dup</t>
  <t>Description: A duplicate SET was received and has been ignored.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
</section>
</section>
</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor="SET" target='https://www.rfc-editor.org/info/rfc8417'>
<front>
<title>Security Event Token (SET)</title>
<author initials='P.' surname='Hunt' fullname='P. Hunt' role='editor'><organization /></author>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='W.' surname='Denniss' fullname='W. Denniss'><organization /></author>
<author initials='M.' surname='Ansari' fullname='M. Ansari'><organization /></author>
<date year='2018' month='July' />
<abstract><t>This specification defines the Security Event Token (SET) data structure.  A SET describes statements of fact from the perspective of an issuer about a subject.  These statements of fact represent an event that occurred directly to or about a security subject, for example, a statement about the issuance or revocation of a token on behalf of a subject.  This specification is intended to enable representing security- and identity-related events.  A SET is a JSON Web Token (JWT), which can be optionally signed and/or encrypted. SETs can be distributed via protocols such as HTTP.</t></abstract>
</front>
<seriesInfo name='RFC' value='8417'/>
<seriesInfo name='DOI' value='10.17487/RFC8417'/>
</reference>



<reference  anchor="BCP26" target='https://www.rfc-editor.org/info/rfc8126'>
<front>
<title>Guidelines for Writing an IANA Considerations Section in RFCs</title>
<author initials='M.' surname='Cotton' fullname='M. Cotton'><organization /></author>
<author initials='B.' surname='Leiba' fullname='B. Leiba'><organization /></author>
<author initials='T.' surname='Narten' fullname='T. Narten'><organization /></author>
<date year='2017' month='June' />
<abstract><t>Many protocols make use of points of extensibility that use constants to identify various protocol parameters.  To ensure that the values in these fields do not have conflicting uses and to promote interoperability, their allocations are often coordinated by a central record keeper.  For IETF protocols, that role is filled by the Internet Assigned Numbers Authority (IANA).</t><t>To make assignments in a given registry prudently, guidance describing the conditions under which new values should be assigned, as well as when and how modifications to existing values can be made, is needed.  This document defines a framework for the documentation of these guidelines by specification authors, in order to assure that the provided guidance for the IANA Considerations is clear and addresses the various issues that are likely in the operation of a registry.</t><t>This is the third edition of this document; it obsoletes RFC 5226.</t></abstract>
</front>
<seriesInfo name='BCP' value='26'/>
<seriesInfo name='RFC' value='8126'/>
<seriesInfo name='DOI' value='10.17487/RFC8126'/>
</reference>



<reference  anchor="RFC7231" target='https://www.rfc-editor.org/info/rfc7231'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines the semantics of HTTP/1.1 messages, as expressed by request methods, request header fields, response status codes, and response header fields, along with the payload of messages (metadata and body content) and mechanisms for content negotiation.</t></abstract>
</front>
<seriesInfo name='RFC' value='7231'/>
<seriesInfo name='DOI' value='10.17487/RFC7231'/>
</reference>



<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC8174" target='https://www.rfc-editor.org/info/rfc8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author initials='B.' surname='Leiba' fullname='B. Leiba'><organization /></author>
<date year='2017' month='May' />
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>



<reference  anchor="RFC7519" target='https://www.rfc-editor.org/info/rfc7519'>
<front>
<title>JSON Web Token (JWT)</title>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='J.' surname='Bradley' fullname='J. Bradley'><organization /></author>
<author initials='N.' surname='Sakimura' fullname='N. Sakimura'><organization /></author>
<date year='2015' month='May' />
<abstract><t>JSON Web Token (JWT) is a compact, URL-safe means of representing claims to be transferred between two parties.  The claims in a JWT are encoded as a JSON object that is used as the payload of a JSON Web Signature (JWS) structure or as the plaintext of a JSON Web Encryption (JWE) structure, enabling the claims to be digitally signed or integrity protected with a Message Authentication Code (MAC) and/or encrypted.</t></abstract>
</front>
<seriesInfo name='RFC' value='7519'/>
<seriesInfo name='DOI' value='10.17487/RFC7519'/>
</reference>



<reference  anchor="RFC7235" target='https://www.rfc-editor.org/info/rfc7235'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Authentication</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application- level protocol for distributed, collaborative, hypermedia information systems.  This document defines the HTTP Authentication framework.</t></abstract>
</front>
<seriesInfo name='RFC' value='7235'/>
<seriesInfo name='DOI' value='10.17487/RFC7235'/>
</reference>



<reference  anchor="RFC7515" target='https://www.rfc-editor.org/info/rfc7515'>
<front>
<title>JSON Web Signature (JWS)</title>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='J.' surname='Bradley' fullname='J. Bradley'><organization /></author>
<author initials='N.' surname='Sakimura' fullname='N. Sakimura'><organization /></author>
<date year='2015' month='May' />
<abstract><t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures.  Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification.  Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t></abstract>
</front>
<seriesInfo name='RFC' value='7515'/>
<seriesInfo name='DOI' value='10.17487/RFC7515'/>
</reference>



<reference  anchor="RFC5246" target='https://www.rfc-editor.org/info/rfc5246'>
<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.2</title>
<author initials='T.' surname='Dierks' fullname='T. Dierks'><organization /></author>
<author initials='E.' surname='Rescorla' fullname='E. Rescorla'><organization /></author>
<date year='2008' month='August' />
<abstract><t>This document specifies Version 1.2 of the Transport Layer Security (TLS) protocol.  The TLS protocol provides communications security over the Internet.  The protocol allows client/server applications to communicate in a way that is designed to prevent eavesdropping, tampering, or message forgery.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5246'/>
<seriesInfo name='DOI' value='10.17487/RFC5246'/>
</reference>



<reference  anchor="RFC6125" target='https://www.rfc-editor.org/info/rfc6125'>
<front>
<title>Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)</title>
<author initials='P.' surname='Saint-Andre' fullname='P. Saint-Andre'><organization /></author>
<author initials='J.' surname='Hodges' fullname='J. Hodges'><organization /></author>
<date year='2011' month='March' />
<abstract><t>Many application technologies enable secure communication between two entities by means of Internet Public Key Infrastructure Using X.509 (PKIX) certificates in the context of Transport Layer Security (TLS). This document specifies procedures for representing and verifying the identity of application services in such interactions.   [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6125'/>
<seriesInfo name='DOI' value='10.17487/RFC6125'/>
</reference>




    </references>

    <references title='Informative References'>





<reference  anchor="RFC7525" target='https://www.rfc-editor.org/info/rfc7525'>
<front>
<title>Recommendations for Secure Use of Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS)</title>
<author initials='Y.' surname='Sheffer' fullname='Y. Sheffer'><organization /></author>
<author initials='R.' surname='Holz' fullname='R. Holz'><organization /></author>
<author initials='P.' surname='Saint-Andre' fullname='P. Saint-Andre'><organization /></author>
<date year='2015' month='May' />
<abstract><t>Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS) are widely used to protect data exchanged over application protocols such as HTTP, SMTP, IMAP, POP, SIP, and XMPP.  Over the last few years, several serious attacks on TLS have emerged, including attacks on its most commonly used cipher suites and their modes of operation.  This document provides recommendations for improving the security of deployed services that use TLS and DTLS. The recommendations are applicable to the majority of use cases.</t></abstract>
</front>
<seriesInfo name='BCP' value='195'/>
<seriesInfo name='RFC' value='7525'/>
<seriesInfo name='DOI' value='10.17487/RFC7525'/>
</reference>




    </references>


<section anchor="other-streaming-specifications" title="Other Streaming Specifications">
<t>[[EDITORS NOTE: This section to be removed prior to publication]]</t>

<t>The following pub/sub, queuing, streaming systems were reviewed 
as possible solutions or as input to the current draft:</t>

<t>XMPP Events</t>

<t>The WG considered the XMPP events ands its ability to provide a single
messaging solution without the need for both polling and push modes.
The feeling was the size and methodology of XMPP was to far apart from
the current capabilities of the SECEVENTs community which focuses in
on HTTP based service delivery and authorization.</t>

<t>Amazon Simple Notification Service</t>

<t>Simple Notification Service, is a pub/sub messaging product from 
AWS. SNS supports a variety of subscriber types: HTTP/HTTPS endpoints, 
AWS Lambda functions, email addresses (as JSON or plain text), phone 
numbers (via SMS), and AWS SQS standard queues. It doesn’t directly 
support pull, but subscribers can get the pull model by creating an 
SQS queue and subscribing it to the topic. Note that this puts the 
cost of pull support back onto the subscriber, just as it is in the 
push model. It is not clear that one way is strictly better than the 
other; larger, sophisticated developers may be happy to own message 
persistence so they can have their own internal delivery guarantees. 
The long tail of OIDC clients may not care about that, or may fail 
to get it right. Regardless, I think we can learn something from the 
Delivery Policies supported by SNS, as well as the delivery controls 
that SQS offers (e.g. Visibility Timeout, Dead-Letter Queues). I’m 
not suggesting that we need all of these things in the spec, but 
they give an idea of what features people have found useful.</t>

<t>Other information:</t>

<t><list style="symbols">
  <t>API Reference: http://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/Welcome.html</t>
  <t>Visibility Timeouts: http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-visibility-timeout.html</t>
</list></t>

<t>Apache Kafka</t>

<t>Apache Kafka is an Apache open source project based upon TCP for 
distributed streaming. It prescribes some interesting general 
purpose features that seem to extend far beyond the simpler 
streaming model SECEVENTs is after. A comment from MS has been that 
Kafka does an acknowledge with poll combination event which seems 
to be a performance advantage. See: https://kafka.apache.org/intro</t>

<t>Google Pub/Sub</t>

<t>Google Pub Sub system favours a model whereby polling and acknowledgement
of events is done as separate endpoints as separate functions.</t>

<t>Information:</t>

<t><list style="symbols">
  <t>Cloud Overview - https://cloud.google.com/pubsub/</t>
  <t>Subscriber Overview - https://cloud.google.com/pubsub/docs/subscriber</t>
  <t>Subscriber Pull(poll) - https://cloud.google.com/pubsub/docs/pull</t>
</list></t>

</section>
<section anchor="acknowledgments" title="Acknowledgments">
<t>The editors would like to thanks the members of the SCIM WG which 
began discussions of provisioning events starting with: draft-hunt-scim-notify-00 in 2015.</t>

<t>The editors would like to thank the authors of draft-ietf-secevent-delivery-02,
on which this draft is based.</t>

<t>The editor would like to thank the participants in the the SECEVENTS
working group for their support of this specification.</t>

</section>
<section anchor="change-log" title="Change Log">
<t>Draft 00 - AB - Based on draft-ietf-secevent-delivery-02 with the 
following changes:</t>

<t><list style="symbols">
  <t>Renamed to “Push-Based SET Token Delivery Using HTTP”</t>
  <t>Removed references to the HTTP Polling delivery method.</t>
  <t>Removed informative reference to RFC6202.</t>
</list></t>

<t>Draft 01 - AB</t>

<t><list style="symbols">
  <t>Converted to Markdown</t>
  <t>Removed NumericDate definition (unused).</t>
  <t>Removed Event and Subject definitions (defined in SET).</t>
  <t>Removed text related to Event Streams.</t>
  <t>Removed Mike Jones and Phil Hunt as editors, per respective requests.</t>
  <t>Fixed area and workgroup to match secevent.</t>
  <t>Renamed Event Transmitter and Event Receiver to SET Transmitter and SET Receiver, respectively.</t>
  <t>Added IANA registry for SET Delivery Error Codes.</t>
  <t>Removed enumeration of HTTP authentication methods.</t>
  <t>Removed generally applicable guidance for HTTP, authorization tokens, andbearer tokens.</t>
  <t>Elaborated on guidance for DoS protection via authn, and moved it to Security Considerations.</t>
  <t>Removed redundant instruction to use <spanx style="verb">WWW-Authenticate</spanx> header.</t>
  <t>Removed further generally applicable guidance for authorization tokens.</t>
  <t>Removed bearer token from example delivery request, and removed text explaining it was an example only.</t>
  <t>Broke delivery method description into separate request/response sections.</t>
  <t>Added missing blank line ahead of body in example request.</t>
  <t>Removed unapplicable explanatory text regarding shortening and encoding of URLs in examples.</t>
  <t>Changed MAY to may in explanation of non-normative line breaks and whitespace in examples.</t>
</list></t>

</section>


  </back>

<!-- ##markdown-source:
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
JQyejJH/0R7iRugYsUzoNToRV8tUkcDBf8mgALp2InBOU4Q0VCjYsyiTSYKG
WQMSt7QK9DxxhxHqfuiW4qnKaKqjGfRHhVI5dkcCo5mc1VUNI/meTkAbtlvg
ton4G4iNxobxj5GsllbAjCKpuh6vfA8yBYMj9Dwb4FVAlW0r4sT4Xhc03YnY
sBldlvBfRiCyrDZyBbIgoGWAY6tDebQVpI/n4KHZljSDsQYEqC8kT8pMYZc+
VyWtNSADEFOQnqHlhKzmqQpaOJC3DZqXrTALrmAYFrdmM7bhzhooBL/KYsuj
7sPuw5aj8CBQAMKZRnc5W7cAgRHMOwJayTcXfUACBDfPySt4ZJAOFYKYQiuA
rFg2+pzqFvc3qQhn/D4Ijo+t9Ab8wb4noSTxkwIIvYNnn0flcm5dvQBbPYjy
gESaELDJIwNEtGR62AXd2X28QigEDi81RFhYq/gWvsPpM7ehDQRERFII8IPh
xFPeFs3rPcGuOACaIY/ahTyG8+q1lsGSpz+BFsVtgqaNUZhpDx8OAJfnldM+
DxrUX1voR1PkH5AajfZ3xtxmxT/RuS5JmNFSJTEIDRNjFAgwbphMkIZEViDc
8cOSveWBqgi9JHSSymJeoo8u/R5wLLFRq6JN/s9//lPQ+DvW6PMmjwCj0VT7
aHsA5nb1J5UBZpZzCnDw4PtylRQinKf9OjxSIfTy5XT0PErOkpf1qPc47ee7
ootPb+Prl0a9HRQ3b19eRdkMWxTxi4vb6HOxePVw8FFd79Y3b6fT0dtn5mb4
+OOot5u8OnyZ3VxfidnV25fzaNl/cr0MOvXmRXzdX+20uMiu0psXp4uzy+ls
cNnfHXwUJ9m7y6vkXXb6aPB5tnd2OUgGn6O9wWHf9LPpbvzi2eez5OeFyqZ7
75LHqX5+UkXPP6WvssFiNHz6/EZcX82i5c97N0dR7/To9d7p5U1yev369uzo
3S78HxYf9W6u3zzsp7umn79Mo97TvSgbpG7VorXszXtdXL0dpFF+uhgcXWSD
j8e7p9lFdgYT3RzdiOm7j+8+3VxGe6cfT2Znw5cxECaNs6s6Prl4HD2/+tz/
OB/1Z4PhxZuTNxf8fgoTLtX1y734ubANsnTWT26TUXZS3Qxh7/nVZziNs3fX
eyk+j56ffI4exosoe42UT0fXJ/PRi9PkrRjeJnF2YuJrGuinfnZVvbtODZ3I
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
fydlt+8K9joPttsMTaA0QmWJqa1OY8MdDA/7fRuvdAUtJIxY8g4LArtHlx3K
h6WaQeD+1sGW7Mitmy3wJYCY6+8Vvf+M78m7SyYI4vdh6/j86dYDshBg4Y1r
PSoTPV51sAP/+/cSB2Y4BBU50VQRVMKpU5n3iS8liwLeJNy3GaD+8eUJ6QtY
8a29P0bXy0D6Uqz22aIWQ1tA0r5jhvKCUyCnWZ+tmcz2r1aOm22W1VpGzo03
fAYD40YUQn2g2LyOB7OC4sNxDCPBVHQjqPmJuYopltbmdTayphalvEe+4D32
9wZgnCOLUffNAzoesNaxBjjyuSUPYujv+msNtuobYe33nRZxauxvLVjTnEIH
y4ZiHCpY44mGxtv25gSIXYLxQAqS4pqipIQ1YhQhsrqk6eQMMTREulgAZ/dh
1aizT8CgAR5doK0wtxeeNKi74NpJhUnGqIAzbtxBF+ex0OHA9MJhok2ZGHp9
j6LK4o9yQLfA7I8gJr2/MdQMbdZ4fV9+g01p0PWT3l8FEJ/bc3vsumXauHaz
1ObBxuV+T9D7h2zjRVyGm+CfK1v4zdD7D1k5x/nDxfsnrfX/rjTAj9iJCfZg
Vlf/rTTEj1hsyPJr3P4daZAfwioHdRzyCf/cKKcryZgfstq+CTnC/myvdmNK
6F+/WJt/8qttfreW+32pqR+y/DaKBw82csf/a5Lsh+wfM3Lh9u3vNgR9X7Lu
X7/+mMbgtcd2vJDtfney8F+6BYwF4JUDcUaG8rACsz+joFeYMbor6uRd97/9
9W9/PT7qX55dDLGI8Hifg2vGVva4YFRW4K7nZVKUfDF65GpT/v731boEeLlj
6tG2/EetayrQM35xZgnuQmb4wk9J7ifdVDA+bCJNkdYccijoukSSz2t//QXs
4ZJ8f/z0xL4Qb0/Pz+0VR17G9fMwGIVdqIm2tyAxj0MRsUDGbODMXUEQXLhP
q7VLoTChS7FilI58jBG4KOgup+5SC10Xz/DIukwSrendrb28awBng4IxvhwM
R0srpEYY4MTyNcxo4n0mEe45gue0bGs+c+7i8PjqeED5hSyrcyokpQDHGFgF
bx0kuXCpQk4dusCYj+ivpf8w00lfzwDzgfJ4g6JqYoouIi2+8XKbyystJ8iG
onP+hgBf1hIH18OuHA6GLj+AfRYK3ATO5oXxKizA2+f7DPifYZOH2KZx5CuV
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
BEI8YxgAzQM2LH0MrTX4/wAKXnJb5FQAAA==

-->

</rfc>

