<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.2 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-secevent-http-push-01" category="std">

  <front>
    <title abbrev="draft-ietf-secevent-http-push">Push-Based SET Token Delivery Using HTTP</title>

    <author initials="A." surname="Backman" fullname="Annabelle Backman" role="editor">
      <organization>Amazon</organization>
      <address>
        <email>richanna@amazon.com</email>
      </address>
    </author>
    <author initials="M." surname="Jones" fullname="Michael B. Jones" role="editor">
      <organization>Microsoft</organization>
      <address>
        <email>mbj@microsoft.com</email>
        <uri>http://self-issued.info/</uri>
      </address>
    </author>
    <author initials="P." surname="Hunt" fullname="Phil Hunt" role="editor">
      <organization>Oracle</organization>
      <address>
        <email>phil.hunt@yahoo.com</email>
      </address>
    </author>
    <author initials="M." surname="Scurtescu" fullname="Marius Scurtescu">
      <organization>Google</organization>
      <address>
        <email>mscurtescu@google.com</email>
      </address>
    </author>
    <author initials="M." surname="Ansari" fullname="Morteza Ansari">
      <organization>Cisco</organization>
      <address>
        <email>morteza.ansari@cisco.com</email>
      </address>
    </author>
    <author initials="A." surname="Nadalin" fullname="Anthony Nadalin">
      <organization>Microsoft</organization>
      <address>
        <email>tonynad@microsoft.com</email>
      </address>
    </author>

    <date year="2018" month="August" day="28"/>

    <area>Security</area>
    <workgroup>Security Events Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This specification defines how a series of security event tokens 
(SETs) may be delivered to a previously registered receiver 
using HTTP POST over TLS initiated as a push to the receiver.</t>



    </abstract>


  </front>

  <middle>


<section anchor="intro" title="Introduction and Overview">
<t>This specification defines how SETs (see
<xref target="SET"/>) can be transmitted to a previously 
registered SET Receiver using HTTP <xref target="RFC7231"/> over TLS. The
specification defines a method to push SETs via HTTP POST.</t>

<section anchor="conv" title="Notational Conventions">
<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL
NOT”, “SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”,
“MAY”, and “OPTIONAL” in this document are to be interpreted as
described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when,
they appear in all capitals, as shown here.</t>

<t>Throughout this documents all figures may contain spaces and extra
line-wrapping for readability and space limitations.</t>

</section>
<section anchor="defn" title="Definitions">
<t>This specification assumes terminology defined in the Security
Event Token specification <xref target="SET"/>, as well as the terms defined below:</t>

<t><list style="hanging">
  <t hangText='SET Transmitter'><vspace blankLines='0'/>
  A service provider that delivers SETs to other providers known
as SET Receivers.</t>
  <t hangText='SET Receiver'><vspace blankLines='0'/>
  A service provider that registers to receive SETs from a SET
Transmitter and provides an endpoint to receive SETs via HTTP POST.</t>
</list></t>

</section>
</section>
<section anchor="event_delivery" title="Event Delivery">

<section anchor="event_delivery_process" title="Event Delivery Process">
<t>In Push-Based SET Delivery Using HTTP, SETs are delivered one at a
time using HTTP POST requests by a SET Transmitter to a SET
Receiver, as described below in <xref target="tx_request"/>. Upon receipt,
the SET Receiver acknowledges receipt or indicates an error
via the HTTP response, as described below in <xref target="tx_handling"/>.</t>

<t>After successful (acknowledged) SET delivery, SET 
Transmitters SHOULD NOT be required to maintain or record SETs for 
recovery. Once a SET is acknowledged, the SET Receiver SHALL be 
responsible for retention and recovery.</t>

<t>Transmitted SETs SHOULD be self-validating (e.g. signed)
if there is a requirement to verify they were issued by the SET 
Transmitter at a later date when de-coupled from the original 
delivery where authenticity could be checked via the HTTP or 
TLS mutual authentication.</t>

<t>Upon receiving a SET, the SET Receiver reads the SET and validates 
it. The SET Receiver MUST acknowledge receipt to the SET Transmitter, using the 
defined acknowledgement or error method.</t>

<t>The SET Receiver SHALL NOT use the Event acknowledgement mechanism
to report Event errors other than relating to the parsing and validation
of the SET.</t>

</section>
<section anchor="tx_request" title="Transmitting a SET">
<t>This method allows a SET Transmitter to use HTTP POST 
(Section 4.3.3 <xref target="RFC7231"/>) to deliver
SETs to a previously registered web callback URI supplied by the
SET Receiver as part of a configuration process 
(not defined by this document).</t>

<t>The SET to be delivered MAY be signed 
and/or encrypted as defined in <xref target="SET"/>.</t>

<t>The HTTP Content-Type (see 
Section 3.1.1.5 <xref target="RFC7231"/>) for the HTTP POST is 
<spanx style="verb">application/secevent+jwt</spanx> and the request body SHALL consist of 
a single SET (see <xref target="SET"/>).
As per Section 5.3.2 <xref target="RFC7231"/>, the value of the
<spanx style="verb">Accept</spanx> header is 
<spanx style="verb">application/json</spanx>.</t>

<t>The following is a non-normative example of a SET transmission HTTP POST request:</t>

<figure title="Example SET Transmission Request" anchor="postSet"><artwork><![CDATA[
POST /Events  HTTP/1.1

Host: notify.examplerp.com
Accept: application/json
Content-Type: application/secevent+jwt

eyJhbGciOiJub25lIn0
.
eyJwdWJsaXNoZXJVcmkiOiJodHRwczovL3NjaW0uZXhhbXBsZS5jb20iLCJmZWV
kVXJpcyI6WyJodHRwczovL2podWIuZXhhbXBsZS5jb20vRmVlZHMvOThkNTI0Nj
FmYTViYmM4Nzk1OTNiNzc1NCIsImh0dHBzOi8vamh1Yi5leGFtcGxlLmNvbS9GZ
WVkcy81ZDc2MDQ1MTZiMWQwODY0MWQ3Njc2ZWU3Il0sInJlc291cmNlVXJpcyI6
WyJodHRwczovL3NjaW0uZXhhbXBsZS5jb20vVXNlcnMvNDRmNjE0MmRmOTZiZDZ
hYjYxZTc1MjFkOSJdLCJldmVudFR5cGVzIjpbIkNSRUFURSJdLCJhdHRyaWJ1dG
VzIjpbImlkIiwibmFtZSIsInVzZXJOYW1lIiwicGFzc3dvcmQiLCJlbWFpbHMiX
SwidmFsdWVzIjp7ImVtYWlscyI6W3sidHlwZSI6IndvcmsiLCJ2YWx1ZSI6Impk
b2VAZXhhbXBsZS5jb20ifV0sInBhc3N3b3JkIjoibm90NHUybm8iLCJ1c2VyTmF
tZSI6Impkb2UiLCJpZCI6IjQ0ZjYxNDJkZjk2YmQ2YWI2MWU3NTIxZDkiLCJuYW
1lIjp7ImdpdmVuTmFtZSI6IkpvaG4iLCJmYW1pbHlOYW1lIjoiRG9lIn19fQ
.
]]></artwork></figure>

</section>
<section anchor="tx_handling" title="Handling a SET Transmission Request">
<t>Upon receipt of the request, the SET Receiver SHALL 
validate the JWT structure of the SET as defined in 
Section 7.2 <xref target="RFC7519"/>. The SET Receiver 
SHALL also validate the SET information as described
in Section 2 <xref target="SET"/>.</t>

<section anchor="tx_success" title="Success Response">
<t>If the SET is determined to be valid, the SET Receiver SHALL
“acknowledge” successful submission by responding with HTTP Status
202 as <spanx style="verb">Accepted</spanx> 
(see Section 6.3.3 <xref target="RFC7231"/>).</t>

<t>In order
to maintain compatibility with other methods of transmission, the 
SET Receiver SHOULD NOT include an HTTP response body representation
of the submitted SET or what the SET’s pending status is when 
acknowledging success. In the case of an error (e.g. HTTP Status 400),
the purpose of the HTTP response body is to indicate any SET parsing, 
validation, or cryptographic errors.</t>

<t>The following is a non-normative example of a successful
receipt of a SET.</t>

<figure title="Example Successful Delivery Response" anchor="goodPostResponse"><artwork><![CDATA[
HTTP/1.1 202 Accepted
]]></artwork></figure>

<t>Note that the purpose of the “acknowledgement” response is to let the 
SET Transmitter know that a SET has been delivered and the 
information no longer needs to be retained by the SET Transmitter. 
Before acknowledgement, SET Receivers SHOULD ensure they have 
validated received SETs and retained them in a manner appropriate 
to information retention requirements appropriate to the SET 
event types signaled. The level and method of retention of SETs
by SET Receivers is out-of-scope of this specification.</t>

</section>
<section anchor="tx_failure" title="Failure Response">
<t>In the Event of a general HTTP error condition, the SET Receiver
MAY respond with an appropriate HTTP Status code as defined in 
Section 6 <xref target="RFC7231"/>.</t>

<t>When the SET Receiver detects an error parsing or 
validating a received SET (as defined by <xref target="SET"/>), 
the SET Receiver SHALL indicate an HTTP Status 400 error with an 
error response as described in <xref target="errorResponse"/>.</t>

<t>The following is an example non-normative error 
response.</t>

<figure title="Example Error Response" anchor="badPostResponse"><artwork><![CDATA[
HTTP/1.1 400 Bad Request
Content-Type: application/json

{
  "err":"dup",
  "description":"SET already received. Ignored."

}
]]></artwork></figure>

</section>
<section anchor="error_codes" title="Security Event Token Delivery Error Codes">
<t>Security Event Token Delivery Error Codes are strings that identify a specific type of error that may occur when parsing or validating a SET. Every Security Event Token Delivery Error Code MUST have a unique name registered in the IANA “Security Event Token Delivery Error Codes” registry established by <xref target="iana_set_errors"/>.</t>

<t>The following table presents the initial set of Error Codes that are registered in the IANA “Security Event Token Delivery Error Codes” registry:</t>

<texttable title="SET Delivery Error Codes" anchor="tabErrors">
      <ttcol align='left'>Error Code</ttcol>
      <ttcol align='left'>Description</ttcol>
      <c>json</c>
      <c>Invalid JSON object.</c>
      <c>jwtParse</c>
      <c>Invalid or unparsable JWT or JSON structure.</c>
      <c>jwtHdr</c>
      <c>In invalid JWT header was detected.</c>
      <c>jwtCrypto</c>
      <c>Unable to parse due to unsupported algorithm.</c>
      <c>jws</c>
      <c>Signature was not validated.</c>
      <c>jwe</c>
      <c>Unable to decrypt JWE encoded data.</c>
      <c>jwtAud</c>
      <c>Invalid audience value.</c>
      <c>jwtIss</c>
      <c>Issuer not recognized.</c>
      <c>setType</c>
      <c>An unexpected Event type was received.</c>
      <c>setParse</c>
      <c>Invalid structure was encountered such as an inability to parse or an incomplete set of Event claims.</c>
      <c>setData</c>
      <c>SET event claims incomplete or invalid.</c>
      <c>dup</c>
      <c>A duplicate SET was received and has been ignored.</c>
</texttable>

</section>
<section anchor="errorResponse" title="Error Response Handling">
<t>An error response SHALL include a JSON
object which provides details about the error. The JSON object
includes the JSON attributes:</t>

<t><list style="hanging">
  <t hangText='err'><vspace blankLines='0'/>
  A Security Event Token Delivery Error Code (see <xref target="error_codes"/>).
description</t>
  <t>A human-readable text that provides
additional diagnostic information.</t>
</list></t>

<t>When included as part of an HTTP Status 400 response, the above
JSON is the HTTP response body (see <xref target="badPostResponse"/>).</t>

</section>
</section>
</section>
<section anchor="aa" title="Authentication and Authorization">

<t>The SET delivery method described in this specification is
based upon HTTP and depends on the use of TLS and/or standard 
HTTP authentication and authorization schemes as per 
<xref target="RFC7235"/>.</t>

<t>Because SET Delivery describes a simple function, authorization
for the ability to pick-up or deliver SETs can be derived by
considering the identity of the SET issuer, or via other employed
authentication methods.  Because SETs are
not commands (see ), SET Receivers are free to ignore SETs that 
are not of interest.</t>

</section>
<section anchor="Security" title="Security Considerations">

<section anchor="payloadAuthentication" title="Authentication Using Signed SETs">
<t>In scenarios where HTTP authorization or TLS mutual authentication
are not used or are considered weak, JWS signed SETs SHOULD be 
used (see <xref target="RFC7515"/> and 
Security Considerations <xref target="SET"/>). This enables the SET Receiver
to validate that the SET issuer is authorized to deliver SETs.</t>

</section>
<section anchor="tls-support-considerations" title="TLS Support Considerations">
<t>SETs contain sensitive information that is considered PII
(e.g. subject claims). Therefore, SET Transmitters and
SET Receivers MUST require the use of a transport-layer 
security mechanism. Event delivery endpoints MUST support TLS 
1.2 <xref target="RFC5246"/> and MAY support additional 
transport-layer mechanisms meeting its security requirements. 
When using TLS, the client MUST perform a TLS/SSL server
certificate check, per <xref target="RFC6125"/>. Implementation
security considerations for TLS can be found in “Recommendations for
Secure Use of TLS and DTLS” <xref target="RFC7525"/>.</t>

</section>
<section anchor="denial-of-service" title="Denial of Service">
<t>The SET Receiver may be vulnerable to a denial-of-service attack where a malicious party makes a high volume of requests containing invalid SETs, causing the endpoint to expend significant resources on cryptographic operations that are bound to fail. This may be mitigated by authenticating SET Transmitters with a mechanism with low runtime overhead, such as mutual TLS or statically assigned bearer tokens.</t>

</section>
</section>
<section anchor="privacy-considerations" title="Privacy Considerations">

<t>If a SET needs to be retained for audit purposes, JWS MAY 
be used to provide verification of its authenticity.</t>

<t>When sharing personally identifiable information or information
that is otherwise considered confidential to affected users, SET 
Transmitters and Receivers MUST have the appropriate legal agreements
and user consent or terms of service in place.</t>

<t>The propagation of subject identifiers can be perceived as personally
identifiable information. Where possible, SET Transmitters and Receivers
SHOULD devise approaches that prevent propagation — for example, the
passing of a hash value that requires the subscriber to already know
the subject.</t>

</section>
<section anchor="IANA" title="IANA Considerations">

<section anchor="iana_set_errors" title="Security Event Token Delivery Error Codes">
<t>This document defines Security Event Token Delivery Error Codes, for which IANA is asked to create and maintain a new registry titled “Security Event Token Delivery Error Codes”.  Initial values for the Security Event Token Delivery Error Codes registry are given in <xref target="tabErrors"/>.  Future assignments are to be made through the Expert Review registration policy (<xref target="BCP26"/>) and shall follow the template presented in <xref target="iana_set_errors_template"/>.</t>

<section anchor="iana_set_errors_template" title="Registration Template">

<t><list style="hanging">
  <t hangText='Error Code'><vspace blankLines='0'/>
  The name of the Security Event Token Delivery Error Code, as described in <xref target="error_codes"/>. The name MUST be a case-sensitive ASCII string consisting only of upper-case letters (“A” - “Z”), lower-case letters (“a” - “z”), and digits (“0” - “9”).</t>
  <t hangText='Descrption'><vspace blankLines='0'/>
  A brief human-readable description of the Security Event Token Delivery Error Code.</t>
  <t hangText='Change Controller'><vspace blankLines='0'/>
  For error codes registered by the IETF or its working groups, list “IETF Secevent Working Group”.  For all other error codes, list the name of the party responsible for the registration.  Contact information such as mailing address, email address, or phone number may also be provided.</t>
  <t hangText='Defining Document(s)'><vspace blankLines='0'/>
  A reference to the document or documents that define the Security Event Token Delivery Error Code. The definition MUST specify the name and description of the error code, and explain under what circumstances the error code may be used. URIs that can be used to retrieve copies of each document at no cost SHOULD be included.</t>
</list></t>

</section>
<section anchor="initial-registry-contents" title="Initial Registry Contents">

<section anchor="json" title="json">
<t><list style="symbols">
  <t>Name: json</t>
  <t>Description: Invalid JSON object.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jwtparse" title="jwtParse">
<t><list style="symbols">
  <t>Name: jwtParse</t>
  <t>Description: Invalid or unparsable JWT or JSON structure.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jwthdr" title="jwtHdr">
<t><list style="symbols">
  <t>Name: jwtHdr</t>
  <t>Description: In invalid JWT header was detected.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jwtcrypto" title="jwtCrypto">
<t><list style="symbols">
  <t>Name: jwtCrypto</t>
  <t>Description: Unable to parse due to unsupported algorithm.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jws" title="jws">
<t><list style="symbols">
  <t>Name: jws</t>
  <t>Description: Signature was not validated.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jwe" title="jwe">
<t><list style="symbols">
  <t>Name: jwe</t>
  <t>Description: Unable to decrypt JWE encoded data.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jwtaud" title="jwtAud">
<t><list style="symbols">
  <t>Name: jwtAud</t>
  <t>Description: Invalid audience value.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jwtiss" title="jwtIss">
<t><list style="symbols">
  <t>Name: jwtIss</t>
  <t>Description: Issuer not recognized.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="settype" title="setType">
<t><list style="symbols">
  <t>Name: setType</t>
  <t>Description: An unexpected Event type was received.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="setparse" title="setParse">
<t><list style="symbols">
  <t>Name: setParse</t>
  <t>Description: Invalid structure was encountered such as an inability to parse or an incomplete set of Event claims.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="setdata" title="setData">
<t><list style="symbols">
  <t>Name: setData</t>
  <t>Description: SET event claims incomplete or invalid.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="dup" title="dup">
<t><list style="symbols">
  <t>Name: dup</t>
  <t>Description: A duplicate SET was received and has been ignored.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
</section>
</section>
</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor="SET" target='https://www.rfc-editor.org/info/rfc8417'>
<front>
<title>Security Event Token (SET)</title>
<author initials='P.' surname='Hunt' fullname='P. Hunt' role='editor'><organization /></author>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='W.' surname='Denniss' fullname='W. Denniss'><organization /></author>
<author initials='M.' surname='Ansari' fullname='M. Ansari'><organization /></author>
<date year='2018' month='July' />
<abstract><t>This specification defines the Security Event Token (SET) data structure.  A SET describes statements of fact from the perspective of an issuer about a subject.  These statements of fact represent an event that occurred directly to or about a security subject, for example, a statement about the issuance or revocation of a token on behalf of a subject.  This specification is intended to enable representing security- and identity-related events.  A SET is a JSON Web Token (JWT), which can be optionally signed and/or encrypted. SETs can be distributed via protocols such as HTTP.</t></abstract>
</front>
<seriesInfo name='RFC' value='8417'/>
<seriesInfo name='DOI' value='10.17487/RFC8417'/>
</reference>



<reference  anchor="BCP26" target='https://www.rfc-editor.org/info/rfc8126'>
<front>
<title>Guidelines for Writing an IANA Considerations Section in RFCs</title>
<author initials='M.' surname='Cotton' fullname='M. Cotton'><organization /></author>
<author initials='B.' surname='Leiba' fullname='B. Leiba'><organization /></author>
<author initials='T.' surname='Narten' fullname='T. Narten'><organization /></author>
<date year='2017' month='June' />
<abstract><t>Many protocols make use of points of extensibility that use constants to identify various protocol parameters.  To ensure that the values in these fields do not have conflicting uses and to promote interoperability, their allocations are often coordinated by a central record keeper.  For IETF protocols, that role is filled by the Internet Assigned Numbers Authority (IANA).</t><t>To make assignments in a given registry prudently, guidance describing the conditions under which new values should be assigned, as well as when and how modifications to existing values can be made, is needed.  This document defines a framework for the documentation of these guidelines by specification authors, in order to assure that the provided guidance for the IANA Considerations is clear and addresses the various issues that are likely in the operation of a registry.</t><t>This is the third edition of this document; it obsoletes RFC 5226.</t></abstract>
</front>
<seriesInfo name='BCP' value='26'/>
<seriesInfo name='RFC' value='8126'/>
<seriesInfo name='DOI' value='10.17487/RFC8126'/>
</reference>



<reference  anchor="RFC7231" target='https://www.rfc-editor.org/info/rfc7231'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines the semantics of HTTP/1.1 messages, as expressed by request methods, request header fields, response status codes, and response header fields, along with the payload of messages (metadata and body content) and mechanisms for content negotiation.</t></abstract>
</front>
<seriesInfo name='RFC' value='7231'/>
<seriesInfo name='DOI' value='10.17487/RFC7231'/>
</reference>



<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC8174" target='https://www.rfc-editor.org/info/rfc8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author initials='B.' surname='Leiba' fullname='B. Leiba'><organization /></author>
<date year='2017' month='May' />
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>



<reference  anchor="RFC7519" target='https://www.rfc-editor.org/info/rfc7519'>
<front>
<title>JSON Web Token (JWT)</title>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='J.' surname='Bradley' fullname='J. Bradley'><organization /></author>
<author initials='N.' surname='Sakimura' fullname='N. Sakimura'><organization /></author>
<date year='2015' month='May' />
<abstract><t>JSON Web Token (JWT) is a compact, URL-safe means of representing claims to be transferred between two parties.  The claims in a JWT are encoded as a JSON object that is used as the payload of a JSON Web Signature (JWS) structure or as the plaintext of a JSON Web Encryption (JWE) structure, enabling the claims to be digitally signed or integrity protected with a Message Authentication Code (MAC) and/or encrypted.</t></abstract>
</front>
<seriesInfo name='RFC' value='7519'/>
<seriesInfo name='DOI' value='10.17487/RFC7519'/>
</reference>



<reference  anchor="RFC7235" target='https://www.rfc-editor.org/info/rfc7235'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Authentication</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application- level protocol for distributed, collaborative, hypermedia information systems.  This document defines the HTTP Authentication framework.</t></abstract>
</front>
<seriesInfo name='RFC' value='7235'/>
<seriesInfo name='DOI' value='10.17487/RFC7235'/>
</reference>



<reference  anchor="RFC7515" target='https://www.rfc-editor.org/info/rfc7515'>
<front>
<title>JSON Web Signature (JWS)</title>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='J.' surname='Bradley' fullname='J. Bradley'><organization /></author>
<author initials='N.' surname='Sakimura' fullname='N. Sakimura'><organization /></author>
<date year='2015' month='May' />
<abstract><t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures.  Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification.  Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t></abstract>
</front>
<seriesInfo name='RFC' value='7515'/>
<seriesInfo name='DOI' value='10.17487/RFC7515'/>
</reference>



<reference  anchor="RFC5246" target='https://www.rfc-editor.org/info/rfc5246'>
<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.2</title>
<author initials='T.' surname='Dierks' fullname='T. Dierks'><organization /></author>
<author initials='E.' surname='Rescorla' fullname='E. Rescorla'><organization /></author>
<date year='2008' month='August' />
<abstract><t>This document specifies Version 1.2 of the Transport Layer Security (TLS) protocol.  The TLS protocol provides communications security over the Internet.  The protocol allows client/server applications to communicate in a way that is designed to prevent eavesdropping, tampering, or message forgery.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5246'/>
<seriesInfo name='DOI' value='10.17487/RFC5246'/>
</reference>



<reference  anchor="RFC6125" target='https://www.rfc-editor.org/info/rfc6125'>
<front>
<title>Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)</title>
<author initials='P.' surname='Saint-Andre' fullname='P. Saint-Andre'><organization /></author>
<author initials='J.' surname='Hodges' fullname='J. Hodges'><organization /></author>
<date year='2011' month='March' />
<abstract><t>Many application technologies enable secure communication between two entities by means of Internet Public Key Infrastructure Using X.509 (PKIX) certificates in the context of Transport Layer Security (TLS). This document specifies procedures for representing and verifying the identity of application services in such interactions.   [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6125'/>
<seriesInfo name='DOI' value='10.17487/RFC6125'/>
</reference>




    </references>

    <references title='Informative References'>





<reference  anchor="RFC7525" target='https://www.rfc-editor.org/info/rfc7525'>
<front>
<title>Recommendations for Secure Use of Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS)</title>
<author initials='Y.' surname='Sheffer' fullname='Y. Sheffer'><organization /></author>
<author initials='R.' surname='Holz' fullname='R. Holz'><organization /></author>
<author initials='P.' surname='Saint-Andre' fullname='P. Saint-Andre'><organization /></author>
<date year='2015' month='May' />
<abstract><t>Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS) are widely used to protect data exchanged over application protocols such as HTTP, SMTP, IMAP, POP, SIP, and XMPP.  Over the last few years, several serious attacks on TLS have emerged, including attacks on its most commonly used cipher suites and their modes of operation.  This document provides recommendations for improving the security of deployed services that use TLS and DTLS. The recommendations are applicable to the majority of use cases.</t></abstract>
</front>
<seriesInfo name='BCP' value='195'/>
<seriesInfo name='RFC' value='7525'/>
<seriesInfo name='DOI' value='10.17487/RFC7525'/>
</reference>




    </references>


<section anchor="other-streaming-specifications" title="Other Streaming Specifications">
<t>[[EDITORS NOTE: This section to be removed prior to publication]]</t>

<t>The following pub/sub, queuing, streaming systems were reviewed 
as possible solutions or as input to the current draft:</t>

<t>XMPP Events</t>

<t>The WG considered the XMPP events ands its ability to provide a single
messaging solution without the need for both polling and push modes.
The feeling was the size and methodology of XMPP was to far apart from
the current capabilities of the SECEVENTs community which focuses in
on HTTP based service delivery and authorization.</t>

<t>Amazon Simple Notification Service</t>

<t>Simple Notification Service, is a pub/sub messaging product from 
AWS. SNS supports a variety of subscriber types: HTTP/HTTPS endpoints, 
AWS Lambda functions, email addresses (as JSON or plain text), phone 
numbers (via SMS), and AWS SQS standard queues. It doesn’t directly 
support pull, but subscribers can get the pull model by creating an 
SQS queue and subscribing it to the topic. Note that this puts the 
cost of pull support back onto the subscriber, just as it is in the 
push model. It is not clear that one way is strictly better than the 
other; larger, sophisticated developers may be happy to own message 
persistence so they can have their own internal delivery guarantees. 
The long tail of OIDC clients may not care about that, or may fail 
to get it right. Regardless, I think we can learn something from the 
Delivery Policies supported by SNS, as well as the delivery controls 
that SQS offers (e.g. Visibility Timeout, Dead-Letter Queues). I’m 
not suggesting that we need all of these things in the spec, but 
they give an idea of what features people have found useful.</t>

<t>Other information:</t>

<t><list style="symbols">
  <t>API Reference: http://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/Welcome.html</t>
  <t>Visibility Timeouts: http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-visibility-timeout.html</t>
</list></t>

<t>Apache Kafka</t>

<t>Apache Kafka is an Apache open source project based upon TCP for 
distributed streaming. It prescribes some interesting general 
purpose features that seem to extend far beyond the simpler 
streaming model SECEVENTs is after. A comment from MS has been that 
Kafka does an acknowledge with poll combination event which seems 
to be a performance advantage. See: https://kafka.apache.org/intro</t>

<t>Google Pub/Sub</t>

<t>Google Pub Sub system favours a model whereby polling and acknowledgement
of events is done as separate endpoints as separate functions.</t>

<t>Information:</t>

<t><list style="symbols">
  <t>Cloud Overview - https://cloud.google.com/pubsub/</t>
  <t>Subscriber Overview - https://cloud.google.com/pubsub/docs/subscriber</t>
  <t>Subscriber Pull(poll) - https://cloud.google.com/pubsub/docs/pull</t>
</list></t>

</section>
<section anchor="acknowledgments" title="Acknowledgments">
<t>The editors would like to thanks the members of the SCIM WG which 
began discussions of provisioning events starting with: draft-hunt-scim-notify-00 in 2015.</t>

<t>The editors would like to thank the authors of draft-ietf-secevent-delivery-02,
on which this draft is based.</t>

<t>The editor would like to thank the participants in the the SECEVENTS
working group for their support of this specification.</t>

</section>
<section anchor="change-log" title="Change Log">
<t>Draft 00 - AB - Based on draft-ietf-secevent-delivery-02 with the 
following changes:</t>

<t><list style="symbols">
  <t>Renamed to “Push-Based SET Token Delivery Using HTTP”</t>
  <t>Removed references to the HTTP Polling delivery method.</t>
  <t>Removed informative reference to RFC6202.</t>
</list></t>

<t>Draft 01 - AB</t>

<t><list style="symbols">
  <t>Converted to Markdown</t>
  <t>Removed NumericDate definition (unused).</t>
  <t>Removed Event and Subject definitions (defined in SET).</t>
  <t>Removed text related to Event Streams.</t>
  <t>Fixed area and workgroup to match secevent.</t>
  <t>Renamed Event Transmitter and Event Receiver to SET Transmitter and SET Receiver, respectively.</t>
  <t>Added IANA registry for SET Delivery Error Codes.</t>
  <t>Removed enumeration of HTTP authentication methods.</t>
  <t>Removed generally applicable guidance for HTTP, authorization tokens, andbearer tokens.</t>
  <t>Elaborated on guidance for DoS protection via authn, and moved it to Security Considerations.</t>
  <t>Removed redundant instruction to use <spanx style="verb">WWW-Authenticate</spanx> header.</t>
  <t>Removed further generally applicable guidance for authorization tokens.</t>
  <t>Removed bearer token from example delivery request, and removed text explaining it was an example only.</t>
  <t>Broke delivery method description into separate request/response sections.</t>
  <t>Added missing blank line ahead of body in example request.</t>
  <t>Removed unapplicable explanatory text regarding shortening and encoding of URLs in examples.</t>
  <t>Changed MAY to may in explanation of non-normative line breaks and whitespace in examples.</t>
  <t>Removed unnecessary text about SET creation and aspects of SET handling not related to the delivery method.</t>
  <t>Removed duplicate technical description of delivery method requests and responses.</t>
  <t>Added “non-normative example” text before example SET transmission request.</t>
  <t>Updated error code column headers to match descriptive text.</t>
  <t>Updated date. Updated documentation version to 01.</t>
</list></t>

</section>


  </back>

<!-- ##markdown-source:
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

-->

</rfc>

