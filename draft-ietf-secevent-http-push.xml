<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.2 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-secevent-http-push-00" category="std">

  <front>
    <title abbrev="draft-ietf-secevent-http-push">Push-Based SET Token Delivery Using HTTP</title>

    <author initials="A." surname="Backman" fullname="Annabelle Backman" role="editor">
      <organization>Amazon</organization>
      <address>
        <email>richanna@amazon.com</email>
      </address>
    </author>
    <author initials="M." surname="Jones" fullname="Michael B. Jones">
      <organization>Microsoft</organization>
      <address>
        <email>mbj@microsoft.com</email>
        <uri>http://self-issued.info/</uri>
      </address>
    </author>
    <author initials="P." surname="Hunt" fullname="Phil Hunt">
      <organization>Oracle</organization>
      <address>
        <email>phil.hunt@yahoo.com</email>
      </address>
    </author>
    <author initials="M." surname="Scurtescu" fullname="Marius Scurtescu">
      <organization>Google</organization>
      <address>
        <email>mscurtescu@google.com</email>
      </address>
    </author>
    <author initials="M." surname="Ansari" fullname="Morteza Ansari">
      <organization>Cisco</organization>
      <address>
        <email>morteza.ansari@cisco.com</email>
      </address>
    </author>
    <author initials="A." surname="Nadalin" fullname="Anthony Nadalin">
      <organization>Microsoft</organization>
      <address>
        <email>tonynad@microsoft.com</email>
      </address>
    </author>

    <date year="2018" month="August" day="27"/>

    <area>Security</area>
    <workgroup>Security Events Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This specification defines how a series of security event tokens 
(SETs) may be delivered to a previously registered receiver 
using HTTP POST over TLS initiated as a push to the receiver.</t>



    </abstract>


  </front>

  <middle>


<section anchor="intro" title="Introduction and Overview">
<t>This specification defines how SETs (see
<xref target="SET"/>) can be transmitted to a previously 
registered SET Receiver using HTTP <xref target="RFC7231"/> over TLS. The
specification defines a method to push SETs via HTTP POST.</t>

<section anchor="conv" title="Notational Conventions">
<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL
NOT”, “SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”,
“MAY”, and “OPTIONAL” in this document are to be interpreted as
described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when,
they appear in all capitals, as shown here.</t>

<t>For purposes of readability examples are not URL encoded.
Implementers MUST percent encode URLs as described in Section 2.1 of
<xref target="RFC3986"/>.</t>

<t>Throughout this documents all figures MAY contain spaces and extra
line-wrapping for readability and space limitations. Similarly, some
URI’s contained within examples, have been shortened for space and
readability reasons.</t>

</section>
<section anchor="defn" title="Definitions">
<t>This specification assumes terminology defined in the Security
Event Token specification <xref target="SET"/>, as well as the terms defined below:</t>

<t><list style="hanging">
  <t hangText='SET Transmitter'><vspace blankLines='0'/>
  A service provider that delivers SETs to other providers known
as SET Receivers.</t>
  <t hangText='SET Receiver'><vspace blankLines='0'/>
  A service provider that registers to receive SETs from an SET
Transmitter and provides an endpoint to receive SETs via HTTP POST.</t>
</list></t>

</section>
</section>
<section anchor="event_delivery" title="Event Delivery">

<section anchor="event_delivery_process" title="Event Delivery Process">
<t>When an Event occurs, the SET Transmitter constructs a SET
token <xref target="SET"/> that describes the Event.</t>

<t>How SETs are defined and the process by which Events are identified for 
SET Receivers is out-of-scope of this    specification.</t>

<t>When a SET is available for an SET Receiver, the SET Transmitter
attempts to deliver the SET based on the SET Receiver’s registered
delivery mechanism:</t>

<t><list style="symbols">
  <t>The SET Transmitter uses an HTTP/1.1 POST to the SET Receiver
endpoint to deliver the SET;</t>
  <t>Or, the SET Transmitter delivers the Event through a different
method not defined by this specification.</t>
</list></t>

<t>In Push-Based SET Delivery Using HTTP, SETs are delivered one at a
time using HTTP POST requests by an SET Transmitter to an SET
Receiver. The HTTP request body is a JSON Web Token <xref target="RFC7519"/>
with a <spanx style="verb">Content-Type</spanx> header of <spanx style="verb">application/secevent+jwt</spanx> as
defined in Section 2.2 and 6.2 of <xref target="SET"/>. Upon receipt, the 
SET Receiver acknowledges receipt with a response with HTTP 
Status 202, as described below in <xref target="httpPost"/>.</t>

<t>After successful (acknowledged) SET delivery, SET 
Transmitters SHOULD NOT be required to maintain or record SETs for 
recovery. Once a SET is acknowledged, the SET Receiver SHALL be 
responsible for retention and recovery.</t>

<t>Transmitted SETs SHOULD be self-validating (e.g. signed)
if there is a requirement to verify they were issued by the SET 
Transmitter at a later date when de-coupled from the original 
delivery where authenticity could be checked via the HTTP or 
TLS mutual authentication.</t>

<t>Upon receiving a SET, the SET Receiver reads the SET and validates 
it. The SET Receiver MUST acknowledge receipt to the SET Transmitter, using the 
defined acknowledgement or error method.</t>

<t>The SET Receiver SHALL NOT use the Event acknowledgement mechanism
to report Event errors other than relating to the parsing and validation
of the SET.</t>

</section>
<section anchor="httpPost" title="Push Delivery using HTTP">
<t>This method allows an SET Transmitter to use HTTP POST 
(Section 4.3.3 <xref target="RFC7231"/>) to deliver
SETs to a previously registered web callback URI supplied by the
SET Receiver as part of a configuration process 
(not defined by this document).</t>

<t>The SET to be delivered MAY be signed 
and/or encrypted as defined in <xref target="SET"/>.</t>

<t>The HTTP Content-Type (see 
Section 3.1.1.5 <xref target="RFC7231"/>) for the HTTP POST is 
<spanx style="verb">application/secevent+jwt</spanx> and SHALL consist of 
a single SET (see <xref target="SET"/>).
As per Section 5.3.2 <xref target="RFC7231"/>, the expected 
media type (<spanx style="verb">Accept</spanx> header) response is 
<spanx style="verb">application/json</spanx>.</t>

<t>To deliver an Event, the SET Transmitter generates an event 
delivery message and uses HTTP POST to the configured endpoint with
the appropriate <spanx style="verb">Accept</spanx> and 
<spanx style="verb">Content-Type</spanx> headers.</t>

<figure title="Example HTTP POST Request" anchor="postSet"><artwork><![CDATA[
POST /Events  HTTP/1.1

Host: notify.examplerp.com
Accept: application/json
Content-Type: application/secevent+jwt
eyJhbGciOiJub25lIn0
.
eyJwdWJsaXNoZXJVcmkiOiJodHRwczovL3NjaW0uZXhhbXBsZS5jb20iLCJmZWV
kVXJpcyI6WyJodHRwczovL2podWIuZXhhbXBsZS5jb20vRmVlZHMvOThkNTI0Nj
FmYTViYmM4Nzk1OTNiNzc1NCIsImh0dHBzOi8vamh1Yi5leGFtcGxlLmNvbS9GZ
WVkcy81ZDc2MDQ1MTZiMWQwODY0MWQ3Njc2ZWU3Il0sInJlc291cmNlVXJpcyI6
WyJodHRwczovL3NjaW0uZXhhbXBsZS5jb20vVXNlcnMvNDRmNjE0MmRmOTZiZDZ
hYjYxZTc1MjFkOSJdLCJldmVudFR5cGVzIjpbIkNSRUFURSJdLCJhdHRyaWJ1dG
VzIjpbImlkIiwibmFtZSIsInVzZXJOYW1lIiwicGFzc3dvcmQiLCJlbWFpbHMiX
SwidmFsdWVzIjp7ImVtYWlscyI6W3sidHlwZSI6IndvcmsiLCJ2YWx1ZSI6Impk
b2VAZXhhbXBsZS5jb20ifV0sInBhc3N3b3JkIjoibm90NHUybm8iLCJ1c2VyTmF
tZSI6Impkb2UiLCJpZCI6IjQ0ZjYxNDJkZjk2YmQ2YWI2MWU3NTIxZDkiLCJuYW
1lIjp7ImdpdmVuTmFtZSI6IkpvaG4iLCJmYW1pbHlOYW1lIjoiRG9lIn19fQ
.
]]></artwork></figure>

<t>Upon receipt of the request, the SET Receiver SHALL 
validate the JWT structure of the SET as defined in 
Section 7.2 <xref target="RFC7519"/>. The SET Receiver 
SHALL also validate the SET information as described
in Section 2 <xref target="SET"/>.</t>

<t>If the SET is determined to be valid, the SET Receiver SHALL
“acknowledge” successful submission by responding with HTTP Status
202 as <spanx style="verb">Accepted</spanx> 
(see Section 6.3.3 <xref target="RFC7231"/>).</t>

<t>In order
to maintain compatibility with other methods of transmission, the 
SET Receiver SHOULD NOT include an HTTP response body representation
of the submitted SET or what the SET’s pending status is when 
acknowledging success. In the case of an error (e.g. HTTP Status 400),
the purpose of the HTTP response body is to indicate any SET parsing, 
validation, or cryptographic errors.</t>

<t>The following is a non-normative example of a successful
receipt of a SET.</t>

<figure title="Example Successful Delivery Response" anchor="goodPostResponse"><artwork><![CDATA[
HTTP/1.1 202 Accepted
]]></artwork></figure>

<t>Note that the purpose of the “acknowledgement” response is to let the 
SET Transmitter know that a SET has been delivered and the 
information no longer needs to be retained by the SET Transmitter. 
Before acknowledgement, SET Receivers SHOULD ensure they have 
validated received SETs and retained them in a manner appropriate 
to information retention requirements appropriate to the SET 
event types signaled. The level and method of retention of SETs
by SET Receivers is out-of-scope of this specification.</t>

<t>In the Event of a general HTTP error condition, the SET Receiver
MAY respond with an appropriate HTTP Status code as defined in 
Section 6 <xref target="RFC7231"/>.</t>

<t>When the SET Receiver detects an error parsing or 
validating a received SET (as defined by <xref target="SET"/>), 
the SET Receiver SHALL indicate an HTTP Status 400 error with an 
error response as described in <xref target="errorResponse"/>.</t>

<t>The following is an example non-normative error 
response.</t>

<figure title="Example HTTP Status 400 Response" anchor="badPostResponse"><artwork><![CDATA[
HTTP/1.1 400 Bad Request
Content-Type: application/json

{
  "err":"dup",
  "description":"SET already received. Ignored."

}
]]></artwork></figure>

</section>
<section anchor="error_codes" title="Security Event Token Delivery Error Codes">
<t>Security Event Token Delivery Error Codes are strings that identify a specific type of error that may occur when parsing or validating a SET. Every Security Event Token Delivery Error Code MUST have a unique name registered in the IANA “Security Event Token Delivery Error Codes” registry established by <xref target="iana_set_errors"/>.</t>

<t>The following table presents the initial set of Error Codes that are registered in the IANA “Security Event Token Delivery Error Codes” registry:</t>

<texttable title="SET Delivery Error Codes" anchor="tabErrors">
      <ttcol align='left'>Err Value</ttcol>
      <ttcol align='left'>Description</ttcol>
      <c>json</c>
      <c>Invalid JSON object.</c>
      <c>jwtParse</c>
      <c>Invalid or unparsable JWT or JSON structure.</c>
      <c>jwtHdr</c>
      <c>In invalid JWT header was detected.</c>
      <c>jwtCrypto</c>
      <c>Unable to parse due to unsupported algorithm.</c>
      <c>jws</c>
      <c>Signature was not validated.</c>
      <c>jwe</c>
      <c>Unable to decrypt JWE encoded data.</c>
      <c>jwtAud</c>
      <c>Invalid audience value.</c>
      <c>jwtIss</c>
      <c>Issuer not recognized.</c>
      <c>setType</c>
      <c>An unexpected Event type was received.</c>
      <c>setParse</c>
      <c>Invalid structure was encountered such as an inability to parse or an incomplete set of Event claims.</c>
      <c>setData</c>
      <c>SET event claims incomplete or invalid.</c>
      <c>dup</c>
      <c>A duplicate SET was received and has been ignored.</c>
</texttable>

</section>
<section anchor="errorResponse" title="Error Response Handling">
<t>An error response SHALL include a JSON
object which provides details about the error. The JSON object
includes the JSON attributes:</t>

<t><list style="hanging">
  <t hangText='err'><vspace blankLines='0'/>
  A Security Event Token Delivery Error Code (see <xref target="error_codes"/>).
description</t>
  <t>A human-readable text that provides
additional diagnostic information.</t>
</list></t>

<t>When included as part of an HTTP Status 400 response, the above
JSON is the HTTP response body (see <xref target="badPostResponse"/>).</t>

</section>
</section>
<section anchor="aa" title="Authentication and Authorization">

<t>The SET delivery method described in this specification is
based upon HTTP and depends on the use of TLS and/or standard 
HTTP authentication and authorization schemes as per 
<xref target="RFC7235"/>.</t>

<t>Because SET Delivery describes a simple function, authorization
for the ability to pick-up or deliver SETs can be derived by
considering the identity of the SET issuer, or via other employed
authentication methods.  Because SETs are
not commands (see ), SET Receivers are free to ignore SETs that 
are not of interest.</t>

</section>
<section anchor="Security" title="Security Considerations">

<section anchor="payloadAuthentication" title="Authentication Using Signed SETs">
<t>In scenarios where HTTP authorization or TLS mutual authentication
are not used or are considered weak, JWS signed SETs SHOULD be 
used (see <xref target="RFC7515"/> and 
Security Considerations <xref target="SET"/>). This enables the SET Receiver
to validate that the SET issuer is authorized to deliver SETs.</t>

</section>
<section anchor="tls-support-considerations" title="TLS Support Considerations">
<t>SETs contain sensitive information that is considered PII
(e.g. subject claims). Therefore, SET Transmitters and
SET Receivers MUST require the use of a transport-layer 
security mechanism. Event delivery endpoints MUST support TLS 
1.2 <xref target="RFC5246"/> and MAY support additional 
transport-layer mechanisms meeting its security requirements. 
When using TLS, the client MUST perform a TLS/SSL server
certificate check, per <xref target="RFC6125"/>. Implementation
security considerations for TLS can be found in “Recommendations for
Secure Use of TLS and DTLS” <xref target="RFC7525"/>.</t>

</section>
<section anchor="denial-of-service" title="Denial of Service">
<t>The SET Receiver may be vulnerable to a denial-of-service attack where a malicious party makes a high volume of requests containing invalid SETs, causing the endpoint to expend significant resources on cryptographic operations that are bound to fail. This may be mitigated by authenticating SET Transmitters with a mechanism with low runtime overhead, such as mutual TLS or statically assigned bearer tokens.</t>

</section>
</section>
<section anchor="privacy-considerations" title="Privacy Considerations">

<t>If a SET needs to be retained for audit purposes, JWS MAY 
be used to provide verification of its authenticity.</t>

<t>When sharing personally identifiable information or information
that is otherwise considered confidential to affected users, SET 
Transmitters and Receivers MUST have the appropriate legal agreements
and user consent or terms of service in place.</t>

<t>The propagation of subject identifiers can be perceived as personally
identifiable information. Where possible, SET Transmitters and Receivers
SHOULD devise approaches that prevent propagation — for example, the
passing of a hash value that requires the subscriber to already know
the subject.</t>

</section>
<section anchor="IANA" title="IANA Considerations">

<section anchor="iana_set_errors" title="Security Event Token Delivery Error Codes">
<t>This document defines Security Event Token Delivery Error Codes, for which IANA is asked to create and maintain a new registry titled “Security Event Token Delivery Error Codes”.  Initial values for the Security Event Token Delivery Error Codes registry are given in <xref target="tabErrors"/>.  Future assignments are to be made through the Expert Review registration policy (<xref target="BCP26"/>) and shall follow the template presented in <xref target="iana_set_errors_template"/>.</t>

<section anchor="iana_set_errors_template" title="Registration Template">

<t><list style="hanging">
  <t hangText='Error Code'><vspace blankLines='0'/>
  The name of the Security Event Token Delivery Error Code, as described in <xref target="error_codes"/>. The name MUST be a case-sensitive ASCII string consisting only of upper-case letters (“A” - “Z”), lower-case letters (“a” - “z”), and digits (“0” - “9”).</t>
  <t hangText='Descrption'><vspace blankLines='0'/>
  A brief human-readable description of the Security Event Token Delivery Error Code.</t>
  <t hangText='Change Controller'><vspace blankLines='0'/>
  For error codes registered by the IETF or its working groups, list “IETF Secevent Working Group”.  For all other error codes, list the name of the party responsible for the registration.  Contact information such as mailing address, email address, or phone number may also be provided.</t>
  <t hangText='Defining Document(s)'><vspace blankLines='0'/>
  A reference to the document or documents that define the Security Event Token Delivery Error Code. The definition MUST specify the name and description of the error code, and explain under what circumstances the error code may be used. URIs that can be used to retrieve copies of each document at no cost SHOULD be included.</t>
</list></t>

</section>
<section anchor="initial-registry-contents" title="Initial Registry Contents">

<section anchor="json" title="json">
<t><list style="symbols">
  <t>Name: json</t>
  <t>Description: Invalid JSON object.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jwtparse" title="jwtParse">
<t><list style="symbols">
  <t>Name: jwtParse</t>
  <t>Description: Invalid or unparsable JWT or JSON structure.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jwthdr" title="jwtHdr">
<t><list style="symbols">
  <t>Name: jwtHdr</t>
  <t>Description: In invalid JWT header was detected.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jwtcrypto" title="jwtCrypto">
<t><list style="symbols">
  <t>Name: jwtCrypto</t>
  <t>Description: Unable to parse due to unsupported algorithm.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jws" title="jws">
<t><list style="symbols">
  <t>Name: jws</t>
  <t>Description: Signature was not validated.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jwe" title="jwe">
<t><list style="symbols">
  <t>Name: jwe</t>
  <t>Description: Unable to decrypt JWE encoded data.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jwtaud" title="jwtAud">
<t><list style="symbols">
  <t>Name: jwtAud</t>
  <t>Description: Invalid audience value.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="jwtiss" title="jwtIss">
<t><list style="symbols">
  <t>Name: jwtIss</t>
  <t>Description: Issuer not recognized.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="settype" title="setType">
<t><list style="symbols">
  <t>Name: setType</t>
  <t>Description: An unexpected Event type was received.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="setparse" title="setParse">
<t><list style="symbols">
  <t>Name: setParse</t>
  <t>Description: Invalid structure was encountered such as an inability to parse or an incomplete set of Event claims.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="setdata" title="setData">
<t><list style="symbols">
  <t>Name: setData</t>
  <t>Description: SET event claims incomplete or invalid.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
<section anchor="dup" title="dup">
<t><list style="symbols">
  <t>Name: dup</t>
  <t>Description: A duplicate SET was received and has been ignored.</t>
  <t>Change Controller: IETF Secevent Working Group</t>
  <t>Defining Document(s): <xref target="error_codes"/> of this document.</t>
</list></t>

</section>
</section>
</section>
</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor="SET" target='https://www.rfc-editor.org/info/rfc8417'>
<front>
<title>Security Event Token (SET)</title>
<author initials='P.' surname='Hunt' fullname='P. Hunt' role='editor'><organization /></author>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='W.' surname='Denniss' fullname='W. Denniss'><organization /></author>
<author initials='M.' surname='Ansari' fullname='M. Ansari'><organization /></author>
<date year='2018' month='July' />
<abstract><t>This specification defines the Security Event Token (SET) data structure.  A SET describes statements of fact from the perspective of an issuer about a subject.  These statements of fact represent an event that occurred directly to or about a security subject, for example, a statement about the issuance or revocation of a token on behalf of a subject.  This specification is intended to enable representing security- and identity-related events.  A SET is a JSON Web Token (JWT), which can be optionally signed and/or encrypted. SETs can be distributed via protocols such as HTTP.</t></abstract>
</front>
<seriesInfo name='RFC' value='8417'/>
<seriesInfo name='DOI' value='10.17487/RFC8417'/>
</reference>



<reference  anchor="BCP26" target='https://www.rfc-editor.org/info/rfc8126'>
<front>
<title>Guidelines for Writing an IANA Considerations Section in RFCs</title>
<author initials='M.' surname='Cotton' fullname='M. Cotton'><organization /></author>
<author initials='B.' surname='Leiba' fullname='B. Leiba'><organization /></author>
<author initials='T.' surname='Narten' fullname='T. Narten'><organization /></author>
<date year='2017' month='June' />
<abstract><t>Many protocols make use of points of extensibility that use constants to identify various protocol parameters.  To ensure that the values in these fields do not have conflicting uses and to promote interoperability, their allocations are often coordinated by a central record keeper.  For IETF protocols, that role is filled by the Internet Assigned Numbers Authority (IANA).</t><t>To make assignments in a given registry prudently, guidance describing the conditions under which new values should be assigned, as well as when and how modifications to existing values can be made, is needed.  This document defines a framework for the documentation of these guidelines by specification authors, in order to assure that the provided guidance for the IANA Considerations is clear and addresses the various issues that are likely in the operation of a registry.</t><t>This is the third edition of this document; it obsoletes RFC 5226.</t></abstract>
</front>
<seriesInfo name='BCP' value='26'/>
<seriesInfo name='RFC' value='8126'/>
<seriesInfo name='DOI' value='10.17487/RFC8126'/>
</reference>



<reference  anchor="RFC7231" target='https://www.rfc-editor.org/info/rfc7231'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines the semantics of HTTP/1.1 messages, as expressed by request methods, request header fields, response status codes, and response header fields, along with the payload of messages (metadata and body content) and mechanisms for content negotiation.</t></abstract>
</front>
<seriesInfo name='RFC' value='7231'/>
<seriesInfo name='DOI' value='10.17487/RFC7231'/>
</reference>



<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC8174" target='https://www.rfc-editor.org/info/rfc8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author initials='B.' surname='Leiba' fullname='B. Leiba'><organization /></author>
<date year='2017' month='May' />
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>



<reference  anchor="RFC3986" target='https://www.rfc-editor.org/info/rfc3986'>
<front>
<title>Uniform Resource Identifier (URI): Generic Syntax</title>
<author initials='T.' surname='Berners-Lee' fullname='T. Berners-Lee'><organization /></author>
<author initials='R.' surname='Fielding' fullname='R. Fielding'><organization /></author>
<author initials='L.' surname='Masinter' fullname='L. Masinter'><organization /></author>
<date year='2005' month='January' />
<abstract><t>A Uniform Resource Identifier (URI) is a compact sequence of characters that identifies an abstract or physical resource.  This specification defines the generic URI syntax and a process for resolving URI references that might be in relative form, along with guidelines and security considerations for the use of URIs on the Internet.  The URI syntax defines a grammar that is a superset of all valid URIs, allowing an implementation to parse the common components of a URI reference without knowing the scheme-specific requirements of every possible identifier.  This specification does not define a generative grammar for URIs; that task is performed by the individual specifications of each URI scheme.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='STD' value='66'/>
<seriesInfo name='RFC' value='3986'/>
<seriesInfo name='DOI' value='10.17487/RFC3986'/>
</reference>



<reference  anchor="RFC7519" target='https://www.rfc-editor.org/info/rfc7519'>
<front>
<title>JSON Web Token (JWT)</title>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='J.' surname='Bradley' fullname='J. Bradley'><organization /></author>
<author initials='N.' surname='Sakimura' fullname='N. Sakimura'><organization /></author>
<date year='2015' month='May' />
<abstract><t>JSON Web Token (JWT) is a compact, URL-safe means of representing claims to be transferred between two parties.  The claims in a JWT are encoded as a JSON object that is used as the payload of a JSON Web Signature (JWS) structure or as the plaintext of a JSON Web Encryption (JWE) structure, enabling the claims to be digitally signed or integrity protected with a Message Authentication Code (MAC) and/or encrypted.</t></abstract>
</front>
<seriesInfo name='RFC' value='7519'/>
<seriesInfo name='DOI' value='10.17487/RFC7519'/>
</reference>



<reference  anchor="RFC7235" target='https://www.rfc-editor.org/info/rfc7235'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Authentication</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application- level protocol for distributed, collaborative, hypermedia information systems.  This document defines the HTTP Authentication framework.</t></abstract>
</front>
<seriesInfo name='RFC' value='7235'/>
<seriesInfo name='DOI' value='10.17487/RFC7235'/>
</reference>



<reference  anchor="RFC7515" target='https://www.rfc-editor.org/info/rfc7515'>
<front>
<title>JSON Web Signature (JWS)</title>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='J.' surname='Bradley' fullname='J. Bradley'><organization /></author>
<author initials='N.' surname='Sakimura' fullname='N. Sakimura'><organization /></author>
<date year='2015' month='May' />
<abstract><t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures.  Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification.  Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t></abstract>
</front>
<seriesInfo name='RFC' value='7515'/>
<seriesInfo name='DOI' value='10.17487/RFC7515'/>
</reference>



<reference  anchor="RFC5246" target='https://www.rfc-editor.org/info/rfc5246'>
<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.2</title>
<author initials='T.' surname='Dierks' fullname='T. Dierks'><organization /></author>
<author initials='E.' surname='Rescorla' fullname='E. Rescorla'><organization /></author>
<date year='2008' month='August' />
<abstract><t>This document specifies Version 1.2 of the Transport Layer Security (TLS) protocol.  The TLS protocol provides communications security over the Internet.  The protocol allows client/server applications to communicate in a way that is designed to prevent eavesdropping, tampering, or message forgery.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5246'/>
<seriesInfo name='DOI' value='10.17487/RFC5246'/>
</reference>



<reference  anchor="RFC6125" target='https://www.rfc-editor.org/info/rfc6125'>
<front>
<title>Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)</title>
<author initials='P.' surname='Saint-Andre' fullname='P. Saint-Andre'><organization /></author>
<author initials='J.' surname='Hodges' fullname='J. Hodges'><organization /></author>
<date year='2011' month='March' />
<abstract><t>Many application technologies enable secure communication between two entities by means of Internet Public Key Infrastructure Using X.509 (PKIX) certificates in the context of Transport Layer Security (TLS). This document specifies procedures for representing and verifying the identity of application services in such interactions.   [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6125'/>
<seriesInfo name='DOI' value='10.17487/RFC6125'/>
</reference>




    </references>

    <references title='Informative References'>





<reference  anchor="RFC7525" target='https://www.rfc-editor.org/info/rfc7525'>
<front>
<title>Recommendations for Secure Use of Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS)</title>
<author initials='Y.' surname='Sheffer' fullname='Y. Sheffer'><organization /></author>
<author initials='R.' surname='Holz' fullname='R. Holz'><organization /></author>
<author initials='P.' surname='Saint-Andre' fullname='P. Saint-Andre'><organization /></author>
<date year='2015' month='May' />
<abstract><t>Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS) are widely used to protect data exchanged over application protocols such as HTTP, SMTP, IMAP, POP, SIP, and XMPP.  Over the last few years, several serious attacks on TLS have emerged, including attacks on its most commonly used cipher suites and their modes of operation.  This document provides recommendations for improving the security of deployed services that use TLS and DTLS. The recommendations are applicable to the majority of use cases.</t></abstract>
</front>
<seriesInfo name='BCP' value='195'/>
<seriesInfo name='RFC' value='7525'/>
<seriesInfo name='DOI' value='10.17487/RFC7525'/>
</reference>




    </references>


<section anchor="other-streaming-specifications" title="Other Streaming Specifications">
<t>[[EDITORS NOTE: This section to be removed prior to publication]]</t>

<t>The following pub/sub, queuing, streaming systems were reviewed 
as possible solutions or as input to the current draft:</t>

<t>XMPP Events</t>

<t>The WG considered the XMPP events ands its ability to provide a single
messaging solution without the need for both polling and push modes.
The feeling was the size and methodology of XMPP was to far apart from
the current capabilities of the SECEVENTs community which focuses in
on HTTP based service delivery and authorization.</t>

<t>Amazon Simple Notification Service</t>

<t>Simple Notification Service, is a pub/sub messaging product from 
AWS. SNS supports a variety of subscriber types: HTTP/HTTPS endpoints, 
AWS Lambda functions, email addresses (as JSON or plain text), phone 
numbers (via SMS), and AWS SQS standard queues. It doesn’t directly 
support pull, but subscribers can get the pull model by creating an 
SQS queue and subscribing it to the topic. Note that this puts the 
cost of pull support back onto the subscriber, just as it is in the 
push model. It is not clear that one way is strictly better than the 
other; larger, sophisticated developers may be happy to own message 
persistence so they can have their own internal delivery guarantees. 
The long tail of OIDC clients may not care about that, or may fail 
to get it right. Regardless, I think we can learn something from the 
Delivery Policies supported by SNS, as well as the delivery controls 
that SQS offers (e.g. Visibility Timeout, Dead-Letter Queues). I’m 
not suggesting that we need all of these things in the spec, but 
they give an idea of what features people have found useful.</t>

<t>Other information:</t>

<t><list style="symbols">
  <t>API Reference: http://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/Welcome.html</t>
  <t>Visibility Timeouts: http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-visibility-timeout.html</t>
</list></t>

<t>Apache Kafka</t>

<t>Apache Kafka is an Apache open source project based upon TCP for 
distributed streaming. It prescribes some interesting general 
purpose features that seem to extend far beyond the simpler 
streaming model SECEVENTs is after. A comment from MS has been that 
Kafka does an acknowledge with poll combination event which seems 
to be a performance advantage. See: https://kafka.apache.org/intro</t>

<t>Google Pub/Sub</t>

<t>Google Pub Sub system favours a model whereby polling and acknowledgement
of events is done as separate endpoints as separate functions.</t>

<t>Information:</t>

<t><list style="symbols">
  <t>Cloud Overview - https://cloud.google.com/pubsub/</t>
  <t>Subscriber Overview - https://cloud.google.com/pubsub/docs/subscriber</t>
  <t>Subscriber Pull(poll) - https://cloud.google.com/pubsub/docs/pull</t>
</list></t>

</section>
<section anchor="acknowledgments" title="Acknowledgments">
<t>The editors would like to thanks the members of the SCIM WG which 
began discussions of provisioning events starting with: draft-hunt-scim-notify-00 in 2015.</t>

<t>The editors would like to thank the authors of draft-ietf-secevent-delivery-02,
on which this draft is based.</t>

<t>The editor would like to thank the participants in the the SECEVENTS
working group for their support of this specification.</t>

</section>
<section anchor="change-log" title="Change Log">
<t>Draft 00 - AB - Based on draft-ietf-secevent-delivery-02 with the 
following changes:</t>

<t><list style="symbols">
  <t>Renamed to “Push-Based SET Token Delivery Using HTTP”</t>
  <t>Removed references to the HTTP Polling delivery method.</t>
  <t>Removed informative reference to RFC6202.</t>
</list></t>

<t>Draft 01 - AB</t>

<t><list style="symbols">
  <t>Converted to Markdown</t>
  <t>Removed NumericDate definition (unused).</t>
  <t>Removed Event and Subject definitions (defined in SET).</t>
  <t>Removed text related to Event Streams.</t>
  <t>Removed Mike Jones and Phil Hunt as editors, per respective requests.</t>
  <t>Fixed area and workgroup to match secevent.</t>
  <t>Renamed Event Transmitter and Event Receiver to SET Transmitter and SET Receiver, respectively.</t>
  <t>Added IANA registry for SET Delivery Error Codes.</t>
  <t>Removed enumeration of HTTP authentication methods.</t>
  <t>Removed generally applicable guidance for HTTP, authorization tokens, and bearer tokens.</t>
  <t>Elaborated on guidance for DoS protection via authn, and moved it to Security Considerations.</t>
  <t>Removed redundant instruction to use <spanx style="verb">WWW-Authenticate</spanx> header.</t>
  <t>Removed further generally applicable guidance for authorization tokens.</t>
  <t>Removed bearer token from example delivery request, and removed text explaining it was an example only.</t>
</list></t>

</section>


  </back>

<!-- ##markdown-source:
H4sIAA+ehVsAA8U8a3fTSpLf+1f0hg8DM7GTmMeFzJmzN+QBZokT4pBAZuZA
W2rbivXwqCUHw2XO/o39e/tLth7drZbjcGHP7sA5gCW1uquq613V6nQ6okqq
VO/K09pMO8+V0bEcHp7L82Kmc3mg02Shy6V8a5J8Il+en58KNRqVerEr41KN
q06iq3HH6EgvdF51plU178xhJhEXUa4y/TvDOtvbIlYVDOtt7zztbD/t9H4R
EdyYFOVyV5oqFsm83JVVWZuqt739bLsnhCq12pVDHdVlUi3FTVHOJmVRz5t7
8hCXMfISHiHcL/CxmOkljI13ZT+vdJnrqnOAsAlhKpXHH1Ra5ADIUhsxT3bl
X6si2pSmKKtSjw38Wmb44++wfl1Ni3JXdISEP0luduVeVz5X0SxTOd1jzPfy
XI10murWs6KcqDz5rKqkyGFMpj4X/EBnKkl3ZZlEUwVv/qroUTcqMnpcFrhL
Ok6qogyXPu7KVwC4CRY+xil0Kp+Hj9rrwpCyMAVgHyydja5/zdwDvzBQdFfi
ju1ubRmdjjuJMbWOu0k+LrZCSE678mWdVwEgp9Mkbe61ITgpVZTqcPk5jO5O
YfSvSzUtCgKgjegQtrfSJqpDZFWZ1GblUXupF0UxaS+VGTf81wk9XLPYXm5g
6nAl4AX9WYUP2uvsJyYqWsvwG11Fb/wa4fPVlYB1BipWadJmHWCxfNl68h0b
WME7uYpXNlHkRZnBawu9S4NBvHfl2dH+00c7v9CN5/unvSd8a6f3RIhOpyPV
yFSwQ5U4nyZGmrmOknES0eIy1uME2EpOixuppNFlAhfFGH5Z8SMpB2hAhRgp
7sOC5oHM1FKONLxMKgXUTFXA23PQJUlRm3QpSz1JTEWPStAUOEqK2iseeXoy
PJcF3j1/PQTiJVUCmiKWyuA8oE1wxmqq/dtdRiVL4hi2H6S+LOI6IhRA4OUJ
DFkk+kZ+uZfgs6/iL3f9+T0qIIbyvtFafPnyb3Dx9esDGakc8QUq5iZLqmoN
xiJAGZXumUM7wBomhI35pfdw5+tXj31Xnk+1WA+PkpkG7qHViCoE3CJRDRW7
UohBUdF7KpX7RY4bBhcGaBHB1Vck3Jo/QActQY9KVKRGbhy/HZ5vbPL/cnBC
v88O37ztnx0e4O/hy73Xr/0PYUcMX568fX3Q/Gre3D85Pj4cHPDLcFe2bomN
47338AQ3b+Pk9Lx/Mth7vQGcALsO2wMmp86Q8cBAIPJA/AQ1PRCc2UTEIPFl
MoILeAe4Xu48svTt7ew8A/ryxdOdXx7Bxc1U57xYkcNm0aUA/lpKNZ9rVeIk
Kk1ho+dJpVKwEcCJBtghl1PYUuC+o6KELSjnhWEBAcMVq1GSkox8Utk8xf0C
aPOikm/PXkudR0UMulX08Rkio0sjibpzXUaIHA/B0QbXa6EE9o9YodfdgeUE
Y/Pw2dMnX78CNOdTMIOTaVFXbXoZwmKcTOoSwAESS2CBSsF8Zq4ihBBIoD8B
IwvQRbpzUwL+yJ9jQC9ECcfRKzJNgOOJvQxobbhIVZku0ZxmWrw96//BuDUA
8JsEwMk9QTblVC007B74H0BN0KA4CNfiuWEVEa4Kvw2uI8QBSkDi+BjkIV/L
x+uEWYFNywBVoHeW5EVaTJZWoGLmL904HORcWAepPYsTfuKEGzD9+D++i9Ma
PyE4BcXNrhBfduWCcPrLxvbGV0Ful9cWpQAzgMp1kQDS87JYJDEIfzVVldOh
hkUbWL2ARUo/yMhZDlwolGlpFSRReP2NBZxeosmtOuXFxmWRwRbghQiApb23
cyDDAJvG8yIhK9Ce4JYisvT0ruaXe2Q+Plgkl3eq5VtvnpYFsKu5NcOHOT+4
U6tdgmgj0DxfEcFGAxvSprf3BLkW7CIYEdSzSAMycn7j3fawTPLe06RdIcVL
ZyhQ4h0vIN1wlAVRjlDRgP/mXFgcCzQF7TxOrBi0NtFI4GUQ6U4B/nVUzDXq
GRJv+NPiTth9xpOQggFqAU6DGoF/irPynvp516IvFPybzStiC0tdP25EsUOR
+xtuKhD2xs4JtylgpdDRTUwGkvBHtGe3iF0b5iVkl60d0GnkAVgj3+LkkNtW
4PozTH6yHp1Gjvw+wS9SkkClOBmPAWJwXq09RSXtRXjJRF6lcD9fDaTWhFCb
IRs4bwgcdQm8oyAey7RcdXtK/Y9am4r4w+5UiAg6FiyTjiTkIfAE9l05KuIl
7bt8NTwZyEs9skrMuhiP0QQK1MYw5CM4BRXGaufLuf4IBk2hcgDe+gjKP7UI
b7mI7k/XN9VHtrBeZzbGqEdc/gT+h/edqHTl2zk8Jd0wr3h/WpwtIWgCNZbq
eKKNGycteGCp4G2j+ZrQFEOwOBAJ9LZ7m23LSPoWQfryBeOY08JUZBD3xkg7
U0coeeM6lfeDJeMHRGXHrrRnMlR5oFy994K+BpI5sX4tuONsQclCRuAsWe2J
4os3cMquPMnRnnl5DBbfvMXjklwoXEhY5BMnuujf5N6t9dOLAFq7voUYJqFI
bgHBBYTfyGr3dXfSlSaZwO49EAnqEI2qxxCxCbOMnXoJkydj5H/0A3kQBoQs
E/oWnYirZapI4OBfcqSArp0IgvIUdRqaFHyzKJNJgg5poyRuCAqMuBHDCO09
vJbinspoqqMZvI8WpXLMjgTG8CCrqxpm8m86AW2YboFoE/HXEBsdDONvI1kt
rYAVRVJ1vb7yb5CTFmyh59hAXwVU2bQiTmzvjUHzOhEbkNFlCf+yBiIfbi1X
IAuCtgz02OpUXtsKMshz8KvsSFrBWBcC7BeSJ2WmsKDPVUmwBmQAYgoyNAQO
AIZar9F1Yfxyz8vcHebXeWRWzYIzWtyYO7QcItloRQgtrZJ51H3YfdiKlR4E
tkA4P+muePMGdGEEC4+AbOBa90EpoJbzTL2imAySpEJtptAjINeZPUBnxsX9
ddbCedwPgp3kQKWxA+h/o3ySJEoBNN9CNsijcjm30W6gZL025QmJNKHmpqAU
VKMl08MumNHu4xVCoQ7xAkSEBVjFtxQ9MAIzHvpDQEQkhVASdz1ltGhdHwx3
xZ7BCMYbhcewX70WGCyE+hMYVEQTjG6Mck04fNwDFT2vnBl60Kj/W4BeQyzw
EanROALOsVvvA0wgvChJrtFrJYkIfRRj1IRiDvZGGhJZ2XDbDyB7JwRtEgaK
GCeWxbzENIX0OOBcYq15RQf9n//8p6D5t6wD6L0fAQ6kqXbRDQH127XhUjmn
HA9PvitXSSHCddqPwy0VevlqOnoRJSfJq3rUe5z2823Rxbs38eUro94Niqt3
ry6ibIYjivjl2U30uVi8fji4Vpfb9dW76XT07rm5Gj6+HvW2k9f7r7Krywsx
u3j3ah4t+08ul8FLvXkRX/ZXX1qcZRfp1cvjxcn5dDY4728PrsVR9v78Inmf
HT8afJ7tnJwPksHnaGew3zf9bLodv3z++SR5ulDZdOd98jjVL46q6MWn9HU2
WIyGz15cicuLWbR8unN1EPWOD97sHJ9fJceXb25ODt5vw/8AfNS7unz7sJ9u
m37+Ko16z3aibJA6qEUL7PW4Li7eDdIoP14MDs6ywfXh9nF2lp3AQlcHV2L6
/vr9p6vzaOf4+mh2MnwVA2HSOLuo46Ozx9GLi8/96/moPxsMz94evT3j51NY
cKkuX+3EL4QdkKWzfnKTjLKj6moIuOcXn2E3Tt5f7qR4P3px9Dl6GC+i7A1S
Ph1dHs1HL4+Td2J4k8TZkYkvaaJf+tlF9f4yNbQjD00Sv0xvYMIn/RxfNvhy
7/3lpx26l81nYtS72Fvd2/EFEuv5NHo4eDh6+GrWvy4Asmfbg5dvl6PsKU6y
E/UulufZkajcTKPeW3wwv9qH6+s321dAl8HBq9nV9az3PnsDq/Z7x7ATsO+f
rg5mOLZ+fykAPwI7niPRzhn/J/3ZfKFePCIuAxoArinTAiA5e/EMeHfn2fgN
sC/KEsTY9+YgN0MNlhgrHX/ZOGTJCWT5jD1kiMFF6JRKa+GsA32nTyacb0AD
Xl2eS44RQSvIxkiuaG6vk39pFCF54Gt8C8HrqNQUsrUWeY75mPO7lMZo3F4R
+uChoeg3IKFN0pzzYMcVLA8tcBeuYiNwLDZC39nUowwcQVxttLQKOkYvoPHQ
2UEX4KAjoFYh6vgjWEu0Fg7YJ7dtOUdW4EaDLQ/da1B9c8DcZoJoJfZj2Jeg
pJtNwBJo68KMwItP8iitY+1izsbMUOgEXhPcAI3Zcn8Ib+dho8d2gykAS70/
oNVjMhiOToDi5P+Kho70lAnZlX2OnyOIH8m/yK0HyP55QEb5aHv7AeUjXYrR
8doa0BPyfhKABItrMOuSoLWO3abnYCIRrEbORjEp1XyaRNZDtC7GuED/DGGm
2CAv8o6vL7gcHntGDXOIQKCUdRhROH1gjyzh2MGL7aQoYvQbzxwqK/I7bJjP
O55uLIryoCApsbuxQqSNFQd5o+VTALFSXTXMEjoM+BpPy5HbFHiZkpWND+eS
OiKUzRzmLPIJzJBrHRsrbRC7qcZHvOWedKV4rmEOverQb7ZTe46LdW5Q61Bs
RmlUr5t8UcWGghwq2sVhfEbpbBCtPEefKfBcBLFOg0gTbgaBoWm9EsQ8whaD
wP8w5NUqwIF1XAqPUgLEuv6UIneTwwUCKkbLFVTvSnitycU08RBxHvt6KUsI
y1WEWqryqqGVVUJX3Coym3fIW1iG0khJ+Ts0/JOWMnN5uFsKFjUxJRadzLu4
C2PaIFRXrZ2U94NVgVbe5wapvsNeBXpgVaPYlR22gi+9aKwWHL58oQFO6nwc
0lYSPre/qi1ocpfO0KtKAcF5rmJnnb/hypKnK74IKTdgzo3djbieb2ziJUM7
x1Fwm6xwirH90tMQVO4EQIIfG0J89cpnpL6pe1bJFuqddhfCaifFISG9X2Ce
/Ms9IsEHZJ47s9Pr4uXvXwKTjOCNwFYYVlo2mbxEBW0FhqMskBDeEBqG1VpK
hLO5ClixxYmoyxEIWPV7YeJMCSknJes8gc2lqncYj9uSS39vsCc3vhvZDTsF
3AV+UaM0MVMnFInK1Qejqw9szNZwakWpcGviOffDNWbwbTQpkJCubADK/1Oo
d4X4DZ/IC5UCUX6D4Z57xW/B/v+pxQ2/wVsoAZL+/AYuBG0RZ3mL0TUola6k
QTfVKeyjDgcBFHWOu0vYo+8Kd+hN78P6l1/GpVsBcLWLwBs2OXyjjNVhKFX2
nX3yJOCdtzmtgEVpgiGu6aLOMdWCVT7M/EwKINk0c28b6XAaouEghxpXwdyK
t2tusPaDm6ViTZ4MQHnoaquYg1QevL06bhNN1XGiMS27wD3w4/rG2HGY6ywJ
Aky0TvLkswMBuIRSLjhsLwfMfDLj0JtAAr9RPfa1W7vSxA84HiGvc+YxcKqm
1PGAW+BKoJ6oXMcBN7ZALVVpz7kEQJSqJDN+1QMgBBMX1KIORoQTFKXban4P
NKun8x5epWxKcI4QNzLr3jVKrIqFKVC5gqgdctbRqtVWoSSUDVCnfOkV8UuY
OEV5tcrT25671KfYc/bUmzFnBq23T/wuWFJs9c2XMmN0kVKg94jr5tZqsQMT
SJiws7HioAeqAr07qittbtd6YRIqv3630rT5tNBeYFgU2Deab1qDA9fh8jiK
gP5UsapyCAkVs78Dai1OFOyLqcACBP6d808sQnEr3XnbYXBEZf8JyLTQgtBP
zF3RiMVlxcRymLfXStgTF+1Rv53tfIJtV+obnTq+NuyC6CCXRz5my3+57TcC
2IIrmTVmAgh6BCLWGMgZV9+sOZLASoPN0FIToSpjKfid23ioFh4mAp9bUw8H
JkaFdxEfk216riOFi7QkoyksY66VHJFxnUfsvramFy6nG6qIJJp1QHwLX/jk
SMA2KoEKJ8EdLQVldfHaFijYZ4BZijB1gIqQokUswHDYrQGmYgkx3Ar6Nhzv
ShngRc6JQE0K2gbYNuYWKvlgNbZBMzsuNWl01iS28QEZW7j+GYCN2n3A9AP9
Ghdp3yKjXGOIe/KNxoIVLuTS7ZBT8rT0l3tztUwLFbdH/r4Ph1GJiXSuyqQw
trzlGabhjoKb3NZWsTzGNRXcS6KP2zIqZqjZJpi8oSsirJT+BL3nEvScdwKm
48T0nWTzqXxJxRpNNtbcDpqqVoqqSYVYhqGAwKLKKaeQF9EpA7SH7BKswPAN
2nKBx7ctQRScUIQRhq3s/ZqQUqf9vrCFz5q1PxtAQhJGYOC9uRqSU+i80oNB
Lq2NhkP9oDj7hMh0UrVEOfdNkr4i17XK32sqV0iw81oHiRhC7Phs4ePeoyd2
1zBQdaMC/S5WF/dLYrFNkwufwCoepDCe70o2A1zKg7VZwUdpgrC6ljQkL2AJ
j7eGw9fUTQQ8EOmyYo1qq7SbpOMY7ic7PVRx0re4MVN7IKI2442tKFgtNQZP
iFT3BlAf1AbQqhnI3KtBXkPtLA/gxwas/u/E6z1WsAc6R9ceswzcAnWbvW5X
W20P66JOMZFgnUwFO4dzUUbCtlOB7cdSoi1fw3vgJmHZkSwp7L2akRKfJpOp
XBRpnWlOftguD8vJtEHWJUQO35SoPJ1WDpte0NXE7jsQeCJ8ju6pKeoS+/eA
+dsJvWLuyevjmBERFqYag79jhdyiC3yfTCiFhN0ngS5CpbgqHLZBw7Ma38AG
jBJ8WOxtwe4EDBk2vTNr1RzuF1tSnD5Nl9iWxypspAHG0rYUY7kZbJWKVrXU
HQqdUt6crFubeqP2J/D7K9+syeoTxUqMNOtZNKDsQ3EDhLMNaHYq02pRcB6U
mSoyoUBtgwIJCLlWLuKdUDuRn+0vhVNWZFZvEtNS8FRzpImAaMiA4zHHGQAo
Nq7d7lRBKVjRVhSArxYpUz1BczMBY0tKQNjCJze+2ZYEbmakfm9mdpDGeQqu
rQ2pcTo18dRxqtV3sZXe5aCeVo4WTEAlcReVuvKSBAr2iLpf1uvmBlNhjV6s
F0hCwlSBQjLOJ+aoJwQYxJ74wWasSOmJOfIhZj+QjSComXJ06HolSWkaVw1g
F417smyuCTO3wj6mcBw4EpMEt1wTvLvWLfmxrNJqsuMHMkvnrU5q11P+3Ytv
EvE4hiIU0dybGctPBNSouJjuKzgKRPKmydtQPBj/SPYEfMq+TdPQphjfzvD9
FPPLoyKcwPOck5s+TkV7JY9qishZJ2W+O5OVSaZi7ZsHKe0MGhnM8ZmmIwZ2
BdskUoA1gDAI7CEdvcAeDOqdnlIjNmWkbNsw8CCSzGalXNJ1ZX8/uHFk2O7d
uwerBsudu1luMUbz4q0AtSEPxJUo1ZSic/7/d1J2866EsYtgu83UpJRGaCyx
9tVpfLi94X6/b3OYrt+EhBGb8gEg8Ht02aGCWapZCdzf2NuQHblxtQGxBBDz
9nNFzz/jc4rukgkq8fuAOt5/tvGAPAQAvAmtR2Wix6sBdhB//yhxYIV9MJET
TQ07Jew6tWQf+aavKOBN0vu2RNQ/PD8iewEQ39gTbnQADqQvxWacDRoxtP0d
7VNwKC+4BHKajdmaxez71cp2s8+y2nXIlfGGz2BiREShqg8Mm7fx4FZQzjiO
YSZYis4sNZdY75hiE2xeZyPralHBe+Sb02Pf4w/zHFgddd88oO0Bbx27dSNf
fPJKDONdf9TBNmijWvux3SJOjf0JA+uaU+pg2VCMUwW3eKKh8aY9TQFil2CO
kBKnCFOUlAAjZhEia0ual5wjho5IF/vTLB7WjDr/BBwa4NEF+gpzeyRLg7kL
DsZUWIWMCtjjJhx0eR6rOpwyPXM60ZZdDD2+R5lm8Uc5oHNq9iLIU++uTT/D
mFu8viu/waY06e2d3l1VIL7453DsOjBtrrsBtbmxFtzvSYT/FDRexmWIBF+u
oPC76fifAjnn/kPg/Z0W/D9UGvgZmJgAB7MK/bdKEz8D2JDlb3H7d5RGfgqr
7NVxyCd8uVZOVwo0PwXavgk5wl62oV1bJvrXA2trUh7a5roF7veVq34K+G0t
HtxYyx3/r4Wzn4I/VulC9O11WwV9XwHvXw9/THMw7LGdL2S7Hy4g/ktRwFwA
nggQJ+QoDytw+zNKeoUVo7uyTj50/9tf//bXw4P++cnZELsMD3c5uWZsd5BL
RmUFYj0vk6Lko9sj19/y97+v9irAwy1TjzblP2pdUwef8cCZJYQLmeGjOSWF
n3SQwPi0iTRFWnPKoaDTDEk+r/1BFfCHS4r98eMYu0K8Oz49tacRGYzLF2Ey
Cl+hIdoeWMQ6DmXEAhmziTN3QkBwXz1Ba0GhNKErsWKWjmKMEYQoGC6n7vgJ
HWjPcMu6TBKt6dmNPWhrQM8GHWV8kBe2liCkQZjgxP42rGjiySMR4hzBfQLb
us9cu9g/vDgcUH0hy+qcOk0pwTEGVsFDAUkuXKmQS4cuMeYz+rfKf1jppO97
4OlorOMNiqrJKbqMtPjGw03uv7ScIBuKzvkrB3ysSuxdDrtyOBi6+gC+s1AQ
JnA1L8xXYYfeLh83wH+GTR1ik+aRr1U2ipUvOa7GcEAJ7EVjv7+UHOFgBRqC
bA7tBMd2MA5LhsPjoQ2/cfLhm2FTQ0W21tgNC2xYaJP/93/+F/xKQDdU+NkE
V+uY12m6KUfANQ0enFycaNf1CXEu8kuK0TMloJiVpMAFaR3OvdgJuCbiZKGC
QCrqyrCTFKgOwsLcJiiUAjLSMg4qOkQE2qlYyQhuyusahqO8UW7XtgsJz9Mp
IZywExml+IkBWhRJd6OoixfTIESDkeYjUXhei2ahYP7PMlXlBJcyxXyKiZKI
8vYxdlpi1t/n9KdqPifZxM8VuGMuAkdgtgH9K1NwGymS0yWLk5LGU52VOggc
g09qVSq4i5tGgomtrhJbJ5A8J/2DfVs5YgAIQUyeubYKVVEGAJ9h/YF6TnEP
gVJlMplWXYxHgTNSyhX0cR/yGag4gg4pldO3BfD2pDlQKJqj4ZhyQ6FuQgrs
Kx0Mbx3V9yhFbGCM5GQ8skuBJ4KN7cW+SIxrPD9PMg14bIKpUXHnNW/NG+Lh
B7CnwL0giYizqScTzekrmvTG6jrKxpC6oUN81K1n2QNTDMzj/O0JTE+SrxJr
he9Q8mCsKQLBJHqBCoP2i0tloKHGdQr6ho1YkJqhc9d7p30grU2d+O/8gBE0
XXUDf/1HiLZASFkdEWJWC21h9tBUWzCNn2XrUqfwgu5OqyyFJW4TyvzvF4Jt
OHDM/KIGImyZf5jOwi/RqXgJXlzszTHfL/9DjWeqfWU7U+0tmA45COtlqECp
YBG0gZzvn/LZ3RhzItTUEzcml8QWU7S2OQM50fciUHbO9h0L14Tu94u4wGid
cRGvwiIe2qeRXha2iZwbPbBy7E08K7TGMCEqY+oW35NcFLXq/3jYuFDcLcG4
o1KlbubgvCrV6dDW4hSgB9nasEvF9g7hNCSalKe15V9Fh5jjBYg/6BAwNtry
kYH9neFyXUVE7hblZIu+tCMEf5JJnoL1Gtaj8FrCtfVhgBIL2BL6pA1hTOVU
kNvQI1jpi8djGdYTIWcup6Zlo8Heo5fZlNbDu96iUdd4W0D206IOvhXU8ahF
+KDbfD5qC0wxKPsteGfYWNUfeBFlYasxF+15TsHC3Ee8H3zvTGiTgOU9ebig
t+qcoq7mj4phMhlPVqfJzOZQVT5jnZhpNtvOI9rvH6MXyFwhRqCZc7DOBrwh
w17lmF0+vMJ9shsC5r2s3JEg92U4/OBXx0RJ1uGDjZ3tbVR9ve2dx7ae+A3w
uIBJjhWtuu5jc06hd7Z7m+inMdTs6+Nw5BMS9dZyd66GjiOYkrkiFmMdHbqJ
Q9HKybtUeVJ6/+Cu8wo2sHldTIJdEvSNOglE6ci95/DPc/eZjd/BleWZrGAT
N0S0hCHGPtOYsabE8cb3fvxvg97jSMUn3I3zlvhAnZXNlb67bvCmt0EL3U7b
Y3dIb7uHaX7GeoewJjHEb1SV9iNax6qcxfiFm2bOAQRt4BodoDgHWfr7dY7Z
8Qfh8vaAPJ5htqXpOPhw0P3wExaH5603qZ2STsczHDwTx4UmHHiMbEPf3qN1
/HfwUOtYduaWGCyqYBy48KcMaZ6j5BN6BTAvve8/ccjflqhIF/OWd4OdtCWM
la/y8F3fwgIzrJ5oIlK0vv3SgJUucYW9GNODVND1tVJk7Lv6dkNa6By3xrcD
rOuOdO2BwVvWZKZLd9AD49YJGHwyN7g2f0ml3TbH/SEcVKy0jPxRHqbgbZa0
dzC0NddBMUSNVdmQHKMTnNh+/styLUUFd/THdVuCEYPjhS04if1YkA3zsSns
4+XlZSdoGvSHv8MZxnVJztrvE2Ed+uFMIRHYJXBHcbx8+tOtfCIs4HRbpbIh
0Y1qHeXB8mtX/A9wiH+EQVQAAA==

-->

</rfc>

