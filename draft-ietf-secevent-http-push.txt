



Security Events Working Group                            A. Backman, Ed.
Internet-Draft                                                    Amazon
Intended status: Standards Track                                M. Jones
Expires: February 24, 2019                                     Microsoft
                                                                 P. Hunt
                                                                  Oracle
                                                            M. Scurtescu
                                                                  Google
                                                               M. Ansari
                                                                   Cisco
                                                              A. Nadalin
                                                               Microsoft
                                                         August 23, 2018


                Push-Based SET Token Delivery Using HTTP
                    draft-ietf-secevent-http-push-01

Abstract

   This specification defines how a Security Event Token (SET) may be
   delivered to an intended recipient using HTTP POST.  The SET is
   transmitted in the body of an HTTP POST request to a previously
   registered endpoint, and the recipient indicates success or failure
   via the HTTP response.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on February 24, 2019.

Copyright Notice

   Copyright (c) 2018 IETF Trust and the persons identified as the
   document authors.  All rights reserved.




Backman, et al.         Expires February 24, 2019               [Page 1]

Internet-Draft        draft-ietf-secevent-http-push          August 2018


   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
     1.1.  Notational Conventions  . . . . . . . . . . . . . . . . .   3
     1.2.  Definitions . . . . . . . . . . . . . . . . . . . . . . .   3
   2.  SET Delivery  . . . . . . . . . . . . . . . . . . . . . . . .   3
     2.1.  SET Transmission Request  . . . . . . . . . . . . . . . .   4
     2.2.  Successful Delivery . . . . . . . . . . . . . . . . . . .   5
     2.3.  Delivery Failure  . . . . . . . . . . . . . . . . . . . .   6
       2.3.1.  Security Event Token Delivery Error Codes . . . . . .   6
   3.  Authentication and Authorization  . . . . . . . . . . . . . .   8
   4.  Delivery Reliability  . . . . . . . . . . . . . . . . . . . .   8
   5.  Security Considerations . . . . . . . . . . . . . . . . . . .   9
     5.1.  Denial-of-Service . . . . . . . . . . . . . . . . . . . .   9
     5.2.  Authenticating Persisted SETs . . . . . . . . . . . . . .   9
   6.  Privacy Considerations  . . . . . . . . . . . . . . . . . . .   9
   7.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   9
     7.1.  Security Event Token Delivery Error Codes . . . . . . . .   9
       7.1.1.  Registration Template . . . . . . . . . . . . . . . .  10
       7.1.2.  Initial Registry Contents . . . . . . . . . . . . . .  10
   8.  Normative References  . . . . . . . . . . . . . . . . . . . .  13
   Appendix A.  Acknowledgments  . . . . . . . . . . . . . . . . . .  14
   Appendix B.  Change Log . . . . . . . . . . . . . . . . . . . . .  14
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  15

1.  Introduction

   This specification defines a mechanism by which a holder of a
   Security Event Token ([SET]) may deliver the SET to an intended
   recipient via HTTP POST [HTTP].

   Push-Based SET Delivery over HTTP POST is intended for scenarios
   where:

   o  The holder of the SET is capable of making outbound HTTP requests

   o  and the recipient is capable of hosting an HTTP endpoint that is
      accessible to the transmitter



Backman, et al.         Expires February 24, 2019               [Page 2]

Internet-Draft        draft-ietf-secevent-http-push          August 2018


   o  and the transmitter and recipient are known to one another

   o  and the transmitter and recipient have an out-of-band mechanism
      for exchanging configuration metadata and/or security keys

1.1.  Notational Conventions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in BCP
   14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

   Throughout this document all figures MAY contain spaces and extra
   line-wrapping for readability and space limitations.

1.2.  Definitions

   This specification assumes terminology defined in the Security Event
   Token specification [SET], as well as the terms defined below:

   SET Receipt Endpoint
      An HTTP endpoint operated by the SET Receiver, which is configured
      to receive SETs in accordance with this specification.

   SET Receiver
      An entity that is prepared to receive one or more SETs from a SET
      Transmitter.

   SET Transmitter
      An entity that is in possession of a SET that is to be transmitted
      to a SET Receiver.  This MAY be the issuer of the SET or an entity
      affiliated with the issuer, but this is neither guaranteed nor
      required to be the case.

2.  SET Delivery

   To deliver a SET to a given SET Receiver, the SET Transmitter makes a
   request to the SET Receipt Endpoint.  This request contains within it
   the SET itself.  The SET Receiver replies to this request with a
   response indicating whether or not the SET was successfully received
   and validated by the SET Receiver.

   Upon receipt of a SET, the SET Receiver SHOULD validate that all of
   the following are true:

   o  The SET Receiver can parse the SET




Backman, et al.         Expires February 24, 2019               [Page 3]

Internet-Draft        draft-ietf-secevent-http-push          August 2018


   o  The SET is authentic (i.e. it was issued by the issuer specified
      within the SET)

   o  The SET Receiver is identified as the intended audience of the SET

   The mechanisms by which the SET Receiver performs this validation are
   out-of-scope for this document.  SET parsing and issuer and audience
   identification are defined in [SET].  How the SET Receiver may
   validate authenticity is implementation specific, and will vary
   depending on authentication mechanisms, and whether the SET is signed
   and/or encrypted (See Section 3).

   The SET Receiver SHOULD ensure that the SET is persisted in a way
   that is sufficient to meet the SET Receiver's own reliability
   requirements, and MUST NOT expect or depend on a SET Transmitter to
   re-transmit or otherwise make available to the SET Receiver a SET
   once the SET Receiver acknowledges that it was received successfully.

   Once the SET has been validated and persisted, the SET Receiver
   SHOULD immediately return a response indicating that the SET was
   successfully delivered.  The SET Receiver SHOULD NOT perform
   extensive business logic that processes the event expressed by the
   SET prior to sending this response.  Such logic SHOULD be executed
   asynchronously from delivery, in order to minimize the expense and
   impact of SET delivery on the SET Transmitter.

   The SET Transmitter SHOULD NOT re-transmit a SET, unless the response
   from the SET Receipt Endpoint in previous transmissions indicated a
   potentially recoverable error (such as server unavailability that may
   be transient, or a decryption failure that may be due to
   misconfigured keys on the SET Receiver's side).  In the latter case,
   the SET Transmitter MAY re-transmit a SET, after an appropriate delay
   to avoid browning out the SET Receipt Endpoint (See Section 4).

   The SET Transmitter MAY provide an out-of-band mechanism by which a
   SET Receiver may be notified of delivery failures, and MAY retain
   SETs that it failed to deliver and make them available to the SET
   Receiver via other means.

2.1.  SET Transmission Request

   To transmit a SET to a given SET Receiver, the SET Transmitter makes
   an HTTP POST request to the SET Receiver's SET Receipt Endpoint.  The
   "Content-Type" header of this request MUST be "application/
   secevent+jwt" as defined in Sections 2.2 and 6.2 of [SET], and the
   request body MUST be the SET itself, represented as a [JWT].





Backman, et al.         Expires February 24, 2019               [Page 4]

Internet-Draft        draft-ietf-secevent-http-push          August 2018


   The mechanism by which the SET Transmitter determines the SET Receipt
   Endpoint is not defined by this specification and may be
   implementation-specific.

   The following is a non-normative example of a SET transmission
   request:

   POST /Events  HTTP/1.1

   Host: notify.examplerp.com
   Accept: application/json
   Content-Type: application/secevent+jwt

   eyJhbGciOiJub25lIn0
   .
   eyJwdWJsaXNoZXJVcmkiOiJodHRwczovL3NjaW0uZXhhbXBsZS5jb20iLCJmZWV
   kVXJpcyI6WyJodHRwczovL2podWIuZXhhbXBsZS5jb20vRmVlZHMvOThkNTI0Nj
   FmYTViYmM4Nzk1OTNiNzc1NCIsImh0dHBzOi8vamh1Yi5leGFtcGxlLmNvbS9GZ
   WVkcy81ZDc2MDQ1MTZiMWQwODY0MWQ3Njc2ZWU3Il0sInJlc291cmNlVXJpcyI6
   WyJodHRwczovL3NjaW0uZXhhbXBsZS5jb20vVXNlcnMvNDRmNjE0MmRmOTZiZDZ
   hYjYxZTc1MjFkOSJdLCJldmVudFR5cGVzIjpbIkNSRUFURSJdLCJhdHRyaWJ1dG
   VzIjpbImlkIiwibmFtZSIsInVzZXJOYW1lIiwicGFzc3dvcmQiLCJlbWFpbHMiX
   SwidmFsdWVzIjp7ImVtYWlscyI6W3sidHlwZSI6IndvcmsiLCJ2YWx1ZSI6Impk
   b2VAZXhhbXBsZS5jb20ifV0sInBhc3N3b3JkIjoibm90NHUybm8iLCJ1c2VyTmF
   tZSI6Impkb2UiLCJpZCI6IjQ0ZjYxNDJkZjk2YmQ2YWI2MWU3NTIxZDkiLCJuYW
   1lIjp7ImdpdmVuTmFtZSI6IkpvaG4iLCJmYW1pbHlOYW1lIjoiRG9lIn19fQ
   .

                Figure 1: Example SET Transmission Request

2.2.  Successful Delivery

   If the SET Receiver successfully parses and validates the SET
   transmitted in a SET Transmission Request, the SET Receipt Endpoint
   MUST respond with an HTTP Response Status Code of 202.  The body of
   the response MUST be empty.

   The following is a non-normative example of a response indicating
   that the SET was successfully delivered to the SET Receiver:

   HTTP/1.1 202 Accepted

              Figure 2: Example Successful Delivery Response








Backman, et al.         Expires February 24, 2019               [Page 5]

Internet-Draft        draft-ietf-secevent-http-push          August 2018


2.3.  Delivery Failure

   The SET Receipt Endpoint MAY indicate generic HTTP errors by
   responding with an appropriate HTTP Response Status Code, as
   described in Section 6 of [HTTP].

   If the SET Receiver encounters an error parsing or validating the SET
   transmitted in a SET Transmission Request, the SET Receipt Endpoint
   MUST respond with an HTTP Response Status Code of 400.  The "Content-
   Type" header of this response MUST be "application/json", and the
   body of the response MUST be a JSON object containing two name/value
   pairs:

   description
      A string whose value is a human-readable description of the error
      that occurred.

   err
      A string whose value is the name of a Security Event Token
      Delivery Error Code.

2.3.1.  Security Event Token Delivery Error Codes

   Security Event Token Delivery Error Codes are strings that identify a
   specific type of error that may occur when parsing or validating a
   SET.  Every Security Event Token Delivery Error Code MUST have a
   unique name registered in the IANA "Security Event Token Delivery
   Error Codes" registry established by Section 7.1.

   The following table presents the initial set of Error Codes that are
   registered in the IANA "Security Event Token Delivery Error Codes"
   registry:



















Backman, et al.         Expires February 24, 2019               [Page 6]

Internet-Draft        draft-ietf-secevent-http-push          August 2018


   +-----------+-------------------------------------------------------+
   | Error     | Description                                           |
   | Code      |                                                       |
   +-----------+-------------------------------------------------------+
   | json      | Invalid JSON object.                                  |
   |           |                                                       |
   | jwtParse  | Invalid or unparsable JWT or JSON structure.          |
   |           |                                                       |
   | jwtHdr    | In invalid JWT header was detected.                   |
   |           |                                                       |
   | jwtCrypto | Unable to parse due to unsupported algorithm.         |
   |           |                                                       |
   | jws       | Signature was not validated.                          |
   |           |                                                       |
   | jwe       | Unable to decrypt JWE encoded data.                   |
   |           |                                                       |
   | jwtAud    | Invalid audience value.                               |
   |           |                                                       |
   | jwtIss    | Issuer not recognized.                                |
   |           |                                                       |
   | setType   | An unexpected Event type was received.                |
   |           |                                                       |
   | setParse  | Invalid structure was encountered such as an          |
   |           | inability to parse or an incomplete set of Event      |
   |           | claims.                                               |
   |           |                                                       |
   | setData   | SET event claims incomplete or invalid.               |
   |           |                                                       |
   | dup       | A duplicate SET was received and has been ignored.    |
   +-----------+-------------------------------------------------------+

                     Table 1: SET Delivery Error Codes

   The following is a non-normative response indicating a delivery
   failure due to a failure during signature validation:

   HTTP/1.1 400 Bad Request
   Content-Type: application/json

   {
     "err":"jws",
     "description":"Unable to validate signature."

   }

                Figure 3: Example Delivery Failure Response





Backman, et al.         Expires February 24, 2019               [Page 7]

Internet-Draft        draft-ietf-secevent-http-push          August 2018


3.  Authentication and Authorization

   The mechanisms by which the SET Receipt Endpoint authenticates
   callers and confirms that they are authorized to transmit the SET are
   implementation specific and out-of-scope for this document.  SET
   Receipt Endpoints SHOULD use standard transportation layer security
   mechanisms (such as TLS 1.2 [TLS] or later).  When TLS is used, the
   SET Receipt Endpoint MUST support TLS 1.2 or greater, and MAY support
   other versions of TLS.

   If integrity and authenticity are not provided at the transportation
   layer, the SET Receipt Endpoint MUST sign and/or encrypt the SET in
   accordance with [JWS] and [JWE].  The SET Receipt Endpoint MAY use
   both transportation layer security and SET signatures and/or
   encryption.

   The SET Receipt Endpoint MAY use standard HTTP authentication
   mechanisms (such as OAuth 2.0 Bearer tokens [RFC6750]) in order to
   authenticate the caller.

   See Section 5 for further guidance.

4.  Delivery Reliability

   Delivery reliability requirements may vary from implementation to
   implementation.  This specification provides the response from the
   SET Receipt Endpoint in such a way as to provide the SET Transmitter
   with the information necessary to determine what further action is
   required, if any, in order to meet their requirements.  SET
   Transmitters with high reliability requirements may be tempted to
   always retry failed transmissions, however it should be noted that
   for many types of SET delivery errors, a retry is extremely unlikely
   to be successful.  For example, "json", "jwtParse", and "setParse"
   all indicate structural errors in the content of the SET that are
   likely to remain when re-transmitting the same SET.  Others such as
   "jws" or "jwe" may be transient, for example if cryptographic
   material has not been properly distributed to the SET Receipt
   Endpoint.

   Implementers SHOULD evaluate their reliability requirements and the
   impact of various retry mechanisms on the performance of their
   systems to determine the correct strategy for various error
   conditions.








Backman, et al.         Expires February 24, 2019               [Page 8]

Internet-Draft        draft-ietf-secevent-http-push          August 2018


5.  Security Considerations

5.1.  Denial-of-Service

   The SET Receipt Endpoint may be vulnerable to a denial-of-service
   attack where a malicious party makes a high volume of requests
   containing invalid SETs, causing the endpoint to expend significant
   resources on cryptographic operations that are bound to fail.  This
   may be mitigated by implementing an authentication mechanism with low
   runtime overhead, such as mutual TLS, or statically assigned bearer
   tokens.

5.2.  Authenticating Persisted SETs

   While the SET Receipt Endpoint can rely upon transport layer
   mechanisms, HTTP authentication methods, and/or other context from
   the transmission request to authenticate the SET Transmitter and
   validate the authenticity of the SET, this context is typically
   unavailable to systems that the SET Receipt Endpoint forwards the SET
   onto, or to systems that retrieve the SET from storage.  If the SET
   Receiver requires the ability to validate SET authenticity outside of
   the context of the SET Receipt Endpoint, then the SET Transmitter
   SHOULD sign the SET in accordance with [JWS], or encrypt it using an
   authenticated encryption scheme in accordance with [JWE].

6.  Privacy Considerations

   When sharing personally identifiable information or information that
   is otherwise considered confidential to affected users, SET
   Transmitters and Receivers MUST have the appropriate legal agreements
   and user consent or terms of service in place.

   The propagation of subject identifiers can be perceived as personally
   identifiable information.  Where possible, SET Transmitters and
   Receivers SHOULD devise approaches that prevent propagation -- for
   example, the passing of a hash value that requires the subscriber to
   already know the subject.

7.  IANA Considerations

7.1.  Security Event Token Delivery Error Codes

   This document defines Security Event Token Delivery Error Codes, for
   which IANA is asked to create and maintain a new registry titled
   "Security Event Token Delivery Error Codes".  Initial values for the
   Security Event Token Delivery Error Codes registry are given in
   Table 1.  Future assignments are to be made through the Expert Review




Backman, et al.         Expires February 24, 2019               [Page 9]

Internet-Draft        draft-ietf-secevent-http-push          August 2018


   registration policy ([BCP26]) and shall follow the template presented
   in Section 7.1.1.

7.1.1.  Registration Template

   Error Code
      The name of the Security Event Token Delivery Error Code, as
      described in Section 2.3.1.  The name MUST be a case-sensitive
      ASCII string consisting only of upper-case letters ("A" - "Z"),
      lower-case letters ("a" - "z"), and digits ("0" - "9").

   Descrption
      A brief human-readable description of the Security Event Token
      Delivery Error Code.

   Change Controller
      For error codes registered by the IETF or its working groups, list
      "IETF Secevent Working Group".  For all other error codes, list
      the name of the party responsible for the registration.  Contact
      information such as mailing address, email address, or phone
      number may also be provided.

   Defining Document(s)
      A reference to the document or documents that define the Security
      Event Token Delivery Error Code.  The definition MUST specify the
      name and description of the error code, and explain under what
      circumstances the error code may be used.  URIs that can be used
      to retrieve copies of each document at no cost SHOULD be included.

7.1.2.  Initial Registry Contents

7.1.2.1.  json

   o  Name: json

   o  Description: Invalid JSON object.

   o  Change Controller: IETF Secevent Working Group

   o  Defining Document(s): Section 2.3.1 of this document.

7.1.2.2.  jwtParse

   o  Name: jwtParse

   o  Description: Invalid or unparsable JWT or JSON structure.

   o  Change Controller: IETF Secevent Working Group



Backman, et al.         Expires February 24, 2019              [Page 10]

Internet-Draft        draft-ietf-secevent-http-push          August 2018


   o  Defining Document(s): Section 2.3.1 of this document.

7.1.2.3.  jwtHdr

   o  Name: jwtHdr

   o  Description: In invalid JWT header was detected.

   o  Change Controller: IETF Secevent Working Group

   o  Defining Document(s): Section 2.3.1 of this document.

7.1.2.4.  jwtCrypto

   o  Name: jwtCrypto

   o  Description: Unable to parse due to unsupported algorithm.

   o  Change Controller: IETF Secevent Working Group

   o  Defining Document(s): Section 2.3.1 of this document.

7.1.2.5.  jws

   o  Name: jws

   o  Description: Signature was not validated.

   o  Change Controller: IETF Secevent Working Group

   o  Defining Document(s): Section 2.3.1 of this document.

7.1.2.6.  jwe

   o  Name: jwe

   o  Description: Unable to decrypt JWE encoded data.

   o  Change Controller: IETF Secevent Working Group

   o  Defining Document(s): Section 2.3.1 of this document.

7.1.2.7.  jwtAud

   o  Name: jwtAud

   o  Description: Invalid audience value.




Backman, et al.         Expires February 24, 2019              [Page 11]

Internet-Draft        draft-ietf-secevent-http-push          August 2018


   o  Change Controller: IETF Secevent Working Group

   o  Defining Document(s): Section 2.3.1 of this document.

7.1.2.8.  jwtIss

   o  Name: jwtIss

   o  Description: Issuer not recognized.

   o  Change Controller: IETF Secevent Working Group

   o  Defining Document(s): Section 2.3.1 of this document.

7.1.2.9.  setType

   o  Name: setType

   o  Description: An unexpected Event type was received.

   o  Change Controller: IETF Secevent Working Group

   o  Defining Document(s): Section 2.3.1 of this document.

7.1.2.10.  setParse

   o  Name: setParse

   o  Description: Invalid structure was encountered such as an
      inability to parse or an incomplete set of Event claims.

   o  Change Controller: IETF Secevent Working Group

   o  Defining Document(s): Section 2.3.1 of this document.

7.1.2.11.  setData

   o  Name: setData

   o  Description: SET event claims incomplete or invalid.

   o  Change Controller: IETF Secevent Working Group

   o  Defining Document(s): Section 2.3.1 of this document.







Backman, et al.         Expires February 24, 2019              [Page 12]

Internet-Draft        draft-ietf-secevent-http-push          August 2018


7.1.2.12.  dup

   o  Name: dup

   o  Description: A duplicate SET was received and has been ignored.

   o  Change Controller: IETF Secevent Working Group

   o  Defining Document(s): Section 2.3.1 of this document.

8.  Normative References

   [BCP26]    Cotton, M., Leiba, B., and T. Narten, "Guidelines for
              Writing an IANA Considerations Section in RFCs", BCP 26,
              RFC 8126, DOI 10.17487/RFC8126, June 2017,
              <https://www.rfc-editor.org/info/rfc8126>.

   [HTTP]     Fielding, R., Ed. and J. Reschke, Ed., "Hypertext Transfer
              Protocol (HTTP/1.1): Semantics and Content", RFC 7231,
              DOI 10.17487/RFC7231, June 2014, <https://www.rfc-
              editor.org/info/rfc7231>.

   [JWE]      Jones, M. and J. Hildebrand, "JSON Web Encryption (JWE)",
              RFC 7516, DOI 10.17487/RFC7516, May 2015,
              <https://www.rfc-editor.org/info/rfc7516>.

   [JWS]      Jones, M., Bradley, J., and N. Sakimura, "JSON Web
              Signature (JWS)", RFC 7515, DOI 10.17487/RFC7515, May
              2015, <https://www.rfc-editor.org/info/rfc7515>.

   [JWT]      Jones, M., Bradley, J., and N. Sakimura, "JSON Web Token
              (JWT)", RFC 7519, DOI 10.17487/RFC7519, May 2015,
              <https://www.rfc-editor.org/info/rfc7519>.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997, <https://www.rfc-
              editor.org/info/rfc2119>.

   [RFC6750]  Jones, M. and D. Hardt, "The OAuth 2.0 Authorization
              Framework: Bearer Token Usage", RFC 6750,
              DOI 10.17487/RFC6750, October 2012, <https://www.rfc-
              editor.org/info/rfc6750>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/info/rfc8174>.




Backman, et al.         Expires February 24, 2019              [Page 13]

Internet-Draft        draft-ietf-secevent-http-push          August 2018


   [SET]      Hunt, P., Ed., Jones, M., Denniss, W., and M. Ansari,
              "Security Event Token (SET)", RFC 8417,
              DOI 10.17487/RFC8417, July 2018, <https://www.rfc-
              editor.org/info/rfc8417>.

   [TLS]      Dierks, T. and E. Rescorla, "The Transport Layer Security
              (TLS) Protocol Version 1.2", RFC 5246,
              DOI 10.17487/RFC5246, August 2008, <https://www.rfc-
              editor.org/info/rfc5246>.

Appendix A.  Acknowledgments

   The authors would like to thank the members of the SCIM WG which
   began discussions of provisioning events starting with: draft-hunt-
   scim-notify-00 in 2015.

   The authors would like to thank the authors of draft-ietf-secevent-
   delivery-02, on which this draft is based.

Appendix B.  Change Log

   Draft 00 - AB - Based on draft-ietf-secevent-delivery-02 with the
   following changes:

   o  Renamed to "Push-Based SET Token Delivery Using HTTP"

   o  Removed references to the HTTP Polling delivery method.

   o  Removed informative reference to RFC6202.

   Draft 01 - AB:

   o  Removed all text related to Event Streams.

   o  Added "SET Receipt Endpoint" definition.

   o  Removed Subject and Event definitions (already defined in SET).

   o  Removed NumericDate definiton (unused).

   o  Removed "Event Streams" definition (now unused).

   o  Replaced "Event Transmitter" with "SET Transmitter".

   o  Replaced "Event Receiver" with "SET Receiver".

   o  Replaced "Event Receiver endpoint" with "SET Receipt Endpoint".




Backman, et al.         Expires February 24, 2019              [Page 14]

Internet-Draft        draft-ietf-secevent-http-push          August 2018


   o  Removed enumeration of HTTP authentication schemes.

   o  Revised text related to authentication schemes and denial-of-
      service protection, and moved it to Security Considerations.

   o  Removed generally applicable guidance regarding HTTP, TLS,
      authorization tokens, and bearer tokens.

   o  Moved text regarding using JWS to determine authenticity of
      retained SETs to Security Considerations.

   o  Added guidance regarding retries and non-transient error
      conditions.

   o  Added IANA registry for SET delivery error codes.

Authors' Addresses

   Annabelle Backman (editor)
   Amazon

   Email: richanna@amazon.com


   Michael B. Jones
   Microsoft

   Email: mbj@microsoft.com
   URI:   http://self-issued.info/


   Phil Hunt
   Oracle

   Email: phil.hunt@yahoo.com


   Marius Scurtescu
   Google

   Email: mscurtescu@google.com


   Morteza Ansari
   Cisco

   Email: morteza.ansari@cisco.com




Backman, et al.         Expires February 24, 2019              [Page 15]

Internet-Draft        draft-ietf-secevent-http-push          August 2018


   Anthony Nadalin
   Microsoft

   Email: tonynad@microsoft.com















































Backman, et al.         Expires February 24, 2019              [Page 16]
